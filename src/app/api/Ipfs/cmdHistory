    1  exit
    2  whoami
    3  take dev
    4  pwd
    5  sudo apt-get upgrade
    6  sudo apt-get dist-upgrade
    7  reboot
    8  exit
    9  j dev
   10  sudo apt install autojump
   11  exit
   12  j dev
   13  python
   14  python3 --version
   15  vim /usr/share/doc/autojump/README.Debian
   16  vim .zshrc
   17  source ~/.zshrc
   18  chown o /usr/share/autojump/autojump.sh
   19  sudo chown o /usr/share/autojump/autojump.sh
   20  source ~/.zshrc
   21  cd dev
   22  take system
   23  git clone git://github.com/wting/autojump.git
   24  pass show
   25  sudo apt-get install pass
   26  pass show
   27  git clone git://github.com/wting/autojump.git
   28  cd ..
   29  ls
   30  take dark
   31  git clone https://github.com/darkrenaissance/darkfi.git
   32  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
   33  source "$HOME/.cargo/env"
   34  hs source
   35  sudo apt install hs
   36  exit
   37  vim ~/.zshrc
   38  cd dev/system
   39  cat ~/.ssh/id_ed25519.pub
   40  rm -rf ~/.ssh/id_ed25519.pub
   41  ssh-keygen -t ed25519 -C "drelwa@pm.me"
   42  cat ~/.ssh/id_ed25519.pub
   43  eval "$(ssh-agent -s)
   44  eval "$(ssh-agent -s)"
   45  ssh-add ~/.ssh/id_ed25519
   46  git clone git@github.com:rupa/z.git
   47  ls
   48  cd z
   49  ls
   50  pwd
   51  source ~/.zshrc
   52  ls -la
   53  cd dev
   54  ls
   55  ls -la
   56  cd system
   57  ls -la
   58  cd z
   59  ls -la
   60  source ~/.zshrc
   61  pwd
   62  sudo source ~/.zshrc
   63  exit
   64  vim .zshrc
   65  exit
   66  z tag
   67  cd dev
   68  cd dark
   69  ls
   70  cd darkfi
   71  sudo apt install htop
   72  sudo apt install tldr
   73  sudo apt install exa
   74  sudo source ~/.zshrc
   75  source ~/.zshrc
   76  exa
   77  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
   78  source "$HOME/.cargo/env"
   79  rustup toolchain install nightly
   80  rustup target add wasm32-unknown-unknown
   81  sh contrib/dependency_setup.sh
   82  make darkfid
   83  curl --remote-name https://prerelease.keybase.io/keybase_amd64.deb\nsudo apt install ./keybase_amd64.deb\nrun_keybase
   84  make darkfid
   85  ls
   86  sh contrib/dependency_setup.sh
   87  sudo apt autoremove
   88  sh contrib/dependency_setup.sh
   89  source ~/.zshrc
   90  make darkfid
   91  sudo apt-get install libssl-dev
   92  make darkfid
   93  ./darkfid
   94  j dark
   95  z dark
   96  ls
   97  cd darkfi
   98  make drk
   99  htop
  100  exit
  101  sudo apt-get install libout123-0
  102  ./drk -h
  103  ls
  104  ./darkfid
  105  exit
  106  nm-connection-editor
  107  j darkfi
  108  z darkfi
  109  ls
  110  ./darkfid
  111  exit
  112  j dark
  113  z dark
  114  ks
  115  ls 
  116  exa
  117  cd darkfi
  118  exa
  119  curl --remote-name https://prerelease.keybase.io/keybase_amd64.deb\nsudo apt install ./keybase_amd64.deb\nrun_keybase
  120  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d\n~/.emacs.d/bin/doom install
  121  exit
  122  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d\n~/.emacs.d/bin/doom install
  123  emacs
  124  sudo apt-get install emacs
  125  source ~/.zshrc
  126  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d\n~/.emacs.d/bin/doom install
  127  make BINS=ircd
  128  gedit ~/Desktop/Emacs.desktop
  129  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d\n~/.emacs.d/bin/doom install
  130  wich emacs
  131  which emacs
  132  exit
  133  tldr z
  134  z darkfi
  135  sudo apt remove emacs
  136  exit
  137  sudo apt install emacs
  138  emacs
  139  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d\n~/.emacs.d/bin/doom install
  140  j darfi
  141  z darkfi
  142  ls
  143  ls -la
  144  vim Package.list
  145  ls .doom.d
  146  ls
  147  rm .doom.d/
  148  rm -rf .doom.d
  149  history
  150  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d\n~/.emacs.d/bin/doom install
  151  emacs
  152  doom sync
  153  exit
  154  doom sync
  155  exit
  156  doom sync
  157  doom
  158  history
  159  emacs
  160  exit
  161  doom
  162  whereis doom
  163  emacs
  164  vim ~/.zshrc
  165  doom
  166  sudo apt remove emacs
  167  reboot
  168  sudo apt update
  169  sudo apt-get update
  170  sudo apt-get install emacs
  171  emacs
  172  doom sync
  173  ls ~/dev/system/emacs
  174  history
  175  git@github.com:doomemacs/doomemacs.git
  176  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d\n~/.emacs.d/bin/doom install
  177  sudo apt-get remove emacs
  178  exit
  179  sudo apt-get install emacs
  180  emacs
  181  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d\n~/.emacs.d/bin/doom install
  182  doom sync
  183  exit
  184  doom sync
  185  whereis doom
  186  vim ~/.szhrc
  187  vim ~/.zshrc
  188  emacs
  189  source ~/.zshrc
  190  doom sync
  191  exit
  192  doom sync
  193  emacs
  194  source ~/.zshrc
  195  doom sync
  196  emacs
  197  doom sync
  198  vim .zshrc
  199  source ~/.zshrc
  200  doom sync
  201  source ~/.zshrc
  202  cd ~/.oh-my-zsh/plugins
  203  ls
  204  pwd
  205  cd .oh-my-zsh/plugins
  206  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git\necho "source ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ${ZDOTDIR:-$HOME}/.zshrc
  207  hs
  208  hs -F "high"
  209  hs -F "source"
  210  source ~/.zshrc
  211  vim .zshrc
  212  vim ~/.zshrc
  213  source ./zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
  214  source ~/.zshrc
  215  sudo apt update
  216  sudo apt install python3-dev python3-pip python3-setuptools
  217  pip3 install thefuck --user
  218  source ~/.zshrc
  219  pip3 install thefuck --user
  220  source ~/.zshrc
  221  exit
  222  z darkfi
  223  z dev
  224  cd ~
  225  cd dev
  226  cd dark/darkfi
  227  make BINS=ircd
  228  sudo make install BINS=ircd
  229  htop
  230  exa
  231  cd dev
  232  ls
  233  ls -la
  234  sudo apt update
  235  sudo apt install weechat
  236  weechat
  237  ircd
  238  weechat
  239  ircd
  240  exit
  241  weechat
  242  ircd --gen-keypair\n
  243  pass insert ircdPrivateKey
  244  sudo gpgconf --kill dirmngr
  245  sudo chown -R $USER ~/.gnupg
  246  pass insert ircdPrivateKey
  247  pass show
  248  pass show irckPrivateKey
  249  pass show ircdPrivateKey
  250  source ~/.zshrc
  251  pass insert ircdPublicKey
  252  ls ~/.gnugpg
  253  ls 
  254  ls -la
  255  sudo find ~/.gnupg -type f -exec chmod 600 {} \;
  256  find ~/.gnupg -type d -exec chmod 700 {} \;
  257  ls -la
  258  exa
  259  ls /media/o/writable
  260  ping ibm.com
  261  cd ~
  262  ls
  263  cd Videos
  264  ls
  265  cd ../Dropbox
  266  ls
  267  cd ../Downloads
  268  cp -r /media/o/writable/dev/* ~/dev
  269  sudo cp -r /media/o/writable/dev/* ~/dev
  270  ls ~/dev/
  271  ls
  272  ls ~/dev/
  273  ls /media/o/writable/dev
  274  ls /media/o/writable/dev/solidity
  275  sudo cp -r /media/o/writable/dev/solidity/playground ~/dev/
  276  ls
  277  cd cd dev
  278  cd dev/
  279  ls
  280  take solidity
  281  cp -r ../playground *
  282  mv -r ../playground .
  283  mv  ../playground .
  284  sudo mv  ../playground .
  285  ls
  286  ls -la
  287  exa
  288  exa --help
  289  exa -l
  290  cd ..
  291  ls
  292  exa -l
  293  sudo chown -r o
  294  sudo chown -R o
  295  tldr chown
  296  tldr
  297  chown --help
  298  chown -R o *
  299  sudo chown -R o *
  300  exa -l
  301  node
  302  sudo apt update
  303  sudo apt install nodejs
  304  node --version
  305  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
  306  source ~/.zshrc
  307  nvm use 16
  308  nvm install 16
  309  nvm use 16
  310  whereis nvm
  311  source ~/.zshrc
  312  whereis nvm
  313  ls ~/.nvm
  314  ls ~/.nvm/alias
  315  ls ~/.nvm/alias/default
  316  vim ~/.nvm/alias/default
  317  vim ~/.nvm/versions
  318  ls ~/.nvm/versions/node/v16.19.1/bin/
  319  npm -g i solium
  320  npm install -g npm@9.5.0
  321  ls /home/anegg0/.nvm/versions/node/v16.18.0/bin
  322  ls /home/anegg0/.nvm/versions/node/v16.19.0/bin
  323  ls /home/anegg0/.nvm/versions/node/
  324  ls ~/.nvm/versions/node/
  325  ls ~/.nvm/versions/node/v16.19.1
  326  ls ~/.nvm/versions/node/v16.19.1/bin
  327  ls ~/.nvm/versions/node/v16.19.1/bin/solium
  328  ls ~/.nvm/versions/node/v16.19.1/bin/solium/
  329  doom sync
  330  doom env
  331  exit
  332  j dev
  333  z soli
  334  cd playground
  335  hs anvil
  336  curl -L https://foundry.paradigm.xyz | bash
  337  foundryup
  338  anvil -b 3
  339  cd ..
  340  ls
  341  cd ..
  342  ls
  343  cd palm
  344  ls
  345  cd training_repos/tutorial-hardhat-deploy
  346  npm i
  347  source ~/.zshrc
  348  npm i
  349  ls
  350  exa -l
  351  cd ..
  352  sudo chown -R o *
  353  cd training_repos
  354  cd tutorial-hardhat-deploy
  355  npm i
  356  npx hardhat node
  357  echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
  358  npx hardhat node
  359  vim hardhat.config.ts
  360  npx hardhat node
  361  exit
  362  ircd
  363  weechat
  364  exit
  365  hs hardhat
  366  npx hardhat node
  367  cd dev
  368  cd solidity
  369  ls
  370  cd ..
  371  ls
  372  cd training_repos/tutorial-hardhat-deploy
  373  cd /palm/training_repos/tutorial-hardhat-deploy
  374  ls
  375  cd palm/training_repos/tutorial-hardhat-deploy
  376  ls
  377  npx hardhat node
  378  ircd
  379  weechat
  380  exit
  381  j tuto
  382  npx hardhat node
  383  j tut
  384  npx hardhat node
  385  exit
  386  sudo apt update
  387  sudo apt install notmuch
  388  sudo apt install isync
  389  notmuch new
  390  notmuch setup
  391  notmuch new
  392  mbsync -a
  393  mbsync
  394  mbsync -a
  395  openssl s_client -starttls imap -connect 127.0.0.1:1143 -showcerts
  396  sudo vim ~/.config/protonmail/bridge-v3/cert.pem
  397  mbsync -a
  398  mkdir /home/o/mbsync/gmail
  399  mkdir /home/o/mbsync
  400  mkdir /home/o/mbsync/gmail
  401  mkdir /home/o/mbsync/protonmail
  402  mkdir /home/o/mbsync/gr0wing
  403  mbsync -a
  404  doom sync
  405  notmuch new
  406  mbsync -a
  407  npx hardhat node
  408  j tuto
  409  npx hardhat node
  410  htop
  411  mbsync -a
  412  solium
  413  whereis solium?
  414  whereis solium
  415  npm remove solium
  416  whereis solium
  417  npm uninstall solium
  418  whereis solium
  419  node --version
  420  source ~/.zshrc
  421  whereis solium
  422  npm i solhint
  423  npm i -g solhint
  424  whereis solhint
  425  ircd
  426  weechat
  427  history
  428  mbsync -a
  429  pass show protonmail
  430  pass insert protonmail
  431  mbsync -a
  432  doom sync
  433  mbsync -C -a -V
  434  sudo apt install afew
  435  afew
  436  afew --help
  437  afew -C
  438  afew -C $NOTMUCH_CONFIG
  439  afew -C ~/.notmuch-config
  440  afew -v -t --new
  441  afew -v -m --all
  442  mbsync -C -a -V
  443  exit
  444  notmuch new
  445  mbsync -C -a -V && notmuch new
  446  notmuch new
  447  htop
  448  afew -v -m --all
  449  j darkfi
  450  ls
  451  ./darkfid
  452  whereis solc
  453  hs -F "solc"
  454  solc --version
  455  pip3 install solc-select
  456  solc --version
  457  whereis solc
  458  doom sync
  459  source ~/.zshrc
  460  doom env
  461  vim ~/.zshrc
  462  z doom
  463  j doom
  464  cd ./.doom.d
  465  ls
  466  cd ../.emacs.d
  467  fzf
  468  find | grep "solidity-parse"
  469  cd ..
  470  find | grep "solidity-parse"
  471  j dev
  472  ls
  473  cd vr
  474  ls
  475  cd ..
  476  rm -rf vr
  477  sudo rm -rf vr
  478  ls
  479  j ~
  480  z ~
  481  find | grep "solidity-parse"
  482  grep --help
  483  find | grep -o  "solidity-parse"
  484  find | grep "solidity-parse"
  485  cd .emacs.d
  486  find | grep "solidity-parse"
  487  npm -g i prettier
  488  source ~/.zshrc
  489  doom env
  490  ircd
  491  weechat
  492  exit
  493  ./darkfid
  494  npm -G i prettier prettier-plugin-solidity
  495  doom env
  496  doom sync
  497  ircd
  498  j scaff
  499  z scaff
  500  z dev
  501  cd solidity/scaffold-eth
  502  node --version
  503  nvm list
  504  nvm install 18
  505  npm i -g yarn
  506  nvm --help | less
  507  nvm install 18 --lts
  508  ls
  509  yarn install
  510  git --help | less
  511  ls -la
  512  cd .git
  513  ls
  514  vim config
  515  git config --global --add safe.directory /home/o/dev/solidity/scaffold-eth
  516  yarn install
  517  cd ..
  518  pip install trash-cli
  519  source ~/.zshrc
  520  ls
  521  trash-put scaffold-eth
  522  ls
  523  whoami
  524  rm -rf scaffold-eth
  525  sudo rm -rf scaffold-eth
  526  ls
  527  git clone git@github.com:anegg0/scaffold-eth.git
  528  cd scaffold-eth
  529  pwd
  530  yarn i
  531  yarn install
  532  yarn chain
  533  z scaffold
  534  pwd
  535  yarn start
  536  node --version
  537  nvm use 18
  538  yarn start
  539  ircd
  540  weechat
  541  mbsync -C -a -V && notmuch new
  542  afew -v -m --all
  543  exit
  544  cd ..
  545  take radwallet
  546  git clone -b radwallet https://github.com/austintgriffith/scaffold-eth.git radwallet\n\ncd radwallet
  547  ls
  548  git clone -b radwallet https://github.com/austintgriffith/scaffold-eth.git radwallet\n\ncd radwallet
  549  ls
  550  node --version
  551  yarn install
  552  yarn start
  553  ls
  554  ls -la
  555  cd ..
  556  ls
  557  cd radwallet
  558  ls
  559  vim README.md
  560  cd ..
  561  ls
  562  cd ..
  563  ls
  564  rm -rf radwallet
  565  ls
  566  git clone -b  git@github.com:scaffold-eth/scaffold-eth-examples.git radwallet
  567  take radwallet
  568  git clone git@github.com:scaffold-eth/scaffold-eth-examples.git
  569  ls
  570  ls -la
  571  mv scaffold-eth-examples ..
  572  cd ..
  573  ls
  574  rmdir radwallet
  575  cd scaffold-eth-examples
  576  ls -la
  577  git status
  578  yarn install
  579  yarn start
  580  node --version
  581  NODE_OPTIONS=--openssl-legacy-provider npm run watch
  582  yarn start
  583  NODE_OPTIONS=--openssl-legacy-provider
  584  yarn start
  585  yarn install
  586  yarn start
  587  nvm use default
  588  npm -g yarn
  589  npm -g i yarn
  590  yarn install
  591  yarn start
  592  j scaff
  593  cd ../scaffold-eth-examples
  594  node --version
  595  yarn chain
  596  j scaff
  597  cd ../scaffold-eth-examples
  598  doom upgrade
  599  doom sync
  600  htop
  601  ls
  602  exit
  603  npm i chalk
  604  source ~/.zshrc
  605  npm i -g chalk
  606  npm delete chalk
  607  npm remove chalk
  608  z darkfi
  609  ls
  610  make BINS="darkwiki darkwikid"
  611  ls
  612  cd ..
  613  ls
  614  cd darkfi
  615  make BINS="darkwiki darkwikid"
  616  ls
  617  make BINS="darkwiki darkwikid"
  618  sudo make BINS="darkwiki darkwikid"
  619  ls
  620  vim bin/sh
  621  exa bin
  622  exa bin/darkwiki
  623  mbsync -C -a -V && notmuch new
  624  pass show gr0wing
  625  curl https://europe-west6-apt.pkg.dev/doc/repo-signing-key.gpg | sudo apt-key add -
  626  echo deb https://europe-west6-apt.pkg.dev/projects/radicle-services radicle-cli main | sudo tee -a /etc/apt/sources.list.d/radicle-registry.list
  627  sudo apt update\nsudo apt install radicle-cli
  628  rad auth
  629  pass list
  630  pass insert drelwaRadiclPassPhrase
  631  pass show drelwaRadiclPassPhrase
  632  npm i -g prettify
  633  doom env
  634  doom sync
  635  htop
  636  npx pnpm add -g pnpm
  637  hs -F source
  638  source ~/.zshrc
  639  npx pnpm add -g pnpm
  640  source ~/.zshrc
  641  npx pnpm add -g pnpm
  642  exit
  643  npx pnpm add -g pnpm
  644  pnpm setup
  645  npx pnpm setup
  646  source ~/.zshrc
  647  j soli
  648  ls
  649  take JollyRoger
  650  cd ..
  651  npx degit wighawag/jolly-roger JollyRoger
  652  ls 
  653  cd JollyRoger
  654  ls
  655  pnpm boot
  656  npx pnpm boot
  657  exiT
  658  htop
  659  doom upgrade
  660  doom sync
  661  doom upgrade
  662  doom sync
  663  cd ~
  664  rm -rf .doom.d
  665  rm -rf .emacs.d
  666  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
  667  vim ~/.zshrc
  668  yarn start
  669  exit
  670  vim ~/.zshrc
  671  source ~/.zshrc
  672  doom sync
  673  source ~/.zshrc
  674  doom sync
  675  j soli
  676  cd JollyRoger
  677  ls -la
  678  exit
  679  npx pnpm install
  680  ls -la
  681  git init
  682  git config --global init.defaultBranch main
  683  git status
  684  cd ..
  685  cd JollyRoger
  686  npx pnpm start
  687  sudo apt remove docker-desktop
  688  rm -r $HOME/.docker/desktop\nsudo rm /usr/local/bin/com.docker.cli\nsudo apt purge docker-desktop
  689  sudo apt-get update\nsudo apt-get install \\n    ca-certificates \\n    curl \\n    gnupg \\n    lsb-release
  690  sudo mkdir -m 0755 -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  691  echo \\n  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\n  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  692  z downl
  693  ls
  694  sudo apt-get update\nsudo apt-get install ./docker-desktop-<version>-<arch>.deb
  695  sudo apt-get install docker-desktop-4.17.0-amd64.deb
  696  sudo apt-get install ./docker-desktop-4.17.0-amd64.deb
  697  j joll
  698  ls
  699  npx pnpm start
  700  cd dev
  701  ls
  702  take docker
  703  docker run --name repo alpine/git clone https://github.com/docker/getting-started.git\ndocker cp repo:/git/getting-started/ .\n
  704  ls
  705  cd getting-started\ndocker build -t docker101tutorial .\n
  706  docker run -d -p 80:80 --name docker-tutorial docker101tutorial\n
  707  hs -F "source"
  708  source ~/.zshrc
  709  npx pnpm start
  710  sudo curl -L "https://github.com/docker/compose/releases/download/2.16.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  711  f2
  712  sudo chmod +x /usr/local/bin/docker-compose
  713  npx pnpm start
  714  ls /usr/local/bin
  715  source ~/.zshrc
  716  npx pnpm start
  717  pnpm start
  718  exit
  719  j jolly
  720  ls
  721  npx pnpm start
  722  sudo apt-get update
  723  sudo apt-get -y install xterm\n
  724  xterm
  725  exit
  726  npx pnpm start
  727  pnpm boot
  728  npx pnpm boot
  729  ls
  730  npx pnpm start
  731  exit
  732  npx pnpm start
  733  exit
  734  j jolly
  735  ls
  736  npx pnpm start
  737  /usr/local/bin/docker-compose
  738  ls /usr/local/bin/
  739  /usr/local/bin/docker-compose
  740  docker-compose --help
  741  sudo curl -L "https://github.com/docker/compose/releases/download/v2.16.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  742  npx pnpm start
  743  exit
  744  j jolly
  745  ls
  746  ls -la
  747  touch .projectile
  748  doom sync
  749  cd contracts
  750  cd src
  751  cd ..
  752  yarn
  753  npx mnpm stop
  754  npx pnpm stop
  755  cd ..
  756  npx pnpm stop
  757  doom sync
  758  doom env
  759  doom sync
  760  doom update
  761  doom updgrade
  762  doom upgrade
  763  doom sync
  764  node --version
  765  exit
  766  doom sync
  767  doom env
  768  j doom
  769  git init
  770  j emacs
  771  ls -la
  772  j doom
  773  git status
  774  git add .
  775  git commit -m "initial commit"
  776  doom upgrade
  777  ircd
  778  weechat
  779  j jolly
  780  ls
  781  cd contracts
  782  ls
  783  yarn
  784  exit
  785  j jolly
  786  yarn
  787  npx pnpm start
  788  cd ..
  789  npx pnpm start
  790  doom sync
  791  git pull
  792  git pull origin master
  793  ls -la
  794  git pull origin master
  795  trash ../JollyRoger
  796  cd ..
  797  ls
  798  j soli__
  799  ls
  800  j config
  801  cd ~/.config
  802  ls
  803  trash doom
  804  mv ~/.doom.d ~/.config/doom
  805  ls
  806  cd doom
  807  ls
  808  ls ~
  809  ls -la
  810  cd ~
  811  ls -la
  812  doom upgrade
  813  doom sync
  814  j soli
  815  doom sync
  816  doom upgrade
  817  doom env
  818  doom sync
  819  doom upgrade
  820  exit
  821  ls
  822  git clone git@github.com:wighawag/jolly-roger.git
  823  ls
  824  cd jolly-roger
  825  ls
  826  ls -la
  827  npx pnpm boot
  828  npx pnpm start
  829  cd ..
  830  take o
  831  cd ..
  832  rmdir o
  833  ls
  834  take jollyTry
  835  cd ..
  836  npx degit wighawag/jolly-roger jollyTry
  837  cd jollyTry
  838  ls
  839  npx pnpm boot
  840  ls -la
  841  git init
  842  npx pnpm start
  843  htop
  844  npx pnpm start
  845  npx pnpm boot
  846  npx pnpm start
  847  node --version
  848  node install 14
  849  nvm install 14
  850  node --version
  851  npx pnpm add -g pnpm
  852  source ~/.zshrc
  853  pnpm boot
  854  npx pnpm start
  855  pnpm prepare
  856  pnpm boot
  857  pnpm start
  858  ls
  859  htop
  860  nvm use 16
  861  node --help
  862  node --version
  863  pnpm start
  864  cd web
  865  ls
  866  git status
  867  ls -la
  868  cd ..
  869  ls
  870  pnpm start
  871  pnpm stop
  872  pnpm start
  873  pnpm stop
  874  exit
  875  `nm-connection-editor`
  876  exit
  877  doom upgrade
  878  doom sync
  879  doom upgrade
  880  whereis emacs
  881  hs -F "install emacs"
  882  sudo apt-get update
  883  sudo apt-get remove emacs
  884  whereis emacs
  885  sudo apt-get install emacs
  886  sudo apt-get remove emacs
  887  reboot
  888  whereis emacs
  889  sudo apt-get install emacs
  890  sudo apt-get upgrade emacs
  891  sudo apt-get remove emacs
  892  htop
  893  exit
  894  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
  895  htop
  896  sudo apt-get remove emacs emacs23 emacs24 emacs25 emacs26 \\n                    emacs-bin-common emacs-common emacs-el 
  897  whereis emacs
  898  z doom
  899  ls
  900  cd ..
  901  trash doom
  902  ls
  903  trash emacs
  904  ls
  905  sudo apt update
  906  sudo apt install emacs28
  907  sudo apt remove --autoremove emacs emacs-common
  908  sudo add-apt-repository ppa:kelleyk/emacs
  909  sudo apt update
  910  sudo apt install emacs28
  911  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
  912  doom sync
  913  ircd
  914  weechat
  915  exit
  916  source ~/.zshrc
  917  mbsync -C -a -V && notmuch new
  918  mbsync --help
  919  mbsync -C -a -L -V && notmuch new
  920  mbsync -C -a -V && notmuch new
  921  afew -v -m --all
  922  afew --help
  923  afew -a
  924  afew -a -t
  925  notmuch new
  926  notmuch tag +inbox +unread -new -- tag:new
  927  sudo apt-get update
  928  sudo apt-get install msmtp
  929  pass show gmail
  930  sudo chmod 700 /home/o/.msmtprc
  931  sudo chmod 600 /home/o/.msmtprc
  932  msmtp --version
  933  pass show gmail
  934  notmuch tag +inbox +unread -new -- tag:new
  935  notmuch new
  936  hs -F "notmuch"
  937  notmuch tag +inbox +unread -new -- tag:new
  938  mbsync -C -a -V && notmuch new
  939  notmuch tag +inbox +unread -new -- tag:new
  940  mbsync -C -a -V && notmuch new
  941  notmuch tag +inbox +unread -new -- tag:new
  942  hs notmuch
  943  notmuch tag +inbox +unread -new -- tag:new
  944  sudo apt install msmtp-mta
  945  mbsync -C -a -V && notmuch new
  946  notmuch tag +inbox +unread -new -- tag:new
  947  ircd
  948  weechat
  949  exit
  950  sudo apt-get update
  951  sudo apt-get vifm
  952  sudo apt-get install vifm
  953  vifm
  954  mbsync -C -a -V && notmuch new
  955  notmuch tag +inbox +unread -new -- tag:new
  956  man notmuch-hooks
  957  notmuch new
  958  mbsync -C -a -V && notmuch new
  959  cd emacs.d
  960  cd .emacs.d
  961  ls
  962  ls -la
  963  ls
  964  ls *doom*
  965  ls
  966  ls -la
  967  cd .config/emacs
  968  ls
  969  find | grep "notmuch new"
  970  fzf
  971  sudo apt install fzf
  972  fzf
  973  ls
  974  cd modules/email/notmuch
  975  ls
  976  vim config.el
  977  ls
  978  chmod +x ~/scripts/notmuch-hook.sh
  979  vim ~/scripts/notmuch-hook.sh
  980  touch ~/scripts/notmuch-poll.sh
  981  vim ~/scripts/notmuch-poll.sh
  982  chmod +x ~/scripts/notmuch-poll.sh
  983  notmuch new
  984  exit
  985  hs mbsync
  986  mbsync -C -a -V && notmuch new
  987  history
  988  mbsync -C -a -V && notmuch new
  989  j playg
  990  git rm -r --cached .
  991  mbsync -C -a -V && notmuch new
  992  notmuch new
  993  hs notmuch
  994  notmuch tag +inbox +unread -new -- tag:new
  995  afew -a -t
  996  hs afew
  997  afew -C ~/.notmuch-config
  998  afew -v -m --all
  999  mbsync -C -a -V && notmuch new
 1000  afew -v -m --all
 1001  sudo apt remove afew
 1002  mbsync -C -a -V && notmuch new
 1003  vim ~/.config/emacs/modules/email/notmuch/config.el
 1004  doom sync
 1005  j notmuch
 1006  ls
 1007  cd ..
 1008  ls
 1009  rm -rf notmuch
 1010  ls
 1011  doom sync
 1012  doom doctor
 1013  sudo apt update
 1014  sudo apt ripgrep
 1015  sudo apt install ripgrep
 1016  doom doctor
 1017  sudo apt install fd
 1018  sudo apt install fd-find
 1019  doom doctor
 1020  sudo apt install cmake
 1021  doom doctor
 1022  sudo apt install markdown
 1023  doom doctor
 1024  sudo apt install shfmt
 1025  sudo apt install shellcheck
 1026  doom doctor
 1027  sudo apt install rust-analyzer
 1028  cd ~/.local
 1029  ls
 1030  curl -L https://github.com/rust-lang/rust-analyzer/releases/latest/download/rust-analyzer-x86_64-unknown-linux-gnu.gz | gunzip -c - > ~/.local/bin/rust-analyzer
 1031  chmod +x ~/.local/bin/rust-analyzer
 1032  doom doctor
 1033  doom sync
 1034  doom doctor
 1035  doom sync
 1036  notmuch setup
 1037  doom sync
 1038  sudo apt install mu4e
 1039  doom sync
 1040  whereis mu4e
 1041  source ~/.zshrc
 1042  whereis mu4e
 1043  sudo apt-get -y install mu4e
 1044  sudo apt -y install mu4e
 1045  sudo apt-get remove mu4e
 1046  whereis mu4e
 1047  sudo apt update
 1048  sudo apt -y install mu4e
 1049  source ~/.zshrc
 1050  whereis mu4e
 1051  sudo apt -y install maildir-utils
 1052  sudo apt -y install mu
 1053  doom sync
 1054  mu init --maildir ~/.mail --my-address gael.blanchemain@gmail.com 
 1055  mu index
 1056  mkdir ~/.mail
 1057  mu init --maildir ~/.mail --my-address gael.blanchemain@gmail.com 
 1058  mu index
 1059  doom sync
 1060  exit
 1061  hs notmuch
 1062  mbsync -C -a -V && notmuch new
 1063  sudo apt update
 1064  sudo apt afew
 1065  sudo apt install afew
 1066  doom sync
 1067  ircd
 1068  weec
 1069  weechat
 1070  sudo apt-get install chrome-gnome-shell
 1071  j dev
 1072  git clone https://github.com/ckissane/blur-me\ncd blur-me\nmake install
 1073  source ~/.zshrc
 1074  rm -rf /home/o/.local/share/gnome-shell/extensions/blur-me@nunchucks
 1075  j dev
 1076  cd solidity
 1077  git clone git@github.com:helix-foundation/currency.git
 1078  cd currency
 1079  ls -la
 1080  npm ci
 1081  npm run test
 1082  j solid
 1083  git clone git@github.com:OpenZeppelin/openzeppelin-contracts.git
 1084  git status
 1085  npm run test
 1086  npm upgrade --help
 1087  npm update @openzeppelin/contracts
 1088  npm upgrade --help
 1089  npm upgrade @openzeppelin/contracts
 1090  npm upgrade @openzeppelin/contracts@4.7.0
 1091  npm upgrade openzeppelin/contracts@4.7.0
 1092  npm upgrade --help
 1093  npm help update
 1094  npm update @openzeppelin/contracts@4.7.0
 1095  npm update @openzeppelin/contracts
 1096  npm install @openzeppelin/contracts@4.7.0
 1097  exit
 1098  npm install openzeppelin/contracts@4.8.0
 1099  npm install @openzeppelin/contracts@4.8.0
 1100  npm run test
 1101  npm i
 1102  npm run test
 1103  npm install @openzeppelin/contracts@4.8.0 --force
 1104  npm remove @openzeppelin/contracts
 1105  npm install @openzeppelin/contracts@4.8.0
 1106  exit
 1107  npm remove @openzeppelin/contracts
 1108  npm install @openzeppelin/contracts@4.8.0
 1109  doom clean
 1110  doom sync
 1111  doom doctor
 1112  sudo apt update
 1113  sudo apt alot
 1114  z ~/.emacs
 1115  cd ~/.config/emacs
 1116  git status
 1117  vifm
 1118  doom sync
 1119  mbsync -C -a -V && notmuch new
 1120  j roam
 1121  j dropbox
 1122  cd Org/roam
 1123  touch schedule.org
 1124  htop
 1125  ircd
 1126  weechat
 1127  exit
 1128  htop
 1129  exit
 1130  htop
 1131  hs libtool
 1132  hs -F "libtool"
 1133  sudo apt update
 1134  sudo apt install libtool
 1135  doom env
 1136  doom sync
 1137  source ~/.zshrc
 1138  doom sync
 1139  doom upgrade
 1140  z config
 1141  cd emacs
 1142  ls -la
 1143  touch .projectile
 1144  j dev
 1145  ls
 1146  cd rust
 1147  ls
 1148  rustup udpate
 1149  rustup update
 1150  j darfi
 1151  drk
 1152  ./drk
 1153  hs drk
 1154  $ ./darkfid\n
 1155  ./darkfid\n
 1156  j darkfi
 1157  ./drk wallet --balances
 1158  ./drk wallet --balance
 1159  ./drk wallet --initialize
 1160  ./drk wallet --keygen
 1161  ./drk scan
 1162  doom sync
 1163  cargo install --git "https://github.com/lzanini/mdbook-katex"
 1164  cargo install --git "https://github.com/badboy/mdbook-toc"
 1165  cargo install --git "https://github.com/badboy/mdbook-mermaid"
 1166  mdbook-katex
 1167  cargo install --git https://github.com/rust-lang/mdBook.git mdbook\n
 1168  source ~/.zshrc
 1169  mdbook serve
 1170  ls
 1171  cd doc
 1172  ls
 1173  mdbook serve
 1174  exit
 1175  whereis protonmail-bridge
 1176  shutdown
 1177  exit
 1178  z dev
 1179  sudo chmod -R 700 *
 1180  sudo chmod -R 740 *
 1181  sudo chown o *
 1182  sudo chown -R  o *
 1183  chown --help
 1184  sudo chown -R  o ~/dev
 1185  sudo chown -R  o ~/dev/rust/playground
 1186  sudo chgrp -R  o ~/dev/rust/playground
 1187  sudo chgrp -R  o ~/dev/
 1188  htop
 1189  sudo apt install libtool
 1190  sudo apt install libvterm
 1191  sudo apt install libtool-bin
 1192  doom env
 1193  doom sync
 1194  ls
 1195  cd ..
 1196  ls
 1197  cd ..
 1198  ls
 1199  cd example/
 1200  ls
 1201  sudo apt install tmux
 1202  tmux new
 1203  pass list
 1204  htop
 1205  ircd
 1206  weechat
 1207  exit
 1208  pip3 install buku
 1209  pip3 uninstall buku
 1210  sudo apt install buku
 1211  source ~/.zshrc
 1212  buku --help
 1213  buku -i ~/Downloads/bookmarks_3_13_23.html
 1214  buku --h
 1215  buku --h | less
 1216  buku -s rock
 1217  buku -s 'rock"
 1218  buku -s "rock"
 1219  buku -s "sanctuary"
 1220  buku -s rust
 1221  buku -s hex
 1222  buku -s "hex"
 1223  buku -s converter
 1224  doom sync
 1225  doom doctor
 1226  doom sync
 1227  doom doctor
 1228  z emacs
 1229  git status
 1230  doom upgrade
 1231  doom sync
 1232  buku -s "claim"
 1233  z /.emacs.d
 1234  cd ../../.emacs.d
 1235  z emacs
 1236  j emacs
 1237  cd ..
 1238  ls
 1239  cd lisp
 1240  ls
 1241  git clone git@github.com:emacs-openai/codegpt.git
 1242  ls
 1243  doom sync
 1244  ls
 1245  exa
 1246  exa -f
 1247  exa --help | less
 1248  exa -l  --help | less
 1249  exa -l
 1250  cd codegpt
 1251  exa -l
 1252  ls -la
 1253  doom sync
 1254  source ~/.zshrc
 1255  doom sync
 1256  cd ~
 1257  doom sync
 1258  doom doctor
 1259  doom sync
 1260  pip install sexpdata==0.0.3\npip install epc\npip install git+https://github.com/mmabrouk/chatgpt-wrapper\nchatgpt install
 1261  doom env
 1262  playwright install
 1263  playwright --help
 1264  pip install sexpdata==0.0.3\npip install epc\npip install git+https://github.com/mmabrouk/chatgpt-wrapper\nchatgpt install
 1265  chatgpt
 1266  doom sync
 1267  source ~/.zshrc
 1268  doom env
 1269  chatgpt
 1270  htop
 1271  chatgpt
 1272  pkill ms-playwright/firefox && chatgpt install
 1273  python-interpreter
 1274  doom doctor
 1275  chatgpt
 1276  doom sync
 1277  openai
 1278  chatgpt
 1279  hs -F "gpt"
 1280  chatgpt
 1281  htop
 1282  chatgpt
 1283  ls
 1284  ls -la
 1285  ls .local
 1286  ls scripts
 1287  vim
 1288  touch ~/scripts/kill-all.sh
 1289  vim  ~/scripts/kill-all.sh
 1290  sudo chmod +x  ~/scripts/kill-all.sh
 1291  vim ~/.zshrc
 1292  htop
 1293  kill-all emacs
 1294  exit
 1295  tmux new
 1296  z emacs
 1297  ircd
 1298  weechat
 1299  z emacs
 1300  exit
 1301  kill-all emacs
 1302  cd ../doom
 1303  touch .projectile
 1304  j solid
 1305  git clone git@github.com:HereNotThere/Lupi.git
 1306  ls
 1307  cd Lupi
 1308  ls -la
 1309  touch .projectile
 1310  j lupi
 1311  ls
 1312  hs -F "slither"
 1313  pip3 install slither-analyzer
 1314  cd contracts
 1315  ls
 1316  source ~/.zshrc
 1317  slither Lupi.sol
 1318  slither --help | less
 1319  ls
 1320  yarn i
 1321  yarn install
 1322  slither Lupi.sol
 1323  slither Lupi.sol | less
 1324  npx hardhat
 1325  npx hardhat compile
 1326  slither Lupi.sol | less
 1327  slither Lupi.sol
 1328  solc-select --help | less
 1329  solc-select upgrade
 1330  solc-select versions
 1331  solc --version
 1332  $ pip3 install mythril
 1333  pip3 install mythril
 1334  pip install wheel
 1335  pip3 install wheel
 1336  python -m pip install wheel
 1337  python3 -m pip install wheel
 1338  source ~/.zshrc
 1339  python -m pip install wheel
 1340  pip3 install --upgrade pip
 1341  pip3 install --upgrade setuptools
 1342  pip3 install mythril
 1343  source ~/.zshrc
 1344  myth analyze Lupi.sol
 1345  myth --help | less
 1346  npx hardhat
 1347  npx hardhat flatten --help
 1348  npx hardhat flatten ./contracts/Lupi.sol
 1349  npx hardhat flatten ./contracts/Lupi.sol > Lupi_flattened.sol
 1350  myth analyze ../Lupi_flattened.sol
 1351  ls
 1352  slither ../Lupi_flattened.sol
 1353  slither --help | less
 1354  slither --checklist ../Lupi_flattened.sol
 1355  ls
 1356  slither --checklist ../Lupi_flattened.sol | less
 1357  chatgpt
 1358  chatgpt install
 1359  openai
 1360  source ~/.zshrc
 1361  chatgpt
 1362  ls
 1363  sudo chmod +x email-fetch
 1364  ls
 1365  crontab -e
 1366  exit
 1367  systemctl enable --now cron
 1368  source ~/.zshrc
 1369  crontab -e
 1370  vim ~/.zshrc
 1371  source ~/.zshrc
 1372  crontab -e
 1373  source ~/.zshrc
 1374  chatgpt
 1375  whereis chatgpt
 1376  fzf
 1377  hs -F "chat"
 1378  pip uninstall chatgpt
 1379  source ~/.zshrc
 1380  pip install chatgpt-cli-tool
 1381  source ~/.zshrc
 1382  cd ~
 1383  ls
 1384  pwd
 1385  ls -la | lesss
 1386  ls -la | less
 1387  take .chatgpt-cli
 1388  touch .env
 1389  vim .env
 1390  source ~/.zshrc
 1391  chatgpt-cli
 1392  cd ../playground
 1393  cd ../../playground
 1394  ls
 1395  chatgpt-cli
 1396  fzf
 1397  exit
 1398  find | grep "soliumrc.json"\n
 1399  cp ./dev/wallets/EthWallet/.soliumrc.json ./dev/solidity/playground/.soliumrc.json
 1400  whereis solic
 1401  whereis solc
 1402  whereis solhint
 1403  sudo apt update
 1404  sudo apt install ncspot
 1405  sudo apt install pkgconf
 1406  sudo apt install libdbus-1-dev libncursesw5-dev libpulse-dev libssl-dev libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev
 1407  cargo install ncspot
 1408  source ~/.zshrc
 1409  ncspot
 1410  mbsync -C -a -V && notmuch new
 1411  sudo apt update
 1412  sudo apt install afew
 1413  ncspot
 1414  buku solidity
 1415  ncspot
 1416  sudo apt-get install chrome-gnome-shell
 1417  sudo apt install mpv7
 1418  sudo apt install mpv
 1419  sudo apt install jq
 1420  sudo apt install yt-dlp
 1421  sudo apt install demenu
 1422  z downloads
 1423  cd demenu
 1424  ls
 1425  cd dmenu-5.2
 1426  ls
 1427  vim config.mk
 1428  sudo make clean install
 1429  j dev
 1430  ls
 1431  cd syst
 1432  cd system
 1433  ls
 1434  git clone https://github.com/pystardust/ytfzf\ncd ytfzf\nsudo make install doc
 1435  source ~/.zshrc
 1436  ytfzf -t anal
 1437  ytfzf caca
 1438  ytfzf bashung
 1439  ytfzf bashung climax
 1440  ytfzf le juif
 1441  yt-dlp
 1442  yt-dlp --help | less
 1443  j system
 1444  sudo apt update
 1445  sudo apt xclip
 1446  sudo apt install xclip
 1447  sudo apt install xdotools
 1448  echo $XDG_SESSION_TYPE
 1449  sudo apt-get install xdotool
 1450  whereis xprop
 1451  doom sync
 1452  source ~/.zshrc
 1453  whereis bind
 1454  sudo apt install bind
 1455  bind9 
 1456  bash
 1457  exit
 1458  bindkey --help | less
 1459  bindkey --man
 1460  bindkey --m
 1461  bindkey
 1462  bindkey | less
 1463  source ~/.zshrc
 1464  sudo apt install dconf-editor
 1465  dconf-editor
 1466  gsettings
 1467  source ~/.zshrc
 1468  zle --help | less
 1469  zle --help
 1470  zle --man
 1471  zle --m
 1472  man zle
 1473  doom everywhere
 1474  source ~/.zshrc
 1475  doom everywhere
 1476  emacsclient --eval "(emacs-everywhere)"
 1477  doom sync
 1478  doom everywhere
 1479  emacsclient --eval "(emacs-everywhere)"
 1480  exit
 1481  buku converter
 1482  history
 1483  ytfzf dans les yeux olivier addicts
 1484  ytfzf entrevue katsuni
 1485  solhint --help | lesss
 1486  solhint --help | less
 1487  npm update --help |
 1488  npm update --help | less
 1489  npm update solhint
 1490  solhint --version
 1491  solhint init
 1492  solhint --init
 1493  chatgpt-cli
 1494  cast --help | less
 1495  cast send --help | less
 1496  exit
 1497  sudo apt install ca-certificates
 1498  sudo apt remove ca-certificates
 1499  sudo apt install ca-certificates
 1500  msmtp -Sd
 1501  sudo apt upgrade ca-certificates
 1502  msmtp -Sd
 1503  z system
 1504  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
 1505  cd ..
 1506  cd .tmux/plugins
 1507  ls
 1508  tmux source ~/.tmux.conf
 1509  msmtp tls_trust_file 
 1510  msmtp tls_trust_file /usr/share/ca-certificates/mozilla/SecureTrust_CA.crt
 1511  msmtp tls_trust_file --help
 1512  msmtp tls_trust_file "/usr/share/ca-certificates/mozilla/SecureTrust_CA.crt"
 1513  msmtp tls_trust_file=/usr/share/ca-certificates/mozilla/SecureTrust_CA.crt
 1514  msmtp --tls_trust_file=/usr/share/ca-certificates/mozilla/SecureTrust_CA.crt
 1515  msmtp --tls_trust_file="/usr/share/ca-certificates/mozilla/SecureTrust_CA.crt"
 1516  msmtp --tls-trust-file=/usr/share/ca-certificates/mozilla/SecureTrust_CA.crt
 1517  msmtp --tls-trust-file="/usr/share/ca-certificates/mozilla/SecureTrust_CA.crt"
 1518  msmtp --tls-trust-file=/usr/share/ca-certificates/mozilla/SecureTrust_CA.crt
 1519  hs msmtp
 1520  msmtp -Sd
 1521  openssl --help | less
 1522  history
 1523  sudo apt upgrade openssl
 1524  sudo apt autoremove
 1525  kill-all emacs
 1526  tmux kill-session
 1527  tmux new
 1528  hs -F "afew"
 1529  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 1530  afew -v -t --new\n
 1531  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 1532  afew -v -t --new\n
 1533  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 1534  afew -v -t\n
 1535  afew -v -t --all\n
 1536  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 1537  history
 1538  history | less
 1539  ncspot
 1540  hs chat
 1541  chatgpt-cli
 1542  cargo run
 1543  ircd
 1544  weechat
 1545  ytfzf entrevue katsuni
 1546  ytfzf faites entrer
 1547  ytfzf --help | less
 1548  ytfzf --pages 3 enquetes criminelles
 1549  ytfzf --pages=3 enquetes criminelles
 1550  ytfzf -m --pages=3 enquetes criminelles
 1551  yt-dlp -U
 1552  sudo apt update yt-dlp 
 1553  sudo apt upgrade yt-dlp 
 1554  sudo apt upgrade ytfzf 
 1555  ytfzf -m  enquetes criminelles
 1556  z solidity
 1557  cd playground
 1558  curl https://raw.githubusercontent.com/a16z/helios/master/heliosup/install | bash
 1559  hs -F "source"
 1560  source ~/.zshrc
 1561  heliosup
 1562  helios --execution-rpc $ETH_RPC_URL
 1563  vim .zshrc
 1564  cast call 0x2f7D59765698f96d42BAB84ac82766d01Fb7A9DF "balanceOf(address)(uint)" "0x25c074d5F80840bE51aF84B6AA9179540562AC5b" --rpc-url http://127.0.0.1:8545\n
 1565  helios --execution-rpc $ETH_RPC_URL
 1566  source ~/.zshrc
 1567  helios --execution-rpc $ETH_RPC_URL
 1568  source ~/.zshrc
 1569  helios --execution-rpc $ETH_RPC_URL
 1570  vim .zshrc
 1571  source ~/.zshrc
 1572  helios --execution-rpc $ETH_RPC_URL
 1573  vim .zshrc
 1574  source ~/.zshrc
 1575  vim .zshrc
 1576  source ~/.zshrc
 1577  vim .zshrc
 1578  source ~/.zshrc
 1579  helios --execution-rpc $ETH_RPC_URL
 1580  cast call 0x2f7D59765698f96d42BAB84ac82766d01Fb7A9DF "balanceOf(address)(uint)" "0x25c074d5F80840bE51aF84B6AA9179540562AC5b" --rpc-url http://127.0.0.1:8545\n
 1581  helios --execution-rpc $ETH_RPC_URL
 1582  vim .zshrc
 1583  source ~/.zshrc
 1584  helios --execution-rpc $ETH_RPC_URL
 1585  helios
 1586  helios --execution-rpc $ETH_RPC_URL
 1587  vim .zshrc
 1588  helios --execution-rpc $ETH_RPC_URL
 1589  source ~/.zshrc
 1590  helios --execution-rpc $ETH_RPC_URL
 1591  source ~/.zshrc
 1592  helios --execution-rpc $ETH_RPC_URL
 1593  helios --execution-rpc $ETH_RPC_URL --network goerli
 1594  source ~/.zshrc
 1595  helios $ETH_RPC_URL --network goerli
 1596  helios --network goerli
 1597  heliosup
 1598  helios --network goerli
 1599  helios --network goerli -c https://www.lightclientdata.org
 1600  source ~/.zshrc
 1601  tmux
 1602  r
 1603  tmux
 1604  pass insert googleCalApiKey
 1605  ircd
 1606  weechat
 1607  j soli
 1608  cd playground
 1609  hs -F "helios"
 1610  helios --network goerli -c https://www.lightclientdata.org
 1611  helios --network goerli -c http://testing.prater.beacon-api.nimbus.team
 1612  helios --network goerli -c https://goerli.beaconstate.info
 1613  helios --network goerli -c https://goerli.beaconstate.ethstaker.cc/
 1614  helios --network goerli -c https://prater.checkpoint.sigp.io
 1615  helios --network goerli -c http://unstable.prater.beacon-api.nimbus.team/
 1616  helios --network goerli -c http://unstable.prater.beacon-api.nimbus.team
 1617  buku converter
 1618  ytfzf -m  arte radio
 1619  ncspot
 1620  chatgpt-cli
 1621  sudo update-locale LANG=pt_BR.UTF-8
 1622  sudo locale-gen
 1623  tmux new
 1624  ncspot
 1625  ircd
 1626  weechat
 1627  pass show
 1628  pass show drelwaRadiclPassPhrase
 1629  pass show googleCalApiKey
 1630  chatgpt-cli
 1631  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 1632  j downl
 1633  ls
 1634  sudo chown o pop-support_1679329815.tar.xz
 1635  ls -la
 1636  sudo chmod -R 777  pop-support_1679329815.tar.xz
 1637  ls -la
 1638  chatgpt-cli
 1639  afew -v -t --all\n
 1640  htop
 1641  afew -v -t --all\n
 1642  afew -v -t --in\n
 1643  hs -F "afew"
 1644  afew -v -t --new\n
 1645  afew --help |\nless
 1646  afew -v -t\n
 1647  afew -v -t --all\n
 1648  notmuch tag -inbox -- tag:archive
 1649  ytfzf -m  affaire moritz
 1650  ytfzf   affaire moritz
 1651  solc
 1652  solc --version
 1653  hs -F "solc"
 1654  solc-select --help | less
 1655  solc-select --install 0.6.12
 1656  solc-select install 0.6.12
 1657  solc-select use 0.6.12
 1658  solc --version
 1659  chatgpt-cli
 1660  kill-all emacs
 1661  hs -F "email"
 1662  email-fetch
 1663  whereis email-fetch
 1664  email-fetch
 1665  crontab -e
 1666  ls /sys/
 1667  cd ..
 1668  ls
 1669  ls /
 1670  ls /var
 1671  ls /var/log
 1672  vim /var/log/syslog
 1673  tmux
 1674  vim /var/log/syslog
 1675  pass list
 1676  pass show gmail
 1677  vim /var/log/syslog
 1678  pass show gmail
 1679  pass insert gmailRegular
 1680  email-fetch
 1681  email-fetch > caca
 1682  email-fetch > /home/o/caca
 1683  whereis document*
 1684  whereis *document*
 1685  evince
 1686  vifm
 1687  z drk
 1688  j drk
 1689  z --help
 1690  whereis z
 1691  ls
 1692  ./drk airdrop 42.69
 1693  hs drk
 1694  ./drk
 1695  ./drk alias add DARK 12ea8e3KVuBhmSnr29iV34Zd2RsD1MEeGk9xJhcipUqx
 1696  hs -F "drk"
 1697  ./darkfid
 1698  j darkfi
 1699  drk --help | less
 1700  zkas --help
 1701  zkas
 1702  cd ..
 1703  cd darkfi
 1704  make BINS="darkwiki darkwikid"
 1705  arch
 1706  exa
 1707  cd ..
 1708  exa
 1709  j darkwiki
 1710  j darkwikid
 1711  cd darkfi
 1712  exa
 1713  vim Makefile
 1714  exit
 1715  tmux
 1716  j darkfi
 1717  ls
 1718  make BINS="darkwiki darkwikid"
 1719  ls
 1720  cd darkfid
 1721  ls
 1722  exa
 1723  ls
 1724  kill-all emacs
 1725  pass list
 1726  ircd
 1727  weechat
 1728  pass show gmail
 1729  mbsync -C -a -V
 1730  pass show
 1731  pass gmail
 1732  pass insert gmailCurrent
 1733  mbsync -C -a -V
 1734  pass show gmailCurrent
 1735  email-fetch
 1736  pass gmailCurrent
 1737  email-fetch
 1738  echo 'message' | mail gael.blanchemain@gmail.com
 1739  echo 'message' | msmtp gael.blanchemain@gmail.com
 1740  sudo apt install bsd-mailx
 1741  email-fetch
 1742  touch /var/log/msmtp
 1743  sudo touch /var/log/msmtp
 1744  email-fetch
 1745  kill-all emacs
 1746  pass show
 1747  pass show googleCalApiKey
 1748  kill-all emacs
 1749  doom sync
 1750  j ~
 1751  ls
 1752  cd o
 1753  ls
 1754  fzf
 1755  sudo rm -rf .BitwigStudio
 1756  sudo rm -rf Bitwig Studio
 1757  doom sync
 1758  email-fetch
 1759  j playground
 1760  forge remappings > remappings.txt
 1761  pass show
 1762  pass show metamask0xCF5398c39B8f81e3B49338eB57c56b31E6925342
 1763  pass show phrase0xCF5398c39B8f81e3B49338eB57c56b31E6925342
 1764  pass show metamask0xCF5398c39B8f81e3B49338eB57c56b31E6925342
 1765  pass insert metamasktest
 1766  pass show metamasktest
 1767  pass insert metamasktestphrase
 1768  pass show metamasktestphrase
 1769  pass show metamasktest
 1770  hs -F "helios"
 1771  helios --network goerli -c http://unstable.prater.beacon-api.nimbus.team
 1772  helios --network goerli -c https://www.lightclientdata.org
 1773  helios --network sepolia -c https://www.lightclientdata.org
 1774  helios --network sepolia
 1775  source ~/.zshrc
 1776  helios --network sepolia
 1777  helios --execution-rpc $ETH_RPC_URL
 1778  helios --network sepolia --execution-rpc $ETH_RPC_URL
 1779  source ~/.zshrc
 1780  exit
 1781  vim /var/log/syslog
 1782  pass show
 1783  pass show googleCalApiKey
 1784  gpg --help | less
 1785  kill-all emacs
 1786  tmux
 1787  chatgpt-cli
 1788  hs -F "afew"
 1789  mbsync -C -a -V && notmuch new && afew -v -t --all
 1790  whereis email-fetch
 1791  mbsync -C -a -V && notmuch new && afew -v -t --all
 1792  afew -v -t --all
 1793  afew --help | less
 1794  afew -v -t --all -e
 1795  afew -v -t --all -e HeaderMatchingFilter
 1796  afew -v -t --all
 1797  kill-all emacs
 1798  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 1799  kill-all emacs
 1800  vim /var/log/syslog
 1801  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 1802  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 1803  doom sync
 1804  pip install sexpdata==0.0.3\npip install epc\npip install git+https://github.com/mmabrouk/chatgpt-wrapper\nchatgpt install
 1805  htop
 1806  exit
 1807  htop
 1808  chatgpt --help | lesss
 1809  chatgpt --help | less
 1810  chatgpt
 1811  tmux
 1812  pass show
 1813  pass show metamasktest
 1814  forge create  src/Weasel.sol:Weasel
 1815  chatgpt
 1816  exit
 1817  htop
 1818  tmux
 1819  exit
 1820  tmux new
 1821  chatgpt
 1822  forge create  ~/dev/palm/nft-contracts/contracts/NFT.sol
 1823  forge create  ~/dev/palm/nft-contracts/contracts/NFT.sol:NFT.sol
 1824  forge create  /home/o/dev/palm/nft-contracts/contracts/NFT.sol:NFT.sol
 1825  forge create --help | less
 1826  cd playg
 1827  j play
 1828  history
 1829  forge create  /home/o/dev/palm/nft-contracts/contracts/NFT.sol:NFT.sol
 1830  forge create  /home/o/dev/palm/nft-contracts/contracts/NFT.sol:NFT
 1831  forge remappings > remappings.txt
 1832  forge create  /home/o/dev/palm/nft-contracts/contracts/NFT.sol:NFT
 1833  forge create  NFT
 1834  forge create  NFT.sol
 1835  forge create  NFT
 1836  j playg
 1837  cd lib
 1838  ls
 1839  cd openzeppelin-other
 1840  forge create  NFT
 1841  forge create --help | less
 1842  ls
 1843  forge create  NFT
 1844  forge create --help | less
 1845  forge create  NFT
 1846  ls
 1847  j palm
 1848  fzf
 1849  forge create  NFT
 1850  ls
 1851  j playg
 1852  ls
 1853  cd script
 1854  ls
 1855  mv ../contract-stash ../stash
 1856  mkdir  ../stash/contracts
 1857  mv ../contract-stash ../stash/contracts
 1858  mv ../stash/* ../stash/contract
 1859  mv ../stash/* ../stash/contract/
 1860  mv ../stash/* ../stash/contract/*
 1861  mv ../stash/* ../stash/contracts/*
 1862  ls ../stash
 1863  mv ../stash/* ../stash/contracts/*
 1864  mv ../stash/* ../stash/contracts/
 1865  cd ..
 1866  ls
 1867  cd stash
 1868  ls
 1869  cd contracts
 1870  ls
 1871  cd ..
 1872  forge create  NFT
 1873  forge create NFT --private-key $PRIVATE_KEY
 1874  exit 
 1875  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  "0x8BdF2e6822631664433e47a5aa8D6cF4addAc1f0" "oops"  --private-key $PRIVATE_KEY\n
 1876  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $CONTRACT_ADDRESS "oops"  --private-key $PRIVATE_KEY\n
 1877  source ~/.zshrc
 1878  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $CONTRACT_ADDRESS "oops"  --private-key $PRIVATE_KEY\n
 1879  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $CONTRACT_ADDRESS "bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy"  --private-key $PRIVATE_KEY\n
 1880  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $CONTRACT_ADDRESS "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy"  --private-key $PRIVATE_KEY\n
 1881  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  "0x210A84834e519a5f167D2475A600Bd0f54aA9D82" "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy"  --private-key $PRIVATE_KEY\n
 1882  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $CONTRACT_ADDRESS "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy"  --private-key $PRIVATE_KEY\n
 1883  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "balanceOf(address)()"  $CONTRACT_ADDRESS  --private-key $PRIVATE_KEY\n
 1884  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $CONTRACT_ADDRESS "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy" ""  --private-key $PRIVATE_KEY\n
 1885  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "mint(address,string)()"  $CONTRACT_ADDRESS "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy"  --private-key $PRIVATE_KEY\n
 1886  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "mint(address,string)()"  $CONTRACT_ADDRESS ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy  --private-key $PRIVATE_KEY\n
 1887  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $CONTRACT_ADDRESS ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy  --private-key $PRIVATE_KEY\n
 1888  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $CONTRACT_ADDRESS "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy" ""  --private-key $PRIVATE_KEY\n
 1889  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $CONTRACT_ADDRESS "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy"  --private-key $PRIVATE_KEY\n
 1890  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $ETH_FROM "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy"  --private-key $PRIVATE_KEY\n
 1891  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  "0x8BdF2e6822631664433e47a5aa8D6cF4addAc1f0" "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy"  --private-key $PRIVATE_KEY\n
 1892  cast --help | less
 1893  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  "0x8BdF2e6822631664433e47a5aa8D6cF4addAc1f0" "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy" ""  --private-key $PRIVATE_KEY\n
 1894  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  0x8BdF2e6822631664433e47a5aa8D6cF4addAc1f0 "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy" ""  --private-key $PRIVATE_KEY\n
 1895  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $ALT_ADDR  "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy" ""  --private-key $PRIVATE_KEY\n
 1896  source ~/.zshrc
 1897  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $ALT_ADDR  "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy" ""  --private-key $PRIVATE_KEY\n
 1898  cast call 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $ALT_ADDR  "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy"  --private-key $PRIVATE_KEY\n
 1899  cast --help | less
 1900  cast send 0x210A84834e519a5f167D2475A600Bd0f54aA9D82 "safeMint(address,string)()"  $ALT_ADDR  "ipfs://bafkreig2ahnccptw3feddlonql5ixcrrseetmdokj6w7kiq4fbyu6waefy"  --private-key $PRIVATE_KEY\n
 1901  cd ..
 1902  ls
 1903  cd ..
 1904  take bitcoin
 1905  wget https://storage.googleapis.com/psl-careers/blk00000.dat
 1906  sudo apt-get install texlive
 1907  doom sync
 1908  z doom
 1909  vim init.el
 1910  doom sync
 1911  kill-all emacs
 1912  vim init.el
 1913  source ~/.zshrc
 1914  doom sync
 1915  kill-all emacs
 1916  git status
 1917  vim init.el
 1918  source ~/.zshrc
 1919  doom doctor
 1920  vim init.el
 1921  doom doctor
 1922  doom sync
 1923  doom doctor
 1924  doom --help
 1925  doom purge
 1926  doom sync
 1927  doom doctor
 1928  doom clean
 1929  kill-all emacs
 1930  j dev
 1931  ls
 1932  cd cocreate
 1933  ls
 1934  take companion
 1935  npm i express-generator-typescript
 1936  ls 
 1937  npx express-generator-typescript
 1938  ls
 1939  cd express-gen-ts
 1940  ls
 1941  ls -la
 1942  git init -b main
 1943  ls
 1944  cd ..
 1945  take react-gen-ts
 1946  npx create-react-app react-mini-swagger-client --template typescript
 1947  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 1948  j darkfi
 1949  ls
 1950  type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)\ncurl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \\n&& sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \\n&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \\n&& sudo apt update \\n&& sudo apt install gh -y
 1951  source ~/.zshrc
 1952  gh --help | less
 1953  gh repo create DarkDocs
 1954  gh auth login
 1955  gh repo create DarkDocs
 1956  gh repo create DarkDocs --private
 1957  git remote add origin git@github.com:anegg0/DarkDocs.git\ngit branch -M main\ngit push -u origin main
 1958  vim .git/config
 1959  git remote add origin git@github.com:anegg0/DarkDocs.git\ngit branch -M main\ngit push -u origin main
 1960  vim .git/config
 1961  htop
 1962  kill-all chatgpt
 1963  chatgpt
 1964  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 1965  exit
 1966  j dev
 1967  j cocre
 1968  ls
 1969  cd companion
 1970  git clone git@github.com:arifintahu/project-structure-api.git
 1971  ls
 1972  cd project-structure-api
 1973  ls
 1974  ls -la
 1975  npm install npm@latest -g
 1976  sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'\nwget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -\nsudo apt-get update\nsudo apt-get -y install postgresql
 1977  npm ci
 1978  npm install
 1979  npm ci
 1980  pass insert secretCoCreateCompanion
 1981  pass show secretCoCreateCompanion
 1982  pass insert secretCoCreateCompanion
 1983  pass show secretCoCreateCompanion
 1984  pass insert secretCoCreateCompanion
 1985  pass show secretCoCreateCompanion
 1986  pass insert secretCoCreateCompanion
 1987  pass show secretCoCreateCompanion
 1988  npm run build
 1989  ircd
 1990  weechat
 1991  sudo sh -c 'echo "deb https://hub.unity3d.com/linux/repos/deb stable main" > /etc/apt/sources.list.d/unityhub.list'
 1992  wget -qO - https://hub.unity3d.com/linux/keys/public | sudo apt-key add -
 1993  sudo apt update
 1994  sudo apt-get install unityhub
 1995  source ~/.zshrc
 1996  unityhub
 1997  j companion
 1998  ls
 1999  cd project-structure-api
 2000  npm run build
 2001  npm run sync-db
 2002  j dev
 2003  take postgres
 2004  curl -fsS https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo gpg --dearmor -o /usr/share/keyrings/packages-pgadmin-org.gpg
 2005  sudo sh -c 'echo "deb [signed-by=/usr/share/keyrings/packages-pgadmin-org.gpg] https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'
 2006  sudo apt install pgadmin4
 2007  chatgpt
 2008  sudo /usr/pgadmin4/bin/setup-web.sh
 2009  pass insert pgadmin
 2010  pass shoe pgadmin
 2011  pass show pgadmin
 2012  email-fetch
 2013  afew --tag --all
 2014  chatgpt
 2015  notmuch tag +deleted -- tag:new and subject:[SPAM]
 2016  notmuch tag +deleted -- tag:new and header:[SPAM]
 2017  afew --tag --all
 2018  cd ..
 2019  ls
 2020  npx create-react-app react-mini-swagger-client --template typescript
 2021  afew -v -t --all
 2022  whereis java
 2023  java --version
 2024  sudo apt update
 2025  sudo apt search openjdk | less
 2026  sudo apt install openjdk
 2027  sudo apt search openjdk | less
 2028  sudo apt install default-jre-headless/jammy 2:1.11-72build2 amd64
 2029  sudo apt install default-jre-headless/jammy
 2030  java --version
 2031  source ~/.zshrc
 2032  # Download current stable 2.x.x branch (Swagger and OpenAPI version 2)\nwget https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/2.4.30/swagger-codegen-cli-2.4.30.jar -O swagger-codegen-cli.jar\n\njava -jar swagger-codegen-cli.jar help\n\n# Download current stable 3.x.x branch (OpenAPI version 3)\nwget https://repo1.maven.org/maven2/io/swagger/codegen/v3/swagger-codegen-cli/3.0.41/swagger-codegen-cli-3.0.41.jar -O swagger-codegen-cli.jar\n\njava -jar swagger-codegen-cli.jar --help
 2033  ./bin/java-petstore.sh
 2034  doom sync
 2035  source ~/.zshrc
 2036  swagger-codegen-cli
 2037  java -jar swagger-codegen-cli.jar -l TypeScript -i swagger.json
 2038  java -jar swagger-codegen-cli.jar -l typescript-fetch -i swagger.json
 2039  java -jar swagger-codegen-cli.jar --lang typescript-fetch -i swagger.json
 2040  java -jar swagger-codegen-cli.jar -l typescript-fetch -i swagger.json
 2041  swagger-codegen -l typescript-fetch -i swagger.json
 2042  whereis java
 2043  java -jar swagger-codegen-cli.jar -h | less
 2044  java -jar swagger-codegen-cli.jar generate -h | less
 2045  java -jar swagger-codegen-cli.jar generate -i swagger.json -l typescript-fetch
 2046  ls
 2047  node ./api_test.spec.ts
 2048  ls
 2049  cd swagger-codegen
 2050  npm init
 2051  node ./api_test.spec.ts
 2052  npm install -g typescript --save-dev
 2053  node ./api_test.spec.ts
 2054  source ~/.zshrc
 2055  node ./api_test.spec.ts
 2056  source ~/.zshrc
 2057  ts-node ./api_test.spec.ts
 2058  npx node ./api_test.spec.ts
 2059  npm i -g ts-node
 2060  source ~/.zshrc
 2061  npx node ./api_test.spec.ts
 2062  ts-node ./api_test.spec.ts
 2063  ts-node --esm index.ts
 2064  cd ..
 2065  ls
 2066  cd react-gen-ts
 2067  npm i swagger-typescript-api
 2068  ls
 2069  cd react-mini-swagger-client
 2070  ls
 2071  npm i swagger-typescript-api --save-dev
 2072  ls
 2073  cd ..
 2074  ls -la
 2075  cd react-mini-swagger-client
 2076  ls
 2077  kill-all emacs
 2078  ls
 2079  cd ..
 2080  ls
 2081  ls ..
 2082  rm -rf ../react-mini-swagger-client
 2083  ls
 2084  cp * ../react-mini-swagger-client
 2085  cp -r * ../react-mini-swagger-client
 2086  ls
 2087  cd ..
 2088  ls
 2089  rm -rf ./react-gen-ts
 2090  cd react-mini-swagger-client
 2091  ls -la
 2092  ls
 2093  npx swagger-typescript-api -p swagger.json -o ./src/apiClient --modular\n
 2094  ls
 2095  npm start
 2096  cd ..
 2097  git clone git@github.com:po5i/flask-mini-rest.git
 2098  cd flask-mini-rest
 2099  virtualenv venv\nsource venv/bin/activate
 2100  FLASK_ENV=development flask run
 2101  pip install -U flask-cors
 2102  FLASK_ENV=development flask run
 2103  source ~/.zshrc
 2104  FLASK_ENV=development flask run
 2105  virtualenv venv\nsource venv/bin/activate
 2106  FLASK_ENV=development flask run
 2107  pip install -U flask_restx
 2108  source ~/.zshrc
 2109  virtualenv venv\nsource venv/bin/activate
 2110  FLASK_ENV=development flask run
 2111  j comp
 2112  cd react-mini-swagger-client
 2113  FLASK_ENV=development flask run
 2114  kill-all emacs
 2115  touch .projectile
 2116  cd ../flask-mini-rest
 2117  touch .projectile
 2118  exit
 2119  j react
 2120  ls
 2121  npx swagger-typescript-api -p https://petstore.swagger.io/v2/swagger.json -o ./src/apiClient --modular\n
 2122  npm start
 2123  chatgpt
 2124  htop
 2125  chatgpt
 2126  npm start
 2127  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 2128  npm start
 2129  chatgpt
 2130  npm start
 2131  exit
 2132  chatgpt
 2133  touch ../tsconfig.json
 2134  npm start
 2135  exit
 2136  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 2137  chatgpt
 2138  j compa
 2139  git clone git@github.com:cocreatelabs/loyalty-app.git
 2140  cd loyalty-app-main
 2141  ls -la
 2142  git init
 2143  touch .projectile
 2144  exit
 2145  htop
 2146  chatgpt
 2147  vifm
 2148  chatgpt
 2149  exit
 2150  cd ..
 2151  ls
 2152  cd react-mini-swagger-client
 2153  npm i @cocreate/v0.0.1-alpha#1xltvr9alfms0foz
 2154  npm i @cocreate
 2155  cd ..
 2156  git clone git@github.com:sinProject-Inc/twitter-app.git
 2157  ls
 2158  cd twitter-app
 2159  ls
 2160  ls -la
 2161  touch .projectile
 2162  sudo apt update
 2163  sudo apt install mysql-server
 2164  sudo systemctl start mysql.service
 2165  node --version
 2166  nvm use 18
 2167  ls
 2168  npm i
 2169  sudo mysql
 2170  mysql_secure_installation
 2171  pass insert mysqlRoot
 2172  pass show mysqlRoot
 2173  mysql -u root -p
 2174  sudo mysql
 2175  pass insert mysqlo
 2176  pass show mysqlo
 2177  mysql -u o -p
 2178  systemctl status mysql.service
 2179  mysql -u sammy -p
 2180  mysql -u o -p
 2181  exit
 2182  buku --help
 2183  buku --help | less
 2184  buku -a https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-20-04
 2185  pass show
 2186  pass show mysqlo
 2187  cd ..
 2188  ls
 2189  cd twitter-app
 2190  npx prisma db push
 2191  buku --help | less
 2192  buku -s network
 2193  sudo ss -ltn
 2194  ss
 2195  npx prisma db push
 2196  chatgpt
 2197  npx prisma db push
 2198  mysql -u root -p
 2199  pass show mysqlRoot
 2200  mysql -u root -p
 2201  pass show mysqlo
 2202  mysql -u root -p
 2203  pass show
 2204  mysql -u root -p
 2205  mysql -u o -p
 2206  pass show
 2207  pass show mysqlo
 2208  mysql -u root -p
 2209  sudo mysql_secure_installation
 2210  pass show mysqlo
 2211  htop
 2212  sudo apt uninstall mysql-server
 2213  sudo apt remove mysql-server
 2214  sudo apt install mysql-server
 2215  sudo systemctl start mysql.service
 2216  sudo mysql
 2217  whereis mysql_secure_installation
 2218  man mysql_secure_installation
 2219  mysql -u root -p
 2220  sudo mysql_secure_installation
 2221  mysql -u root -p
 2222  exit
 2223  htop
 2224  mysql -u root -p
 2225  sudo apt remove mysql-server
 2226  source ~/.zshrc
 2227  sudo apt install mysql-server
 2228  source ~/.zshrc
 2229  sudo mysql_secure_installation
 2230  htop
 2231  sudo mysql
 2232  mysql -u root -p
 2233  sudo apt remove mysql-server
 2234  j ~
 2235  cd o
 2236  ls
 2237  fzf
 2238  sudo apt purge mysql-server*
 2239  apt purge --help | less
 2240  ls /etc/mysql
 2241  sudo rm -rf /etc/mysql
 2242  ls /etc/mysql
 2243  sudo rm -rf /var/lib/mysql/
 2244  sudo apt install mysql-server
 2245  sudo apt autoremove
 2246  source ~/.zshrc
 2247  sudo mysql
 2248  mysql -u root -p
 2249  sudo mysql
 2250  sudo mysql_secure_installation
 2251  sudo mysql
 2252  mysql -u root -p
 2253  sudo mysql
 2254  chatgpt
 2255  sudo mysql
 2256  mysql -u root -p
 2257  sudo mysql
 2258  sudo mysql_secure_installation
 2259  htop
 2260  sudo mysql
 2261  pass show
 2262  sudo mysql
 2263  pass show mysqlRoot
 2264  pass insert mysqlRoot
 2265  pass show mysqlRoot
 2266  sudo systemctl start mysql.service
 2267  j twit
 2268  npx prisma db push
 2269  pass show mysqlo
 2270  sudo mysql
 2271  chatgpt
 2272  npx prisma db push
 2273  npx prisma db push
 2274  htop
 2275  /exit
 2276  htop
 2277  chatgpt
 2278  exa /etc/
 2279  cd ~
 2280  fzf
 2281  locate my.cnf
 2282  sudo apt install locate
 2283  source ~/.zshrc
 2284  locate my.cnf
 2285  locate mysql.cnf
 2286  locate --help | less
 2287  locate mysql.cnf
 2288  exit
 2289  locate my.cnf
 2290  mysql --help | less
 2291  tmux
 2292  chatgpt
 2293  exit
 2294  tmux
 2295  exit
 2296  tmux new
 2297  chatgpt
 2298  j companion
 2299  cd twitter-app
 2300  sudo mysql
 2301  exit
 2302  htop
 2303  exit
 2304  tmux
 2305  exit
 2306  source ~/.zshrc
 2307  tmux
 2308  exit
 2309  tmux
 2310  source ~/.zshrc
 2311  exit
 2312  tmux
 2313  chatgpt
 2314  sudo mysql
 2315  sudo systemctl start mysql.service
 2316  sudo systemctl stop mysql.service
 2317  sudo systemctl start mysql.service
 2318  locate my.cnf
 2319  htop
 2320  systemctl status mysql.service
 2321  sudo systemctl start mysql.service
 2322  sudo systemctl restart mysql.service
 2323  sudo mysqladmin -p -u o version
 2324  pass show mysqlo
 2325  sudo rm /var/run/mysqld/mysqld.sock
 2326  sudo apt remove mysql-server
 2327  sudo apt install mysql-server
 2328  source ~/.zshrc
 2329  sudo mysql
 2330  systemctl status mysql.service
 2331  systemctl stop mysql.service
 2332  sudo mysql
 2333  sudo systemctl start mysql.service
 2334  journalctl -xeu mysql.service
 2335  sudo apt remove mysql-server
 2336  source ~/.zshrc
 2337  sudo apt install mysql-server
 2338  sudo systemctl start mysql.service
 2339  mysql --help | grep /my.cnf
 2340  sudo locatedb
 2341  sudo apt install locatedb
 2342  apt install --help | less
 2343  sudo apt install -F mysql-server
 2344  sudo apt install  mysql-server
 2345  sudo systemctl start mysql.service
 2346  journalctl -xeu mysql.service
 2347  exit
 2348  j /etc/
 2349  z /etc/
 2350  ls
 2351  sudo take mysql
 2352  sudo mkdir mysql
 2353  ls -la
 2354  ls -la | less
 2355  sudo touch /mysql/my.cnf
 2356  cd mysql
 2357  ls
 2358  sudo touch my.cnf
 2359  sudo vim my.cnf
 2360  sudo systemctl start mysql.service
 2361  sudo systemctl stop mysql.service
 2362  sudo systemctl start mysql.service
 2363  sudo apt remove mysql-server
 2364  source ~/.zshrc
 2365  sudo apt install mysql-server
 2366  ls
 2367  ls -la
 2368  cd ..
 2369  ls
 2370  ls /var/lib/mysql
 2371  sudo chown -R mysql:mysql /etc/mysql/
 2372  sudo chmod 700 /etc/mysql
 2373  sudo chmod 640 /etc/mysql/*
 2374  cd mysql
 2375  ls -la mysql
 2376  ls mysql
 2377  ls -la
 2378  ls -la |
 2379  ls -la | less
 2380  exit
 2381  chatgpt
 2382  groups
 2383  sudo groupadd mysql
 2384  groups
 2385  sudo usermod -a -G mysql o
 2386  sudo mysql
 2387  sudo apt purge --auto-remove mysql-server
 2388  source ~/.zshrc
 2389  sudo apt install mysql-server
 2390  sudo rm /etc/mysql/my.cnf
 2391  cd mysql
 2392  sudo cd mysql
 2393  sudo apt purge --auto-remove mysql-server
 2394  ls
 2395  ls |
 2396  ls | less
 2397  source ~/.zshrc
 2398  sudo apt install mysql-server
 2399  sudo apt purge --auto-remove mysql-server
 2400  sudo rm /etc/mysql/my.cnf
 2401  sudo rm -rf /etc/mysql/
 2402  source ~/.zshrc
 2403  sudo apt install mysql-server
 2404  sudo systemctl stop mysql.service
 2405  sudo systemctl start mysql.service
 2406  sudo mysql
 2407  htop
 2408  sudo mysql_secure_installation
 2409  pass insert mysqlRoot
 2410  pass show mysqlRoot
 2411  mysql -u root -p
 2412  sudo mysql
 2413  systemctl status mysql.service
 2414  z twitter
 2415  npx prisma db push
 2416  npx prisma --help | less
 2417  touch prismaLog
 2418  npx prisma db push > prismaLog
 2419  sudo npx prisma db push
 2420  npx prisma db push
 2421  mysql -u o -p
 2422  source ~/.zshrc
 2423  npx prisma db push
 2424  openssl --version
 2425  sudo apt install openssl
 2426  whereis openssl
 2427  npx prisma db push --preview-feature
 2428  j twitter
 2429  npx prisma db push
 2430  source ~/.zshrc
 2431  npx prisma db push
 2432  mysql
 2433  sudo mysql
 2434  source ~/.zshrc
 2435  npx prisma db push
 2436  sudo mysql
 2437  sudo systemctl stop mysql.service
 2438  sudo systemctl start mysql.service
 2439  source ~/.zshrc
 2440  npx prisma db push
 2441  npx prisma db pull
 2442  sudo systemctl stop mysql.service
 2443  npx prisma db pull
 2444  npx prisma db push
 2445  sudo systemctl start mysql.service
 2446  chatgpt
 2447  mysql
 2448  ss
 2449  ss -T
 2450  hs -F "ss"
 2451  hs -F "ss -"
 2452  sudo ss -ltn
 2453  npx prisma db push
 2454  sudo mysql
 2455  npx prisma db push
 2456  mysql --version
 2457  npm --version
 2458  node --version
 2459  nvm use 18
 2460  npm i
 2461  npx prisma db push
 2462  npm i @prisma/client@dev prisma@dev
 2463  npx prisma db push
 2464  source ~/.zshrc
 2465  npx prisma db push
 2466  sudo mysql
 2467  npx prisma db push
 2468  source ~/.zshrc
 2469  npx prisma db push
 2470  sudo mysql
 2471  npx prisma db push
 2472  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 2473  vifm
 2474  npx prisma db push
 2475  ps --help
 2476  pass show
 2477  pass show pga
 2478  pass show pgadmin
 2479  sudo systemctl stop mysql.service
 2480  ps
 2481  where is pg
 2482  where is postgres
 2483  where is postgresql
 2484  psql 
 2485  sudo apt update
 2486  sudo apt install postgresql postgresql-contrib
 2487  sudo systemctl start postgresql.service
 2488  sudo -i -u postgres
 2489  sudo  -u createuser --interactive
 2490  sudo  -u postgres createuser --interactive
 2491  sudo systemctl stop mysql.service
 2492  sudo systemctl stop postgresql.service
 2493  sudo systemctl status postgresql.service
 2494  sudo systemctl start postgresql.service
 2495  sudo systemctl status postgresql.service
 2496  sudo  -u postgres createuser --interactive
 2497  psql
 2498  source ~/.zshrc
 2499  sudo systemctl status postgresql.service
 2500  psql
 2501  sudo -u postgres psql
 2502  cd ..
 2503  git clone git@github.com:twitterdev/twitter-api-typescript-sdk.git
 2504  cd twitter-api-typescript-sdk
 2505  ls
 2506  touch .projectile
 2507  npm install twitter-api-sdk
 2508  cd examples
 2509  npm install
 2510  touch .env
 2511  pass show
 2512  pass insert twitterApiBearerToken
 2513  pass show twitterApiBearerToken
 2514  exit
 2515  curl "https://api.twitter.com/2/tweets?ids=1261326399320715264,1278347468690915330" \\n  -H "Authorization: Bearer AAAAAAAAAAAAAAAAAAAAABK8mQEAAAAAuQm5uk59q0zB9PUvE1sj%2BO94rPk%3DUfjVDCs60vyXrAJnh7G1CUG67p6vNvxkzn5mHAqOTxCW4JIfw8"
 2516  curl --request GET 'https://api.twitter.com/2/tweets/search/recent?query=from:twitterdev' --header 'Authorization: Bearer $BEARER_TOKEN'
 2517  curl "https://api.twitter.com/2/tweets?ids=1261326399320715264,1278347468690915330" \\n  -H "Authorization: Bearer AAAAAAAAAAAAAAAAAAAAABK8mQEAAAAAuQm5uk59q0zB9PUvE1sj%2BO94rPk%3DUfjVDCs60vyXrAJnh7G1CUG67p6vNvxkzn5mHAqOTxCW4JIfw8"
 2518  source ~/.zshrc
 2519  npx ts-node oauth2-bearer.ts
 2520  curl "https://api.twitter.com/2/tweets?ids=1261326399320715264,1278347468690915330" \\n  -H "Authorization: Bearer AAAAAAAAAAAAAAAAAAAAABK8mQEAAAAAuQm5uk59q0zB9PUvE1sj%2BO94rPk%3DUfjVDCs60vyXrAJnh7G1CUG67p6vNvxkzn5mHAqOTxCW4JIfw8"\n
 2521  curl "https://api.twitter.com/2/tweets?ids=1261326399320715264,1278347468690915330" \\n  -H "Authorization: Bearer AAAAAAAAAAAAAAAAAAAAAFnz2wAAAAAAxTmQbp%2BIHDtAhTBbyNJon%2BA72K4%3DeIaigY0QBrv6Rp8KZQQLOTpo9ubw5Jt?WRE8avbi"
 2522  curl "https://api.twitter.com/2/tweets?ids=1261326399320715264,1278347468690915330" \\n  -H "Authorization: Bearer AAAAAAAAAAAAAAAAAAAAABK8mQEAAAAAuQm5uk59q0zB9PUvE1sj%2BO94rPk%3DUfjVDCs60vyXrAJnh7G1CUG67p6vNvxkzn5mHAqOTxCW4JIfw8"\n
 2523  curl -u "$API_KEY:$API_SECRET_KEY" \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'
 2524  source ~/.zshrc
 2525  curl -u "$API_KEY:$API_SECRET_KEY" \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'
 2526  npx ts-node oauth2-bearer.ts
 2527  pass show mysqlo
 2528  curl -u "$API_KEY:$API_SECRET_KEY" \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'
 2529  curl -X GET -H "Authorization: Bearer $BEARER_TOKEN" "https://api.twitter.com/2/users/by/username/sabrinaesaquinO?USER.FIELDS=ID"
 2530  curl -X GET -H "Authorization: Bearer AAAAAAAAAAAAAAAAAAAABK8mQEAAAAAuQm5uk59q0zB9PUvE1sj%2BO94rPk%3DUfjVDCs60vyXrAJnh7G1CUG67p6vNvxkzn5mHAqOTxCW4JIfw8" "HTTPS://API.TWITTER.COM/2/USERS/BY/USERNAME/SABRINAESAQUINo?user.fields=id"
 2531  npx ts-node oauth2-bearer.ts
 2532  source ~/.zshrc
 2533  npx ts-node oauth2-bearer.ts
 2534  source ~/.zshrc
 2535  npx ts-node oauth2-bearer.ts
 2536  npx ts-node oauth2-bearer.js
 2537  npx ts-node oauth2-bearer-old.ts
 2538  curl -X GET -H "Authorization: Bearer AAAAAAAAAAAAAAAAAAAABK8mQEAAAAAuQm5uk59q0zB9PUvE1sj%2BO94rPk%3DUfjVDCs60vyXrAJnh7G1CUG67p6vNvxkzn5mHAqOTxCW4JIfw8" "HTTPS://API.TWITTER.COM/2/USERS/BY/USERNAME/SABRINAESAQUINo?user.fields=id"
 2539  hs -F "curl"
 2540  curl -X GET -H "Authorization: Bearer $BEARER_TOKEN" "https://api.twitter.com/2/users/by/username/sabrinaesaquinO?USER.FIELDS=ID"
 2541  exit
 2542  z sdk
 2543  vim curl-examples
 2544  cd examples
 2545  npx ts-node oauth2-bearer.ts
 2546  ls
 2547  npx ts-node oauth2-bearer.ts
 2548  npx ts-node findUserById.ts
 2549  chatgpt
 2550  exit
 2551  POST 'https://api.twitter.com/2/oauth2/token' \\n--header 'Content-Type: application/x-www-form-urlencoded' \\n--data-urlencode 'refresh_token=AAAAAAAAAAAAAAAAAAAAAPXamQEAAAAAX6pVNS1k4CoTYUrQjk%2B9sLEJYDE%3DPYXFmJNeNnqRLKtIdaD2LJcYzuiYoOpRWzAtkUouYWzAXqmtyg' \\n--data-urlencode 'grant_type=refresh_token' \\n--data-urlencode 'client_id=dEdiQ1BPWTI5Qm8tRGFCdmlMWm86MTpjaQ'\n
 2552  curl --location 'https://api.twitter.com/2/tweets/1228393702244134912?tweet.fields=created_at%2Cattachments' \\n--header 'Authorization: Bearer b1ZzU01vUkxjeEdXUjdiVjlrZlFFQ1ZPTVEzcVJrekJjeFFybEtkd0lOSlYwOjE2ODA0NTgxMjc1ODc6MTowOmF0OjE' \\n--header 'Cookie: guest_id=v1%3A168045197240635222; guest_id_ads=v1%3A168045197240635222; guest_id_marketing=v1%3A168045197240635222; personalization_id="v1_QX4gzD7d+weufCuJnUroWA=="'
 2553  curl --location 'https://api.twitter.com/2/tweets/1228393702244134912?tweet.fields=created_at%2Cattachments' \\n--header 'Authorization: Bearer AAAAAAAAAAAAAAAAAAAAAPXamQEAAAAA4%2BTQ9ojPYEuazy4ropVCFu5aqo0%3D3QQUU0BSc7DVoLNxZjuUW6XqoRGGuTpXvfKMPXQvsMmWsuFAV' \\n--header 'Cookie: guest_id=v1%3A168045197240635222; guest_id_ads=v1%3A168045197240635222; guest_id_marketing=v1%3A168045197240635222; personalization_id="v1_QX4gzD7d+weufCuJnUroWA=="'
 2554  curl "https://api.twitter.com/2/tweets?ids=1261326399320715264,1278347468690915330" \\n  -H "Authorization: Bearer AAAAAAAAAAAAAAAAAAAAAPXamQEAAAAAOjvlK2zIC%2F0EyRzZ0qB6L1ibOm4%3D5Sfi3JoPeIAdCol7dvF10MUGRA3jnM7C9mQwP1KCGOuyA3aT8X"
 2555  npx ts-node oauth2-bearer.ts
 2556  ls -la
 2557  git init -b main
 2558  ls
 2559  java -jar swagger-codegen-cli.jar help
 2560  cd ../..
 2561  java -jar swagger-codegen-cli.jar help
 2562  wget https://repo1.maven.org/maven2/io/swagger/codegen/v3/swagger-codegen-cli/3.0.41/swagger-codegen-cli-3.0.41.jar -O swagger-codegen-cli.jar
 2563  ls
 2564  ./bin/java-petstore.sh
 2565  take cocreate-api-gen
 2566  cd ..
 2567  ls swagger-codegen
 2568  java -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar generate \\n  -i ./swagger-codegen/swagger.json \\n  -l typescript \\n  -o ./cocreate-api-gen\n
 2569  ls
 2570  java -jar ./swagger-codegen-cli.jar generate \\n  -i ./swagger-codegen/swagger.json \\n  -l typescript \\n  -o ./cocreate-api-en\n
 2571  java -jar ./swagger-codegen-cli.jar generate \\n  -i ./swagger-codegen/swagger.json \\n  -l typescript-fetch \\n  -o ./cocreate-api-en\n
 2572  ls
 2573  cd twitter-app
 2574  sudo mysql
 2575  hs -F "start"
 2576  sudo systemctl start mysql.service
 2577  sudo mysql
 2578  chatgpt
 2579  cd ..
 2580  cd twitter-app
 2581  source ~/.zshrc
 2582  npx prisma db push
 2583  apt list openssl
 2584  openssl --version
 2585  openssl --help
 2586  openssl version
 2587  sudo apt update
 2588  sudo apt updgrade
 2589  sudo apt upgrade
 2590  apt list openssl
 2591  sudo apt remove openssl
 2592  sudo apt install openssl
 2593  apt list openssl
 2594  npx prisma db push
 2595  npx prisma migrate dev
 2596  chatgpt
 2597  nvm use 18
 2598  npx prisma migrate dev
 2599  npx prisma db push
 2600  prisma db push --accept-data-loss
 2601  npx prisma db push --accept-data-loss
 2602  npx prisma db push --force-reset
 2603  source ~/.zshrc
 2604  sudo systemctl start mysql.service
 2605  sudo systemctl status mysql.service
 2606  npx prisma db push --force-reset
 2607  source ~/.zshrc
 2608  node --version
 2609  source ~/.zshrc
 2610  npx prisma db push --force-reset
 2611  source ~/.zshrc
 2612  npx prisma db push
 2613  sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf
 2614  sudo systemctl start mysql.service
 2615  sudo systemctl restart mysql.service
 2616  sudo systemctl status mysql.service
 2617  npx prisma db push
 2618  sudo mysql
 2619  npx prisma db push
 2620  mysql -u sammy -p
 2621  sudo mysql
 2622  npx prisma db push
 2623  npm run dev -- --open
 2624  doom sync
 2625  npm run dev -- --open
 2626  git pull
 2627  npm run dev -- --open
 2628  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 2629  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 2630  chatgpt
 2631  cd ex
 2632  cd examples
 2633  ls
 2634  npx ts-node oauth2-bearer-test.ts
 2635  source ~/.zshrc
 2636  curl -u "$API_KEY:$API_SECRET_KEY" \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'
 2637  source ~/.zshrc
 2638  curl -u "$API_KEY:$API_SECRET_KEY" \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'
 2639  curl -u "$TWITTER_CLIENT_ID$TWITTER_CLIENT_SECRET" \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'
 2640  curl -u "$API_KEY:$API_KEY_SECRET" -X POST -H "Content-Type: application/x-www-form-urlencoded;charset=UTF-8" https://api.twitter.com/oauth2/token\?grant_type\=client_credentials
 2641  exit
 2642  curl -u "$API_KEY:$API_SECRET_KEY" -X POST -H "Content-Type: application/x-www-form-urlencoded;charset=UTF-8" https://api.twitter.com/oauth2/token\?grant_type\=client_credentials
 2643  source ~/.zshrc
 2644  curl -u 'xvz1evFS4wEEPTGEFPHBog:L8qq9PZyRg6ieKGEKhZolGC0vJWLw8iEJ88DRdyOg' \\ncurl -u 'xvz1evFS4wEEPTGEFPHBog:L8qq9PZyRg6ieKGEKhZolGC0vJWLw8iEJ88DRdyOg' \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'curl -u 'xvz1evFS4wEEPTGEFPHBog:L8qq9PZyRg6ieKGEKhZolGC0vJWLw8iEJ88DRdyOg' \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'
 2645  curl -u 'W5dLLZCOEcOi8MFYNkqHuiFnV:v2cFUINTgFlpl1D4MuASBa6YlKbF4HEbFPr8phEWHvYrC2fuQW' \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'\n
 2646  source ~/.zshrc
 2647  npx ts-node oauth2-bearer-test.ts
 2648  j sdk
 2649  npx ts-node oauth2-bearer-test.ts
 2650  exit
 2651  chatgpt
 2652  exit
 2653  source ~/.zshrc
 2654  tmux
 2655  j twitter-app
 2656  npm run dev -- --open
 2657  cd examples
 2658  npx ts-node oauth2-bearer-test.ts
 2659  curl -u 'W5dLLZCOEcOi8MFYNkqHuiFnV:v2cFUINTgFlpl1D4MuASBa6YlKbF4HEbFPr8phEWHvYrC2fuQW' \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'\n
 2660  exit
 2661  j app
 2662  j sdk
 2663  cd examples
 2664  npx ts-node oauth2-bearer-test.ts
 2665  source ~/.zshrc
 2666  npx ts-node oauth2-bearer-test.ts
 2667  exit
 2668  tmux
 2669  exit
 2670  j exam
 2671  j sdk
 2672  cd examples
 2673  npx ts-node oauth2-bearer-test.ts
 2674  j skd
 2675  j sdk
 2676  cd examples
 2677  npx ts-node oauth2-bearer-test.ts
 2678  curl -u 'W5dLLZCOEcOi8MFYNkqHuiFnV:v2cFUINTgFlpl1D4MuASBa6YlKbF4HEbFPr8phEWHvYrC2fuQW' \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'\n
 2679  source ~/.zshrc
 2680  npx ts-node oauth2-bearer-test.ts
 2681  curl -u 'W5dLLZCOEcOi8MFYNkqHuiFnV:v2cFUINTgFlpl1D4MuASBa6YlKbF4HEbFPr8phEWHvYrC2fuQW' \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'\n
 2682  source ~/.zshrc
 2683  npx ts-node oauth2-bearer-test.ts
 2684  ls
 2685  npx ts-node initialization-client.ts
 2686  source ~/.zshrc
 2687  npx ts-node initialization-client.ts
 2688  j sdk
 2689  cd examples
 2690  npx ts-node initialization-client.ts
 2691  source ~/.zshrc
 2692  npx ts-node initialization-client.ts
 2693  j twitter
 2694  npm run dev -- --open
 2695  npx ts-node initialization-client.ts
 2696  source ~/.zshrc
 2697  npx ts-node initialization-client.ts
 2698  curl -u 'W5dLLZCOEcOi8MFYNkqHuiFnV:v2cFUINTgFlpl1D4MuASBa6YlKbF4HEbFPr8phEWHvYrC2fuQW' \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'\n
 2699  npx ts-node initialization-client.ts
 2700  cd ../..
 2701  ls
 2702  git clone git@github.com:cocreatelabs/co-create-mono.git
 2703  take mono-repo
 2704  ls
 2705  cd co-create-mono-13a7929fb39a3c81998cfd8373ca9ceb923c5bcb
 2706  ls
 2707  yarn i
 2708  ls -la
 2709  git init -b main
 2710  yarn install
 2711  exit
 2712  chatgpt
 2713  ls
 2714  cd packages
 2715  ls
 2716  cd backend
 2717  ls
 2718  cd ..
 2719  ls
 2720  cd ..
 2721  ls
 2722  sudo dpkg -i supabase_1.47.2_linux_amd64.deb
 2723  source ~/.zshrc
 2724  supabase login
 2725  source ~/.zshrc
 2726  supabase login
 2727  cd co-create-mono-13a7929fb39a3c81998cfd8373ca9ceb923c5bcb
 2728  supabase login
 2729  supabase init
 2730  docker
 2731  docker start
 2732  sudo apt update
 2733  sudo apt install dbmate
 2734  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 2735  afew -v -t --all\n
 2736  exit
 2737  j cocreate
 2738  cd archive
 2739  rm -rf cocreate-toolkit
 2740  kill-all emacx
 2741  kill-all emacs
 2742  cd ..
 2743  ls
 2744  cd fast-onboard
 2745  git init -b main
 2746  cd ../../..
 2747  ls
 2748  git clone git@github.com:cocreatelabs/docs.git
 2749  cd ..
 2750  ls
 2751  mv docs-main docs
 2752  ls
 2753  cd docs
 2754  ls
 2755  ls -la
 2756  git init -b main
 2757  cd docs
 2758  ls
 2759  j cocreate
 2760  cd companion
 2761  cd mono-repo
 2762  ls -la
 2763  cd docs
 2764  ls -la
 2765  rm -rf .git
 2766  ls
 2767  cd ..
 2768  git clone git@github.com:PureStake/moonbeam-docs.git
 2769  sudo apt update
 2770  sudo apt install tree
 2771  exit
 2772  cd moonbeam-docs
 2773  tree
 2774  tree > index.md
 2775  ls
 2776  tree > index-moonbeam.md
 2777  kill-all emacs
 2778  tree --help |
 2779  tree --help | less
 2780  tree -J > index-moonbeam.json
 2781  tree --help | less
 2782  tree -C -H > index-moonbeam.html
 2783  tree --help | less
 2784  tree -C -H baseHREF > index-moonbeam.html
 2785  tree --help | less
 2786  tree -C -H -d baseHREF > index-moonbeam.html
 2787  tree -C -H  baseHREF > index-moonbeam.html
 2788  tree --help | less
 2789  tree -C -X > index-moonbeam.xml
 2790  chatgpt
 2791  htop
 2792  kill-all immersed
 2793  htop
 2794  exit
 2795  tmux
 2796  doom sync
 2797  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 2798  afew -v -t --all
 2799  exit
 2800  curl --request POST \\n     --url https://api.testcocrt.xyz/alpha/user \\n     --header 'Authorization: Bearer $COCREATE_TOKEN' \\n     --header 'accept: application/json' \\n     --header 'content-type: application/json' \\n     --data '\n{\n  "email": "user@email.org"\n  "first_name": "user"\n}\n
 2801  curl --request POST \\n     --url https://api.testcocrt.xyz/alpha/user \\n     --header 'Authorization: Bearer $COCREATE_TOKEN' \\n     --header 'accept: application/json' \\n     --header 'content-type: application/json' \\n     --data '\n{\n  "email": "user@email.org",\n  "first_name": "user"\n}\n
 2802  curl --request POST \\n     --url https://api.testcocrt.xyz/alpha/user \\n     --header 'Authorization: Bearer $COCREATE_TOKEN' \\n     --header 'accept: application/json' \\n     --header 'content-type: application/json' \\n     --data '\n{\n  "email": "user@email.org",\n  "first_name": "user"\n}'\n
 2803  curl --request POST \\n     --url https://api.testcocrt.xyz/alpha/user \\n     --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n     --header 'accept: application/json' \\n     --header 'content-type: application/json' \\n     --data '\n{\n  "email": "user@email.org",\n  "first_name": "user"\n}'\n
 2804  source ~/.zshrc
 2805  j cocre
 2806  cd docs
 2807  ls -la
 2808  git init -b main
 2809  cd guides/creating-reward-program.md/metadata
 2810  for i in {1..9999}; do cp 0 $i; done
 2811  for i in {1..9999}; do cp 0 $i;
 2812  for i in {1..9999}; do cp 0 $i; done
 2813  ls
 2814  rm *
 2815  ls
 2816  j metadata
 2817  for i in {1..9999}; do cp 0 $i; done
 2818  exit
 2819  curl --request POST \\n  --url https://api.testcocrt.xyz/alpha/collectibles \\n  --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n  --data '{ "name": "street-coffee", "symbol": "STRTK", "media_url": "https://nftstorage.link/ipfs/bafybeiasv4llnkervuprzfte5sulodkzobcmpfc7ldwybdwiqq5ywbbstu/"}'\n
 2820  npm install -g  markdownlint
 2821  doom env
 2822  source ~/.zshrc
 2823  doom env
 2824  chatgpt
 2825  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 2826  chatgpt
 2827  j cocre
 2828  ls
 2829  take twitter-oauth
 2830  git clone git@github.com:alkihis/twitter-api-v2-user-oauth-flow-example.git
 2831  npm i
 2832  npm run start
 2833  npm audit fix
 2834  npm run start
 2835  chatgpt
 2836  tmux
 2837  exit
 2838  ls
 2839  cd twitter-api-v2-user-oauth-flow-example
 2840  ls
 2841  npm i needle
 2842  cd src
 2843  ls
 2844  node follows-lookup.js
 2845  npm run start
 2846  exit
 2847  ls
 2848  cd twitter-api-v2-user-oauth-flow-example
 2849  cd src
 2850  ls
 2851  node follows-lookup.js
 2852  source ~/.zshrc
 2853  curl -u "$API_KEY:$API_SECRET_KEY" \\n  --data 'grant_type=client_credentials' \\n  'https://api.twitter.com/oauth2/token'\n
 2854  cd ..
 2855  ls
 2856  git clone git@github.com:twitterdev/Twitter-API-v2-sample-code.git
 2857  exit
 2858  ls
 2859  j twitter
 2860  cd ..
 2861  cd twitter-oauth
 2862  cd Twitter-API-v2-sample-code
 2863  npm install needle
 2864  npm install got
 2865  npm install oauth-1.0a
 2866  exit
 2867  source ~/.zshrc
 2868  cd ..
 2869  ls
 2870  cd Twitter-API-v2-sample-code
 2871  ls
 2872  cd Follows-Lookup
 2873  ls
 2874  node following_lookup.js
 2875  cd ..
 2876  ls
 2877  cd twitter-api-v2-user-oauth-flow-example
 2878  ls
 2879  npm run start
 2880  exit
 2881  cd examples
 2882  ls
 2883  node oaut2-bearer-test.ts
 2884  hs -F "ts"
 2885  npx ts-node oauth2-bearer-test.ts
 2886  npm run start
 2887  chatgpt
 2888  npm run start
 2889  curl --location 'https://api.twitter.com/2/users/1612535478347264000/following' \\n--header 'Authorization: Bearer AAAAAAAAAAAAAAAAAAAAAPXamQEAAAAA%2FbBlz%2BWTJQkiC4ouZHl60BImNX0%3DQW8l5CpH632koJxSKcabWsHbGMpxGBZUEMDRouhxxxkbjytUCq' \\n--header 'Cookie: guest_id=v1%3A168045197240635222; guest_id_ads=v1%3A168045197240635222; guest_id_marketing=v1%3A168045197240635222; personalization_id="v1_QX4gzD7d+weufCuJnUroWA=="'
 2890  curl --request POST \\n     --url https://api.testcocrt.xyz/alpha/user \\n     --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde \\n     --header 'accept: application/json' \\n     --header 'content-type: application/json' \\n     --data '\n{\n  "email": "al@abama.org",\n  "first_name": "Al",\n  "last_name": "Abama",\n  "phone_number": "1234567890",\n  "phone_number": "1234567890",\n}\n
 2891  exit
 2892  curl --request POST \\n     --url https://api.testcocrt.xyz/alpha/user \\n     --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde \\n     --header 'accept: application/json' \\n     --header 'content-type: application/json' \\n     --data '\n{\n  "email": "al@abama.org",\n  "first_name": "Al",\n  "last_name": "Abama",\n  "phone_number": "1234567890",\n  "phone_number": "1234567890",\n}'
 2893  curl --request POST \\n     --url https://api.testcocrt.xyz/alpha/user \\n     --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde \\n     --header 'accept: application/json' \\n     --header 'content-type: application/json' \\n     --data '\n{\n  "email": "al@abama.org",\n  "first_name": "Al",\n  "last_name": "Abama",\n  "phone_number": "1234567890",\n  "phone_number": "1234567890",\n}''
 2894  whereis chatgpt
 2895  cargo install chatgpt-cli
 2896  ls
 2897  chatgpt
 2898  whereis chatgpt
 2899  source ~/.zshrc
 2900  history
 2901  sudo rm /usr/bin/chatgpt
 2902  chatgpt
 2903  chatgpt hey!
 2904  whereis chatgpt
 2905  sudo rm /home/o/.local/bin/chatgpt
 2906  source ~/.zshrc
 2907  chatgpt hey!
 2908  chatgpt I was just trying to interact with you to test my new environmant, thank you
 2909  chatgpt --help | less
 2910  exit
 2911  cd dev/cocreate/companion
 2912  git clone git@github.com:cocreatelabs/co-create-mono.git
 2913  ls
 2914  co-create-mono-dev
 2915  ls
 2916  ls -la
 2917  git init -b main
 2918  supabase login
 2919  supabase init
 2920  start docker
 2921  chatgpt '''                                1. Install docker for mac (https://www.docker.com/)\n2. run `brew install supabase/tap/supabase`\n3. In the monorepo root run `supabase login` (follow auth token instructions)\n4. run `supabase init`\n5. Start docker\n6. run `supabase start`\n7. Take note of the printed out config vars for the `Env vars` section.\n'''
 2922  docker --help | less
 2923  chatgpt code a wallet smart contract in solidity for me please, without importing from any library.
 2924  source ~/.zshrc
 2925  exit
 2926  htop
 2927  exit
 2928  chatgpt code a wallet smart contract in solidity for me please, without importing from any library.
 2929  j mono
 2930  exit
 2931  chatgpt what does the instruction in a developer reference mean by "Start docker"? How does that refer to invoking a command?
 2932  chatgpt what does the instruction in a developer reference mean by Start docker? How does that refer to invoking a command?
 2933  chatgpt what does the instruction in a developer reference mean by Start docker? How does that refer to invoking a command
 2934  chatgpt "what does the instruction in a developer reference mean by Start docker? How does that refer to invoking a command"
 2935  chatgpt what command would it be, then?
 2936  chatgpt "what command would it be, then?"
 2937  chatgpt "what command would it be, then, to start docker/"
 2938  j mono
 2939  sudo systemctl start docker
 2940  supabase start
 2941  docker run -d -p 80:80 docker/getting-started
 2942  chatgpt "where can I find out if the docker daemon is installed on my ubuntu machine?\n"
 2943  sudo systemctl status docker
 2944  hs -F "ss"
 2945  hs -F "ss "
 2946  sudo ss -ltn
 2947  chatgpt "can you give me a linux command to find processes running on port 80 and priting their name?"
 2948  sudo lsof -i :80 | grep LISTEN | awk '{print $1}'
 2949  htop
 2950  kill-all apache2
 2951  sudo kill-all apache2
 2952  sudo ./home/o/.local/bin/kill-all apache2
 2953  exit
 2954  j mono
 2955  history
 2956  sudo lsof -i :80 | grep LISTEN | awk '{print $1}'
 2957  whereis apache2
 2958  sudo systemctl status mysql
 2959  sudo systemctl stop mysql
 2960  sudo lsof -i :80 | grep LISTEN | awk '{print $1}'
 2961  sudo systemctl start mysql
 2962  sudo systemctl start apache2
 2963  sudo systemctl stop apache2
 2964  sudo lsof -i :80 | grep LISTEN | awk '{print $1}'
 2965  docker run -d -p 80:80 docker/getting-started
 2966  sudo systemctl status docker
 2967  sudo apt update
 2968  sudo apt install apt-transport-https ca-certificates curl software-properties-common
 2969  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
 2970  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 2971  sudo apt update
 2972  apt-cache policy docker-ce
 2973  sudo apt install docker-ce
 2974  sudo systemctl status docker
 2975  hs docker
 2976  sudo systemctl status docker
 2977  supabase start
 2978  supabase start --debug
 2979  cd 
 2980  j compan
 2981  ls
 2982  cd twitter-app
 2983  ls
 2984  npm run start
 2985  sudo systemctl status mysql
 2986  npm run dev -- --open
 2987  chatgpt can you explain javascript reduce function?
 2988  chatgpt can you explain javascript reduce function
 2989  chatgpt what does this annotation mean in javascript: [...value];
 2990  chatgpt "what does this annotation mean in javascript: [...value];"
 2991  j comp
 2992  git clone git@github.com:Youngestdev/svelte-continent-app.git
 2993  cd svelte-continent-app
 2994  cd ../twitter-app
 2995  npm run dev -- --open
 2996  chatgpt can you show me an example using RequestHandler with svelte kit
 2997  npm run dev -- --open
 2998  mysql
 2999  tmux
 3000  chatgpt how to list a user in mysql
 3001  chatgpt how to change a users password in myql
 3002  mysql
 3003  mysql -u root -p
 3004  sudo mysql
 3005  mysql
 3006  npm run dev -- --open
 3007  hs -F "npm run"
 3008  npm run dev -- --open
 3009  ls
 3010  ls -la
 3011  cd .git/
 3012  cd .git
 3013  ls
 3014  vim config
 3015  cd ..
 3016  git clone git@github.com:ravenpdev/twitter_clone.git
 3017  ls
 3018  mv twitter_clone ..
 3019  cd ..
 3020  ls
 3021  npm run dev -- --open
 3022  cd twitter-app
 3023  npm run dev -- --open
 3024  chatgpt can you explain the twitter oauth2.0 flow
 3025  chatgpt can you elaborate
 3026  exit
 3027  cd ..
 3028  git clone git@github.com:nextauthjs/next-auth.git
 3029  cd twitter-app
 3030  ls
 3031  npm run dev -- --open
 3032  cd ..
 3033  ls
 3034  npm create svelte@latest cocreate-api-client-template
 3035  ls
 3036  take cocreate-api-client-template
 3037  npm create svelte@latest cocreate-api-client-template
 3038  cd cocreate-api-client-template
 3039  npm i
 3040  git init && git add -A && git commit -m "Initial commit" (optional)
 3041  npm run dev -- --open
 3042  ls -la
 3043  cd ..
 3044  ls
 3045  take twitter-v2
 3046  npm install twitter-v2
 3047  ls
 3048  ls -la
 3049  npm init
 3050  ls
 3051  npm install twitter-v2
 3052  ls
 3053  cd ../
 3054  git clone git@github.com:HunterLarco/twitter-v2.git
 3055  cd examples
 3056  node examples/get_tweets.js
 3057  cd twitter-v2
 3058  cd examples
 3059  ls
 3060  npm i
 3061  ls
 3062  cd ..
 3063  ls
 3064  node examples/get_tweets.js
 3065  npm i
 3066  node examples/get_tweets.js
 3067  exit
 3068  cd examples
 3069  node examples/get_tweets.js
 3070  ls
 3071  cd ..
 3072  ls
 3073  npm delete twitter-v2
 3074  npm remove twitter-v2
 3075  cd examples
 3076  node get_tweets.js
 3077  ls 
 3078  chatgpt what is throw in javascript
 3079  j twitter-app
 3080  npm run dev -- --open
 3081  chatgpt what are the redirect codes in http and when should they be used
 3082  npm run dev -- --open
 3083  j twitter-app
 3084  npm run dev -- --open
 3085  ls
 3086  cd ..
 3087  ls
 3088  git clone git@github.com:cocreatelabs/co-create-app.git
 3089  ls
 3090  rm co-create-app-dev.zip
 3091  rm co-create-mono-dev.zip
 3092  rm swagger-codegen-cli.jar
 3093  cd co-create-app-dev
 3094  ls
 3095  git init -b main
 3096  ls
 3097  ls -la
 3098  yarn install
 3099  yarn dev
 3100  cd ..
 3101  rm -rf co-create-app-dev
 3102  npx create-react-app co-create-template-app
 3103  cd co-create-template-app
 3104  npm start
 3105  ls -la
 3106  npm start
 3107  cd ..
 3108  cd archive/react-mini-swagger-client
 3109  chatgpt can you describe what a react element is and can you code one example
 3110  chatgpt can you code an element which make an api code is made and then displays the response
 3111  chatgpt can you code a react element which make an api code is made and then displays the response
 3112  cd ..
 3113  ls
 3114  cd ../companion/
 3115  ls
 3116  cd co-create-template-app
 3117  history
 3118  npm start
 3119  npm i @usecocreate/sdk
 3120  npm start
 3121  cd ..
 3122  git clone git@github.com:swagger-api/swagger-codegen.git
 3123  cd swagger-codegen
 3124  ls -la
 3125  ls
 3126  cd ..
 3127  rm -rf swagger-codegen
 3128  wget https://repo1.maven.org/maven2/io/swagger/codegen/v3/swagger-codegen-cli/3.0.42/swagger-codegen-cli-3.0.42.jar -O swagger-codegen-cli.jar
 3129  java -jar swagger-codegen-cli.jar --help
 3130  hs -F "generate"
 3131  git clone https://github.com/matchid-project/swagger-ui-svelte\ncd swagger-ui-svelte\nnpm install && npm run dev
 3132  ls
 3133  cd ..
 3134  ls
 3135  rm -rf swagger-ui-svelte
 3136  cd ../archive/react-mini-swagger-client
 3137  npm start
 3138  curl -X 'GET' \\n  'https://api.testcocrt.xyz/alpha/user?email=foo%40bar.com' \\n  -H 'accept: application/json' \\n  -H 'Authorization: zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde'
 3139  cd ../../companion/twitter-api-typescript-sdk
 3140  ls
 3141  git init -b main
 3142  cd ..
 3143  npm install @usecocreate/sdk
 3144  exit
 3145  npm start
 3146  cd twitter-app
 3147  npm start
 3148  ls
 3149  cd ..
 3150  ls
 3151  cd archive
 3152  ls
 3153  cd react-mini-swagger-client
 3154  ls
 3155  npm install @usecocreate/sdk
 3156  htop
 3157  npm start
 3158  chatgpt convert the following into typescript import React from "react";\nimport { connectTwitterLink } from "@usecocreate/sdk";\n\nfunction TwitterConnectButton() {\n  const link = connectTwitterLink({\n    appId: "eaca3852-c705-40d7-9f89-d83e6e509f94",\n    redirectUrl: "http://localhost:3000/twitter_redirect_test",\n    userEmail: "email@example.com",\n    sessionVerifier: "my_session_verifier",\n  });\n\n  return (\n    <a href={link} target="_blank" rel="noopener noreferrer">\n      Connect Twitter\n    </a>\n  );\n}\n\nexport default TwitterConnectButton;\n
 3159  chatgpt "convert the following into typescript: import React from "react";\nimport { connectTwitterLink } from "@usecocreate/sdk";\n\nfunction TwitterConnectButton() {\n  const link = connectTwitterLink({\n    appId: "eaca3852-c705-40d7-9f89-d83e6e509f94",\n    redirectUrl: "http://localhost:3000/twitter_redirect_test",\n    userEmail: "email@example.com",\n    sessionVerifier: "my_session_verifier",\n  });\n\n  return (\n    <a href={link} target="_blank" rel="noopener noreferrer">\n      Connect Twitter\n    </a>\n  );\n}\n\nexport default TwitterConnectButton;"\n
 3160  npm start
 3161  exit
 3162  npm start
 3163  cd ..
 3164  git clone git@github.com:kcsuraj/react-typescript-swagger.git
 3165  mv react-typescript-swagger ../companion
 3166  cd ..
 3167  fzf
 3168  cd comp
 3169  j comp
 3170  exit
 3171  cd companion/react-typescript-swagger
 3172  npm api
 3173  npm i
 3174  npm api
 3175  npm run api
 3176  ls
 3177  tmux
 3178  cd ..
 3179  fzf
 3180  cd companion/react-typescript-swagger
 3181  ls
 3182  npm run api
 3183  ls
 3184  npm run api
 3185  curl -X 'GET' \\n  'https://api.testcocrt.xyz/alpha/user?email=al%40abama.org' \\n  -H 'accept: application/json' \\n  -H 'Authorization: zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde'
 3186  curl -X 'GET' \\n  'https://api.testcocrt.xyz/alpha/user?email=al%40abama.org' \\n  -H 'accept: application/json' \\n  -H 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde'
 3187  npm run api
 3188  ls
 3189  cd ..
 3190  ls
 3191  cd ~/.config/emacs/.local
 3192  ls
 3193  cd cache
 3194  ls
 3195  rm -rf *
 3196  npm start
 3197  cd ..
 3198  ls
 3199  npm create vite@latest o -- --template react
 3200  cd o
 3201  ls
 3202  npm install react-router-dom localforage match-sorter sort-by
 3203  npm run dev
 3204  ls -la
 3205  git init -b main
 3206  exit
 3207  mkdir src/routes\ntouch src/routes/root.jsx
 3208  touch src/routes/contact.jsx
 3209  cd ..
 3210  npm init react-app -- --template typescript 1\ncd my-app
 3211  ls
 3212  cd 1
 3213  ls
 3214  npm install react-router-dom react-hook-form
 3215  npm install bootstrap font-awesome
 3216  npm init @api-platform/client https://api.testcocrt.xyz -f openapi3 src/ -- --generator react --resource book
 3217  ls -la
 3218  npm run start
 3219  npm init @api-platform/client https://demo.api-platform.com src/ -- --generator react --resource book
 3220  npm run start
 3221  hs -F "resource"
 3222  npm init @api-platform/client https://api.testcocrt.xyz -f openapi3 src/ -- --generator react
 3223  npm init @api-platform/client -s https://api.testcocrt.xyz -f openapi3 src/ -- --generator react
 3224  npm init @api-platform/client -s https://api.testcocrt.xyz -f openapi3 src/ --generator react
 3225  npm init @api-platform/client -s "https://api.testcocrt.xyz" -f openapi3 src/ --generator react
 3226  npm init @api-platform/client -s https://api.testcocrt.xyz -f openapi3  --generator react
 3227  npm init @api-platform/client -s https://api.testcocrt.xyz -f openapi3 src/ -- --generator react
 3228  npm init @api-platform/client -s https://github.com/cocreatelabs/zuplo/blob/main/config/routes.oas.json -f openapi3 src/ -- --generator react
 3229  npm init @api-platform/client -s https://api.testcocrt.xyz  src/ -- --generator react
 3230  npm init @api-platform/client -s https://api.testcocrt.xyz -f openapi3  src/ -- --generator react
 3231  npm start
 3232  npm install @usecocreate/sdk
 3233  npm start
 3234  j comp
 3235  ls
 3236  cd o
 3237  npm start
 3238  npm run dev
 3239  npm run dev > oLOg
 3240  npm run dev
 3241  exit
 3242  npm run dev --host
 3243  npm install @usecocreate/sdk
 3244  npm run dev --host
 3245  chatgpt what should my redirect page from twitter oauth api  look like in a react-router app
 3246  chatgpt how should I code the redirect react page after authentication to twitter auth
 3247  npm run dev --host
 3248  hs -F "gh"
 3249  gh repo create TwitterConnectButton
 3250  gh repo create TwitterConnectButton --private
 3251  git remote add origin git@github.com:anegg0/TwitterConnectButton.git\ngit branch -M main\ngit push -u origin main
 3252  ls
 3253  ls -la
 3254  cd .git
 3255  ls
 3256  vim config
 3257  ssh-agent sh -c 'ssh-add; ssh-add -L'
 3258  ssh-keygen -t ed25519 -C "gael.blanchemain@protonmail.com"
 3259  eval "$(ssh-agent -s)"
 3260  ssh-add ~/.ssh/id_anegg0_erd25519
 3261  ssh-add ~/.ssh/id_erd25519
 3262  cd ~/.ssh/
 3263  ls
 3264  ssh-add ~/.ssh/id_ed25519
 3265  ls
 3266  exa
 3267  ssh-keygen -t ed25519 -C "gael.blanchemain@protonmail.com"
 3268  ls
 3269  ssh-add ~/.ssh/pouet
 3270  cat ~/.ssh/id_ed25519.pub
 3271  cat ~/.ssh/pouet
 3272  cat ~/.ssh/pouet.pub
 3273  j o
 3274  cd o
 3275  ls
 3276  hs -F "push"
 3277  \ngit push -u origin main
 3278  ssh-add ~/.ssh/pouet
 3279  \ngit push -u origin main
 3280  ssh-add ~/.ssh/pouet
 3281  \ngit push -u origin main
 3282  vim  .git/config
 3283  git remote add origin git@github.com:anegg0/TwitterConnectButton.git\ngit branch -M main\ngit push -u origin main
 3284  gh repo create TwitterConnectButton
 3285  gh repo create TwitterConnectButton --public
 3286  git remote add origin git@github.com:anegg0/TwitterConnectButton.git\ngit branch -M main\ngit push -u origin main
 3287  ssh --help | less
 3288  ssh-keygen -t rsa -f ~/.ssh/github
 3289  j ssh
 3290  ls
 3291  cat ~/.ssh/github.pub
 3292  eval "$(ssh-agent -s)"
 3293  hs -F "agent"
 3294  eval "$(ssh-agent -s)"
 3295  ssh-add ~/.ssh/id_github
 3296  ls
 3297  ssh-add ~/.ssh/github
 3298  git remote add origin git@github.com:anegg0/TwitterConnectButton.git\ngit branch -M main\ngit push -u origin main
 3299  j o
 3300  cd o
 3301  git remote add origin git@github.com:anegg0/TwitterConnectButton.git\ngit branch -M main\ngit push -u origin main
 3302  npm run dev --host
 3303  git remote add origin git@github.com:anegg0/TwitterConnectButton.git\ngit branch -M main\ngit push -u origin main
 3304  npm run dev --host
 3305  chatgpt proof read the following: This guide will walk you through the steps to build a reward program with Co:Create. We will use the example of a loyalty program for a coffee shop.\n\nLet's imagine that you are the owner of a coffee shop franchise and you want to thank members of your loyalty program for following your brand's twitter account by rewarding them with collectibles: a limited series of street-art pictures celebrating the 20 years of your brand's creation.\n\nYour brand can start building a community of super fans who use their collectibles as a pass to events sponsored by your brand, as a voucher to redeem coffee, as an asset in their favorite game, and more! Since your members' tokens are on a blockchain, the interoperability is endless ( Co:Create currently lives on Polygon, multi-chain coming soon).\n\nWhat's nicer: your users don't need to know anything about crypto wallets to enjoy their unique collectible, a wallet will be created for them, all they need is an email address (user can also use their self-custodied wallets if they so choose).
 3306  chatgpt "proof read the following: This guide will walk you through the steps to build a reward program with Co:Create. We will use the example of a loyalty program for a coffee shop.\n\nLet's imagine that you are the owner of a coffee shop franchise and you want to thank members of your loyalty program for following your brand's twitter account by rewarding them with collectibles: a limited series of street-art pictures celebrating the 20 years of your brand's creation.\n\nYour brand can start building a community of super fans who use their collectibles as a pass to events sponsored by your brand, as a voucher to redeem coffee, as an asset in their favorite game, and more! Since your members' tokens are on a blockchain, the interoperability is endless ( Co:Create currently lives on Polygon, multi-chain coming soon).\n\nWhat's nicer: your users don't need to know anything about crypto wallets to enjoy their unique collectible, a wallet will be created for them, all they need is an email address (user can also use their self-custodied wallets if they so choose)."
 3307  chatgpt "proof read the following: o:Create streamlines the contract creation and deployment process which translates into single call to the API. The contract is created and deployed to the blockchain in a single step."
 3308  cd ..
 3309  git clone git@github.com:shalvah/twittersignin.git
 3310  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 3311  crontab -l
 3312  email-fetch
 3313  j emacs
 3314  git status
 3315  doom sync
 3316  doom doctor
 3317  npm i g- solium
 3318  npm i -g solium
 3319  source ~/.zshrc
 3320  doom env
 3321  doom doctor
 3322  doom sync
 3323  doom doctor
 3324  npm i -g tidy
 3325  sudo apt update
 3326  sudo apt install tidy
 3327  doom env
 3328  doom doctor
 3329  npm init stylelint
 3330  npm install -g stylelint
 3331  npm init stylelint
 3332  doom env
 3333  doom doctor
 3334  npm i -g js-beautify
 3335  doom env
 3336  doom sync
 3337  doom doctor
 3338  doom sync
 3339  j ~
 3340  j emacs
 3341  cd ./.local
 3342  cd cache
 3343  ls
 3344  rm project*
 3345  ls
 3346  doom sync
 3347  pass show gr0wing
 3348  j init
 3349  j doom
 3350  ls
 3351  vim config.el
 3352  exit
 3353  doom doctor
 3354  vim config.el
 3355  j doom
 3356  vim config.el
 3357  doom doctor
 3358  doom sync
 3359  doom env
 3360  vim config.el
 3361  doom sync
 3362  doom env
 3363  j emacs
 3364  j doom 
 3365  git status
 3366  vim init.el
 3367  vim config.el
 3368  doom sync
 3369  doom doctor
 3370  doom sync
 3371  doom env
 3372  doom doctor
 3373  doom compile
 3374  doom clean
 3375  doom doctor
 3376  doom sync
 3377  doom env
 3378  doom doctor
 3379  chatgpt what does legalese
 3380  chatgpt what does legalese mean
 3381  doom doctor
 3382  kill-all emacs
 3383  doom doctor
 3384  doom sync
 3385  doom doctor
 3386  sudo apt install ca-certificates
 3387  touch /var/log/mail/msmtp.log
 3388  ls /var/log/mail/
 3389  ls /var/log/
 3390  take /var/log/mail
 3391  sudo take /var/log/mail
 3392  sudo mkdir /var/log/mail
 3393  sudo touch /var/log/mail/msmtp.log
 3394  sudo chmod 740 /var/log/mail/msmtp.log
 3395  sudo chmod 777 /var/log/mail/msmtp.log
 3396  source ~/.zshrc
 3397  sudo chmod 777 /home/o/.cert/protonmail/cert.pem
 3398  ls -la /usr/sbin/sendmail
 3399  j cert
 3400  hs -F "cert"
 3401  ls -la /home/o/.cert/protonmail/cert.pem
 3402  cat /home/o/.cert/protonmail/cert.pem
 3403  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 3404  kill-all emacs
 3405  doom doctor
 3406  doom sync
 3407  doom doctor
 3408  chatgpt what is org roam mode?
 3409  chatgpt what is org roam mode
 3410  sudo apt install sqlite3 
 3411  doom sync
 3412  j cocre
 3413  ls
 3414  rm -rf moonbeam-docs
 3415  rm -rf twitter-oauth
 3416  take testing
 3417  git clone git@github.com:cocreatelabs/zuplo.git
 3418  cd zuplo
 3419  yarn test
 3420  ls
 3421  yarn install
 3422  yarn test
 3423  ls
 3424  cd tests
 3425  ls
 3426  yarn test
 3427  jest --setupFiles dotenv/config
 3428  npm install jest
 3429  yarn add jest
 3430  yarn test
 3431  chatgpt what is the difference between assert and expect in chai library
 3432  yarn test
 3433  htop
 3434  doom sync
 3435  crontab -l
 3436  crontab -r
 3437  crontab -l
 3438  vim ~/.config/systemd/user/mbsync.service
 3439  ls ~/.config/systemd/user/
 3440  ls ~/.config/systemd/
 3441  ls ~/.config/
 3442  service --status-all
 3443  htop
 3444  kill-all vlc
 3445  sudo kill-all vlc
 3446  htop
 3447  touch /etc/systemd/user/mbsync.service
 3448  sudo touch /etc/systemd/user/mbsync.service
 3449  sudo chmod 744 /etc/systemd/user/mbsync.service
 3450  ls -la /etc/systemd/user/mbsync.service
 3451  ls
 3452  ls -la /etc/systemd/user/mbsync.service
 3453  ls -la /etc/systemd/user/
 3454  sudo chmod 764 /etc/systemd/user/mbsync.service
 3455  chatgpt how to list existing user groups in linux
 3456  cat /etc/group
 3457  cat /etc/group | less
 3458  cat /etc/group/mbsync* | less
 3459  cat /etc/group/mbsyn* | less
 3460  cat /etc/group | less
 3461  systemd-timesync
 3462  chatgpt how can I know what linux groups I am a part of
 3463  groups
 3464  chatgpt how can I create a linux group and then add myself to it
 3465  sudo groupadd systemd
 3466  sudo usermod -aG systemd o
 3467  hs -F "system"
 3468  cd /etc/systemd/user/
 3469  ls
 3470  sudo touch mbsync.timer
 3471  ls
 3472  ls -la
 3473  sudo chmod 744 mbsync.timer
 3474  ls -la
 3475  chatgpt what is my linux computer host name
 3476  hostname
 3477  systemctl start mbsync.service
 3478  systemctl --help | less
 3479  systemctl enable mbsync.service
 3480  doom sync
 3481  whereis node
 3482  j dev
 3483  cd system
 3484  ls
 3485  git clone git@github.com:microsoft/vscode-chrome-debug.git\ncd vscode-chrome-debug\nnpm install\nnpm run build
 3486  j zuplo
 3487  yarn test
 3488  ls
 3489  yarn instll
 3490  yarn install
 3491  cd ..
 3492  ls
 3493  cd zuplo
 3494  ls
 3495  rm package-lock.json
 3496  yarn run dev
 3497  zup test
 3498  source ~/.zshrc
 3499  whereis zup
 3500  doom sync
 3501  cd tests
 3502  npm test
 3503  whereis node
 3504  zup dev
 3505  cd ..
 3506  zup dev
 3507  cd ..
 3508  cd zuplo
 3509  yarn install
 3510  yarn install --help | less
 3511  yarn install --force
 3512  source ~/.zshrc
 3513  whereis zup
 3514  yarn add @zuplo/cli
 3515  source ~/.zshrc
 3516  cd tests
 3517  yarn test
 3518  ls
 3519  trash ../.vscode/launch.json
 3520  trash --help | less
 3521  curl --request POST \\n  --url https://api.testcocrt.xyz/alpha/collectibles \\n  --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n  --data '{ "name": "street-sorrow", "symbol": "STRTS", "media_url": "https://nftstorage.link/ipfs/bafybeiasv4llnkervuprzfte5sulodkzobcmpfc7ldwybdwiqq5ywbbstu/"}'\n
 3522  curl --request POST \\n     --url https://api.testcocrt.xyz/alpha/erc721 \\n     --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n     --header 'accept: application/json' \\n     --header 'content-type: application/json' \\n     --data '\n{\n  "symbol": "STRTS",\n  "name": "street-sorrow",\n  "base_uri": "https://nftstorage.link/ipfs/bafybeiasv4llnkervuprzfte5sulodkzobcmpfc7ldwybdwiqq5ywbbstu/"\n}\n'
 3523  ls
 3524  cd ..
 3525  ls
 3526  cd tests
 3527  ls
 3528  vim erc721-sync.test.ts
 3529  chatgpt what is the typescript regex for strings of this format: 0xDBC6Bad97A31cBdbB558A012084f39314F30CD75
 3530  chatgpt how can I set up an expect statement in chai with the following regexp: /^0[xX][0-9a-fA-F]{40}$/
 3531  chatgpt "how can I set up an expect statement in chai with the following regexp: /^0[xX][0-9a-fA-F]{40}$/"
 3532  chatgpt what is the use of assert.fail in chai library
 3533  chatgpt can you show the code for a GET request without params using axios and chai
 3534  chatgpt what is the typescript regex for strings of this format: 35a2b236-d094-4957-b4cb-199bb30584d9
 3535  chatgpt what is base_uri in an nft contract
 3536  chatgpt what is base_uri in an nft smart contract
 3537  chatgpt what is the difference between erc-721 and erc-1155 when it comes to minting tokens
 3538  chatgpt can you mint nft with the erc-721 standard pointing to different images for each token
 3539  curl --request POST \\n     --url https://api.testcocrt.xyz/alpha/erc721 \\n     --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n     --header 'accept: application/json' \\n     --header 'content-type: application/json' \\n     --data '\n{\n  "name": "myCollectible",\n  "symbol": "CLCT",\n  "base_uri": "https://nftstorage.link/ipfs/bafybeiasv4llnkervuprzfte5sulodkzobcmpfc7ldwybdwiqq5ywbbstu/0"\n}\n'
 3540  j metadata
 3541  ls
 3542  for i in {1..9999}; do cp 0 $i; done
 3543  chatgpt what is the typescript regex for strings of this format: 0x0c040570aa12e202a5fa382b5b389dfc794a9f7b
 3544  exit
 3545  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 3546  curl --request POST \\n  --url https://api.testcocrt.xyz/alpha/erc721 \\n  --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n  --data '{ "name": "My Soulbound Token", "symbol": "SBT", "media_url": "https://example.com/media_url/"}'\n\n 
 3547  curl --request POST \\n  --url https://api.testcocrt.xyz/alpha/erc721 \\n  --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n  --data '{ "name": "My Soulbound Token", "symbol": "SBT", "base_uri": "https://example.com/media_url/"}'\n\n 
 3548  curl --request PATCH \\n  --url https://api.testcocrt.xyz/alpha/erc721/0x5DF734880615899291df907dC897abbB89B39B8A \\n  --header 'Authorization: Bearer  zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde'\\n  --data '{ "transfer_restrictions_enabled": true, "transfer_restrictions_addresses": ["0x1234567890abcdef", "0x0987654321fedcba"]}'
 3549  curl --request PATCH \\n  --url https://api.testcocrt.xyz/alpha/erc721/0x5DF734880615899291df907dC897abbB89B39B8A \\n  --header 'Authorization: Bearer  zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n  --data '{ "transfer_restrictions_enabled": true, "transfer_restrictions_addresses": ["0x1234567890abcdef", "0x0987654321fedcba"]}'
 3550  curl --request PATCH \\n  --url https://api.testcocrt.xyz/alpha/erc721/0x5df734880615899291df907dc897abbb89b39b8a \\n  --header 'Authorization: Bearer  zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n  --data '{ "transfer_restrictions_enabled": true, "transfer_restrictions_addresses": ["0x1234567890abcdef", "0x0987654321fedcba"]}'
 3551  curl --request PATCH \\n  --url https://api.testcocrt.xyz/alpha/erc721/0x5DF734880615899291df907dC897abbB89B39B8A \\n  --header 'Authorization: Bearer  zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n  --data '{ transfer_restricted: true, "transfer_allowlist": ["0x1234567890abcdef", "0x0987654321fedcba"]}'
 3552  curl --request PATCH \\n  --url https://api.testcocrt.xyz/alpha/erc721/0x5DF734880615899291df907dC897abbB89B39B8A \\n  --header 'Authorization: Bearer  zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n  --data '{ transfer_restricted: true, "transfer_allowlist": ["0x0c040570aa12e202a5fa382b5b389dfc794a9f7b", "0xe371ae58b8cd446924a66488a08b3c02ad9592bE"]}'
 3553  chatgpt what are the benefits of async API calls
 3554  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 3555  j coc
 3556  ls
 3557  cd archive
 3558  npm install @cocreate/v0.0.1-alpha#15cbhy1fxlgf9tgcj
 3559  tmux
 3560  cd ..
 3561  ls
 3562  take sdk-playground
 3563  chatgpt what are the causes of seizures
 3564  chatgpt what are the different forms of epilepsy
 3565  sudo apt update
 3566  sudo apt install arc-theme
 3567  sudo apt-get install chrome-gnome-shell
 3568  ls
 3569  ls -la
 3570  cd ..
 3571  ls
 3572  cd sdk-playground
 3573  ls
 3574  git init -b main
 3575  mbsync -C -a -V && notmuch new && afew -v -t --all\n
 3576  chatgpt how can I edit highlighting in emacs markdown-mode
 3577  can you provide a full example of highlighting rules for each markdown tag in markdown-mode in emacs init file?
 3578  chatgpt you provide a full example of highlighting rules for each markdown tag in markdown-mode in emacs init file
 3579  chatgpt can you provide a full example of highlighting rules for each markdown tag in markdown-mode in emacs init file
 3580  chagpt you provide a full example of highlighting rules for each markdown tag in markdown-mode in emacs init file
 3581  chatgpt you provide a full example of highlighting rules for each markdown tag in markdown-mode in emacs init file
 3582  exit
 3583  chatgpt --help
 3584  htop
 3585  exit
 3586  chatgpt are bot attacks more common on systems back end or front end
 3587  chatgpt what do you associate the term bot-mitigation with
 3588  doom doctor
 3589  doom compile
 3590  doom sync
 3591  doom doctor
 3592  doom compile
 3593  doom clean
 3594  doom compile
 3595  doom clean
 3596  doom doctor
 3597  doom compile
 3598  doom clean
 3599  doom sync
 3600  doom doctor
 3601  doom compile
 3602  doom clean
 3603  doom sync
 3604  doom doctor
 3605  doom upgrade
 3606  doom doctor
 3607  ls -la | less
 3608  doom doctor
 3609  j coc
 3610  touch .projectile
 3611  mv .projectile ./docs
 3612  cd docs
 3613  ls
 3614  ls -la
 3615  cd ..
 3616  ls
 3617  ls -la
 3618  cd docs
 3619  ls -la
 3620  doom sync
 3621  doom doctor
 3622  doom update
 3623  doom upgrade
 3624  doom clean
 3625  doom doctor
 3626  git init
 3627  ls -la
 3628  rm -rf .git/
 3629  ls -la
 3630  cd ..
 3631  ls
 3632  ls -la
 3633  touch .projectile
 3634  cd docs
 3635  ls
 3636  ls -la
 3637  doom sync
 3638  doom compile
 3639  doom clean
 3640  ddoom sync && doom build
 3641  doom sync && doom build
 3642  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 3643  ls -la
 3644  cd ..
 3645  ls -la
 3646  cd docs
 3647  git init
 3648  git config --global init.defaultBranch main
 3649  cd ..
 3650  cd docs
 3651  git branch -m main
 3652  ls
 3653  ls -la
 3654  sudo kill-all emacs
 3655  kill-all emacs
 3656  j sdk-play
 3657  ls
 3658  trash .git
 3659  ls -la
 3660  cd sdk-playground
 3661  ls -la
 3662  npm install
 3663  exit
 3664  crontab --help | less
 3665  crontab -l
 3666  cd ..
 3667  ls
 3668  cd docs
 3669  ls
 3670  take wagmi-docs-DOPE
 3671  git clone git@github.com:wagmi-dev/wagmi.git
 3672  j twitterb
 3673  cd ../../twitterconnect
 3674  ls
 3675  hs -F "--dev
 3676  hs -F "--dev"
 3677  hs -f "--dev"
 3678  hs -f "dev"
 3679  hs -F "--dev"
 3680  hs -F "dev"
 3681  npm run dev --host
 3682  chatgpt what is a .d.ts document
 3683  exit
 3684  cd twitterconnect
 3685  cd src
 3686  node
 3687  htop
 3688  cd ../archive
 3689  ls
 3690  trash mono-repo
 3691  cd ..
 3692  ls
 3693  cd co-create-mono-dev
 3694  ls
 3695  cd ..
 3696  trash co-create-mono-dev
 3697  git clone git@github.com:cocreatelabs/co-create-mono.git
 3698  cd co-create-mono
 3699  touch .projectile
 3700  ls -la
 3701  chatgpt how to tag a paragraph to be ignored by  markdown compiler 
 3702  doom sync
 3703  doom clean
 3704  hs -F "doom"
 3705  doom sync && doom build
 3706  j twitter
 3707  npm run dev --host
 3708  j twitterconn
 3709  npm run dev --host
 3710  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 3711  chatgpt can you find me 5 excuses to leave the apartment for 30 minutes without my wife being suspicious
 3712  chatgpt what is emacs evil mode
 3713  chatgpt does doom emacs use evil mode by default
 3714  how to access emacs documentation for a given module
 3715  chatgpt how to access emacs documentation for a given module
 3716  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 3717  curl --request POST \\n  --url https://api.testcocrt.xyz/alpha/erc721 \\n  --header 'Authorization: Bearer <YOUR_KEY_HERE>' \\n  --data '{ \n  \t\t\t\t\t"name": "My Soulbound Token",\n  \t\t\t\t\t"symbol": "SBT", "base_uri":\n            "https://example.com/media_url/",\n            "transfer_restricted": true, \n            "transfer_allowlist": "[\n            \t"0x0c040570aa12e202a5fa382b5b389dfc794a9f7b", \n            \t"0xe371ae58b8cd446924a66488a08b3c02ad9592be"\n            ]"\n}'
 3718  hs -F "Bearer"
 3719  curl --request POST \\n  --url https://api.testcocrt.xyz/alpha/erc721 \\n  --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n  --data '{ \n  \t\t\t\t\t"name": "My Soulbound Token",\n  \t\t\t\t\t"symbol": "SBT", "base_uri":\n            "https://example.com/media_url/",\n            "transfer_restricted": true, \n            "transfer_allowlist": "[\n            \t"0x0c040570aa12e202a5fa382b5b389dfc794a9f7b", \n            \t"0xe371ae58b8cd446924a66488a08b3c02ad9592be"\n            ]"\n}'
 3720  curl --request POST \\n  --url https://api.testcocrt.xyz/alpha/erc721 \\n  --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n  --data '{ \n  \t\t\t\t\t"name": "My Soulbound Token",\n  \t\t\t\t\t"symbol": "SBT", "base_uri":\n           "https://nftstorage.link/ipfs/bafybeiasv4llnkervuprzfte5sulodkzobcmpfc7ldwybdwiqq5ywbbstu/",\n            "transfer_restricted": true, \n            "transfer_allowlist": "[\n            \t"0x0c040570aa12e202a5fa382b5b389dfc794a9f7b", \n            \t"0xe371ae58b8cd446924a66488a08b3c02ad9592be"\n            ]"\n}'
 3721  curl --request POST \\n  --url https://api.testcocrt.xyz/alpha/erc721 \\n  --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde'\\n  --data '{\n  \t\t\t"name": "My Soulbound Token",\n  \t\t\t"symbol": "SBT", "base_uri":\n            "https://nftstorage.link/ipfs/bafybeiasv4llnkervuprzfte5sulodkzobcmpfc7ldwybdwiqq5ywbbstu/",\n            "transfer_restricted": true,\n            "transfer_allowlist": "[\n            \t"0x0c040570aa12e202a5fa382b5b389dfc794a9f7b",\n            \t"0xe371ae58b8cd446924a66488a08b3c02ad9592be"\n            ]"\n}'\n
 3722  curl --request POST \\n  --url https://api.testcocrt.xyz/alpha/erc721 \\n  --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde'\\n     --header 'accept: application/json' \\n     --header 'content-type: application/json' \\n  --data '{\n  \t\t\t"name": "My Soulbound Token",\n  \t\t\t"symbol": "SBT",\n        "base_uri":\n            "https://nftstorage.link/ipfs/bafybeiasv4llnkervuprzfte5sulodkzobcmpfc7ldwybdwiqq5ywbbstu/",\n        "transfer_restricted": true,\n        "transfer_allowlist": "[\n            \t"0x0c040570aa12e202a5fa382b5b389dfc794a9f7b",\n            \t"0xe371ae58b8cd446924a66488a08b3c02ad9592be"\n            ]"\n}'\n
 3723  tmux
 3724  ls
 3725  npm run dev --host
 3726  npm install node-fetch
 3727  npm remove node-fetch
 3728  cd ../sdk-playground
 3729  npm install node-fetch
 3730  npm run dev --host
 3731  npm --version
 3732  node --version
 3733  nvm use 16
 3734  npm run dev --host
 3735  ls
 3736  npm i
 3737  npm run dev --host
 3738  ls -la
 3739  git init -b main
 3740  npm run dev --host
 3741  exit
 3742  take tests-api
 3743  git init -b main
 3744  touch .projectile
 3745  npm i node-fetch
 3746  node ./sbt-deployment.js
 3747  node ./sbt-deployment.mjs
 3748  chatgpt please code a curl request with bearer authentication and node-fetch
 3749  chatgpt please code a curl API POST request in typescript using bearer authentication and node-fetch
 3750  node ./sbt-deployment.mjs
 3751  node ./sbt-with-sdk.mjs
 3752  npm i @usecocreate/sdk
 3753  node ./sbt-with-sdk.mjs
 3754  node ./sbt.mjs
 3755  node ./sbt-deployment.mjs
 3756  node ./gpt-sbt.mjs
 3757  node ./erc-721-deployment.mjs
 3758  node ./sbt-minting.mjs
 3759  node ./gpt-sbt.mjs
 3760  node ./sbt-deployment.mjs
 3761  node ./sbt-minting.mjs
 3762  node ./sbt-deployment.mjs
 3763  ls
 3764  node ./deploy-721-sdk.mjs
 3765  cd ..
 3766  ls
 3767  fzf
 3768  cd testing
 3769  ls
 3770  mv zuplo ..
 3771  ls -la
 3772  rm ../testing
 3773  rmdir ../testing
 3774  cd ..
 3775  ls
 3776  cd zuplo
 3777  ls
 3778  git status
 3779  git push
 3780  cd ..
 3781  cd zuplo
 3782  ls
 3783  npx readme-md-generator
 3784  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 3785  j test
 3786  node ./sbt-deploy-and-mint.mjs
 3787  doom sync
 3788  hs -F "&&"
 3789  ddoom sync && doom build
 3790  doom sync && doom build
 3791  doom sync
 3792  cd ..
 3793  fzf
 3794  exit
 3795  npm i black
 3796  npm i -g black
 3797  npm i -g prettier
 3798  node --version
 3799  doom env
 3800  doom sync
 3801  node ./sbt-deploy-and-mint.mjs
 3802  chatgpt how can I make a javascript available outside of the function it was initialized in
 3803  chatgpt how can I make a javascript variable  available outside of the function it was initialized in
 3804  node ./sbt-deploy-and-mint.mjs
 3805  chatgpt can i return two variables simultaneously in javascript
 3806  node ./sbt-deploy-and-mint.mjs
 3807  htop
 3808  exit
 3809  j test
 3810  chatgpt how to send a request to an async api endpoint in plain javascript
 3811  chatgpt how to send a request to an async api endpoint using javascript fetch library
 3812  node ./sbt-deploy-and-mint-async.mjs
 3813  npm i ethersjs
 3814  npm i ethers
 3815  doom sync && doom build
 3816  mbsync -C -a -V && notmuch new && afew -v -t --new\n
 3817  node ./sbt-deploy-and-mint-async.mjs
 3818  source ~/.zshrc
 3819  j test
 3820  node ./sbt-deploy-and-mint-async.mjs
 3821  node ./sbt-deploy-async-status-polling.mjs
 3822  node ./sbt-deploy-async-status-get-polling.mjs
 3823  node ./src/sbt-deploy-async-status-get-polling.mjs
 3824  ls
 3825  node ./src/async/sbt-deploy-async-status-get-polling.mjs
 3826  node ./src/async/sbt-deploy-async.mjs
 3827  cd src/async
 3828  ls
 3829  vim sbt-deploy-async.mjs
 3830  node ./src/async/sbt-deploy-async.mjs
 3831  node ./sbt-deploy-async.mjs
 3832  node ./sbt-deploy-async-interval.mjs
 3833  lspci
 3834  cat /proc/acpi/wakeup
 3835  lspci --help ||
 3836  lspci --help || less
 3837  lspci -nn
 3838  cat /proc/acpi/wakeup
 3839  lspci --help || less
 3840  lspci -t
 3841  lspci
 3842  cat /proc/acpi/wakeup
 3843  lspci > full-list
 3844  cat /proc/acpi/wakeup > uplist
 3845  grep --color -E '|enabled'  /sys/bus/usb/devices/*/power/wakeup
 3846  # Disable\nfor f in /sys/bus/usb/devices/1-1/power/wakeup\ndo\n   echo "disabled" > $f\ndone\n
 3847  sudo\nfor f in /sys/bus/usb/devices/1-1/power/wakeup\ndo\n   echo "disabled" > $f\ndone\n
 3848  su
 3849  su -
 3850  su -s /usr/bin/zsh
 3851  sudo su -
 3852  j test
 3853  node ./src/async/deploy-async-ERC20.mjs
 3854  ls
 3855  node ./src/async/transfer-async-ERC721.mjs
 3856  ls
 3857  cd src/async
 3858  ls
 3859  node ./transfer-async-ERC721.mjs
 3860  ls
 3861  node ./deploy-async-ERC721.mjs
 3862  node ./transfer-async-ERC721.mjs
 3863  node ./deploy-async-ERC721.mjs
 3864  node ./mint-async-ERC721.mjs
 3865  node ./deploy-async-ERC721.mjs
 3866  node ./mint-async-ERC721.mjs
 3867  node ./deploy-async-ERC721.mjs
 3868  node ./poll-deploy.mjs
 3869  node ./mint-async-ERC721.mjs
 3870  tmux
 3871  node ./poll-deploy.mjs
 3872  node ./mint-async-ERC721.mjs
 3873  node ./traverse-json.mjs
 3874  node ./mint-async-ERC721.mjs
 3875  node ./poll-deploy.mjs
 3876  node ./mint-async-ERC721.mjs
 3877  exit
 3878  doom sync
 3879  cd ../../../python-tests-api
 3880  ls
 3881  python deploy-erc20.py
 3882  touch .projectile
 3883  j coc
 3884  cd ../system
 3885  git clone https://github.com/rmarkello/pyls.git\ncd pyls\npython setup.py install
 3886  pip install pyls
 3887  python deploy-erc20.py
 3888  j twitter
 3889  npm run dev --host
 3890  chatgpt what do developers need when they approach a new platform
 3891  cd ../readme-export-04-28-2023
 3892  touch projectile
 3893  chatgpt what are  marketing point-based reward campaigns and how are their success measured
 3894  chatgpt how can I query amazon api to retrieve customers reviews
 3895  chatgpt how can NFTs drive customer engagement using gamification
 3896  exit
 3897  chatgpt do current video games provide with an external API
 3898  chatgpt can you summarize the following in 700 words: Bleacher Report (B/R) is a leading sports media brand reaching more than 175 million hyper-connected young sports fans each month through distribution of premium content. It is the #1 sports brand driving engagement and video views across all social platforms and the Bleacher Report app, while fueling offline engagement through unparalleled experiences that blend sports with culture. B/R sits within Warner Bros. Discovery, and is the digital arm of Warner Bros. Discovery Sports (WBD Sports), which fuels sports programming across TNT and TBS.\n\nAt Co:Create, we love to partner with community centric brands that are deeply focused on driving engagement and community involvement. Bleacher Report has been an early partner of Co:Create that recently launched a new program called B/R W2E (Watch to Earn), an exciting loyalty program that levels up the viewing experience through real-time gamification and rewards. Underneath the hood, these rewards models are powered by web3 technology and made possible by using smart contracts to create and distribute native tokens that can be earned, traded, and redeemed for various rewards.\n\n🚀 Co:Create sat down with Matt McElroy, Sr. Director of Growth & Innovation and Digital League Streaming at Warner Brother Discovery Sports, to discuss how he’s integrating web3 assets like NFTs and tokens into programming for Bleacher Report and other WBD Sports media properties.\n\nAs someone at the helm of one of the first tokenized community activations from a leading sports media brand, Matt shared exclusive insights on how his team is using web3 to serve sports fans and level up audience engagement. Let’s dive in. 👀\n\n🏆 Changing media landscape 🏆\nTo kick off the conversation, Matt explains the origin of WBD Sports’ interest in web3 technology,\n\n“It’s always about potential new revenue streams. But more so, it’s about figuring out how to continue to engage our fans. How do we future proof our business? How do we make sure that we’re able to meet fans where they are and provide them with a rich experience they can’t find elsewhere? Web3 is a very unique way of giving fans more; more ownership and more skin in the game for something they already cared deeply about.”\n\nIn today’s rapidly evolving media landscape, brands are constantly seeking innovative ways to engage their audience and foster a deeper sense of community. Traditional marketing efforts have become stale and one-directional, failing to capture the attention of today’s tech-savvy consumers. Users want more from the brands they associate with.\n\nConsumers are inundated with advertising messages and have plenty of options. How we earn consumer spend is evolving and brands are investing in a more personalized and community-centric approach to build loyalty. Creating symbiotic value between a brand and its consumers helps to establish a more authentic rapport and drives continued engagement beyond the purchase.\n\n“It’s in our DNA to be more innovative, cutting edge. It’s not copy and paste. We try to think differently, think outside the box,” says Matt.\n\n🤝 Community first > Customer first 🤝\n“We were one of the first sports programs to put Twitter on air during our TNT programming for the NBA It’s always been very important for us to have a two-way conversation with fans. Sports fans lean in in a way that a lot of other fans don’t. It’s always made the content and programming more interesting by getting fans’ voices into the show. B/R Watch to Earn is an evolution of that,” Matt shares.\n\nB/R Watch to Earn allows brands to reward and engage the most loyal fans. This community-centric approach means giving the audience something to do, which is why gamifiying the viewing experience has become such a fun trend. By watching and competing in trivia surrounding its iconic studio shows, viewers are rewarded for what was previously a passive activity. B/R Watch to Earn is an upgrade to the ways we consume, interact with, and monetize content. When these programs are built on web3, brands give their most loyal fans the opportunity to earn and own their rewards, while offering new value for advertisers and unlocking new onchain insights about audience behavior.\n\n“This is where loyalty and rewards comes into play — rewarding your most loyal consumers with access to things that the casual consumers haven’t unlocked yet,” said Matt.\n\n🏀 Watch to Earn steps into prime time 🏀\nBleacher Report has one of the most innovative sports content engines in the market. It also happens to have an incredibly engaged community. To leverage this community and build bridges toward the more traditional linear viewer of TNT programming, WBD Sports rolled out W2E, which features three tiers of trivia games where fans can earn tokens proportionate to their number of correct answers.\n\nMatt explains the three tiers that compose of their W2E program:\n\n🕹️ Always On: “There’s three tiers of trivia games. First is an Always On game. Kind of like Wordle, it’s like your daily, like single question, low token value, daily check-in game.”\n\n🎮 Scheduled: “There’s a scheduled game at 7:30 that’s for our Discord community, but anybody can join.”\n\n🎯 Integrated: “Then there’s a third tier, which is integrated into our linear studio shows via a QR code where trivia goes live. After you engage in trivia and depending on how many questions you get, right, you earn VR tokens. And then that VR token, it’s kinda like going to an arcade.”\n\nAfter tokens are redeemed, “they can be used in our marketplace for a mix of both digital and physical prizes. We currently have a mix of digital collectibles as well as physical prizes such as swag and props from the show and the hope is that every Thursday we’re cycling through different things and offering new rewards.\n\nWith three tiers of trivia games, B/R W2E is a leading example of the importance of creating rewarding experiences for different types of audiences, and allowing them to game their way to the top. Earned tokens can then be used to unlock premium content, access exclusive events, or be used in the Bleacher Report marketplace.\n\n💰Bringing web3 technology to the masses through Watch to Earn 💰\nWhen building the W2E program, Matt shares important considerations for building a consumer friendly product with web3 technology:\n\n“First and foremost, we knew we’d be marketing this to a linear audience. We’re going after the mainstream consumer who knows nothing about NFTs and wallets, so we made a bunch of very critical design choices in terms of the language we use and the user flow and technologies. It was very important that from a user experience standpoint to make onboarding process easy. 95% of our consumers have never had a wallet, so we made the sign up simple — you put in an email and you hit verify in the email that gets sent to you and you’re done.”\n\nB/R W2E doesn’t cut corners when instilling the importance of web3 fundamentals, “We don’t shy away from the fact that it’s a wallet”. But when explaining the initiative, they intentionally used the term ‘digital collectibles’ instead of ‘NFTs’. “I think one of the big benefits that we’ve had is that we’ve been building in this space since 2019. We’ve moved chains, we’ve tried different wallets, and we’ve started to learn what works and doesn’t.”\n\n🔮 The Future of Content & Community Engagement 🔮\nThe B/R Watch to Earn model has the potential to reshape the entire content landscape as we know it. By incentivizing engagement, brands are able to create more interactive and immersive experiences for their communities, while also providing content partners and advertisers with the tools they need to succeed in the digital age. Media brands like WBD Sports are at the forefront of this trend, and are using web3 tools to foster a vibrant and involved community through rewards and ownership. The proof is in the pudding.\n\nB/R Watch to Earn is one of the many ways Co:Create is fueling community-centric brands. Curious? Check out Co:Create’s API and start experimenting for yourself (the fans will thank you).
 3899  chatgpt can you summarize the following in 700 words: "Bleacher Report (B/R) is a leading sports media brand reaching more than 175 million hyper-connected young sports fans each month through distribution of premium content. It is the #1 sports brand driving engagement and video views across all social platforms and the Bleacher Report app, while fueling offline engagement through unparalleled experiences that blend sports with culture. B/R sits within Warner Bros. Discovery, and is the digital arm of Warner Bros. Discovery Sports (WBD Sports), which fuels sports programming across TNT and TBS.\n\nAt Co:Create, we love to partner with community centric brands that are deeply focused on driving engagement and community involvement. Bleacher Report has been an early partner of Co:Create that recently launched a new program called B/R W2E (Watch to Earn), an exciting loyalty program that levels up the viewing experience through real-time gamification and rewards. Underneath the hood, these rewards models are powered by web3 technology and made possible by using smart contracts to create and distribute native tokens that can be earned, traded, and redeemed for various rewards.\n\n🚀 Co:Create sat down with Matt McElroy, Sr. Director of Growth & Innovation and Digital League Streaming at Warner Brother Discovery Sports, to discuss how he’s integrating web3 assets like NFTs and tokens into programming for Bleacher Report and other WBD Sports media properties.\n\nAs someone at the helm of one of the first tokenized community activations from a leading sports media brand, Matt shared exclusive insights on how his team is using web3 to serve sports fans and level up audience engagement. Let’s dive in. 👀\n\n🏆 Changing media landscape 🏆\nTo kick off the conversation, Matt explains the origin of WBD Sports’ interest in web3 technology,\n\n“It’s always about potential new revenue streams. But more so, it’s about figuring out how to continue to engage our fans. How do we future proof our business? How do we make sure that we’re able to meet fans where they are and provide them with a rich experience they can’t find elsewhere? Web3 is a very unique way of giving fans more; more ownership and more skin in the game for something they already cared deeply about.”\n\nIn today’s rapidly evolving media landscape, brands are constantly seeking innovative ways to engage their audience and foster a deeper sense of community. Traditional marketing efforts have become stale and one-directional, failing to capture the attention of today’s tech-savvy consumers. Users want more from the brands they associate with.\n\nConsumers are inundated with advertising messages and have plenty of options. How we earn consumer spend is evolving and brands are investing in a more personalized and community-centric approach to build loyalty. Creating symbiotic value between a brand and its consumers helps to establish a more authentic rapport and drives continued engagement beyond the purchase.\n\n“It’s in our DNA to be more innovative, cutting edge. It’s not copy and paste. We try to think differently, think outside the box,” says Matt.\n\n🤝 Community first > Customer first 🤝\n“We were one of the first sports programs to put Twitter on air during our TNT programming for the NBA It’s always been very important for us to have a two-way conversation with fans. Sports fans lean in in a way that a lot of other fans don’t. It’s always made the content and programming more interesting by getting fans’ voices into the show. B/R Watch to Earn is an evolution of that,” Matt shares.\n\nB/R Watch to Earn allows brands to reward and engage the most loyal fans. This community-centric approach means giving the audience something to do, which is why gamifiying the viewing experience has become such a fun trend. By watching and competing in trivia surrounding its iconic studio shows, viewers are rewarded for what was previously a passive activity. B/R Watch to Earn is an upgrade to the ways we consume, interact with, and monetize content. When these programs are built on web3, brands give their most loyal fans the opportunity to earn and own their rewards, while offering new value for advertisers and unlocking new onchain insights about audience behavior.\n\n“This is where loyalty and rewards comes into play — rewarding your most loyal consumers with access to things that the casual consumers haven’t unlocked yet,” said Matt.\n\n🏀 Watch to Earn steps into prime time 🏀\nBleacher Report has one of the most innovative sports content engines in the market. It also happens to have an incredibly engaged community. To leverage this community and build bridges toward the more traditional linear viewer of TNT programming, WBD Sports rolled out W2E, which features three tiers of trivia games where fans can earn tokens proportionate to their number of correct answers.\n\nMatt explains the three tiers that compose of their W2E program:\n\n🕹️ Always On: “There’s three tiers of trivia games. First is an Always On game. Kind of like Wordle, it’s like your daily, like single question, low token value, daily check-in game.”\n\n🎮 Scheduled: “There’s a scheduled game at 7:30 that’s for our Discord community, but anybody can join.”\n\n🎯 Integrated: “Then there’s a third tier, which is integrated into our linear studio shows via a QR code where trivia goes live. After you engage in trivia and depending on how many questions you get, right, you earn VR tokens. And then that VR token, it’s kinda like going to an arcade.”\n\nAfter tokens are redeemed, “they can be used in our marketplace for a mix of both digital and physical prizes. We currently have a mix of digital collectibles as well as physical prizes such as swag and props from the show and the hope is that every Thursday we’re cycling through different things and offering new rewards.\n\nWith three tiers of trivia games, B/R W2E is a leading example of the importance of creating rewarding experiences for different types of audiences, and allowing them to game their way to the top. Earned tokens can then be used to unlock premium content, access exclusive events, or be used in the Bleacher Report marketplace.\n\n💰Bringing web3 technology to the masses through Watch to Earn 💰\nWhen building the W2E program, Matt shares important considerations for building a consumer friendly product with web3 technology:\n\n“First and foremost, we knew we’d be marketing this to a linear audience. We’re going after the mainstream consumer who knows nothing about NFTs and wallets, so we made a bunch of very critical design choices in terms of the language we use and the user flow and technologies. It was very important that from a user experience standpoint to make onboarding process easy. 95% of our consumers have never had a wallet, so we made the sign up simple — you put in an email and you hit verify in the email that gets sent to you and you’re done.”\n\nB/R W2E doesn’t cut corners when instilling the importance of web3 fundamentals, “We don’t shy away from the fact that it’s a wallet”. But when explaining the initiative, they intentionally used the term ‘digital collectibles’ instead of ‘NFTs’. “I think one of the big benefits that we’ve had is that we’ve been building in this space since 2019. We’ve moved chains, we’ve tried different wallets, and we’ve started to learn what works and doesn’t.”\n\n🔮 The Future of Content & Community Engagement 🔮\nThe B/R Watch to Earn model has the potential to reshape the entire content landscape as we know it. By incentivizing engagement, brands are able to create more interactive and immersive experiences for their communities, while also providing content partners and advertisers with the tools they need to succeed in the digital age. Media brands like WBD Sports are at the forefront of this trend, and are using web3 tools to foster a vibrant and involved community through rewards and ownership. The proof is in the pudding.\n\nB/R Watch to Earn is one of the many ways Co:Create is fueling community-centric brands. Curious? Check out Co:Create’s API and start experimenting for yourself (the fans will thank you)."
 3900  chatgpt what is the difference between tutorials and guides in the context of technical writing
 3901  chatgpt proof read the following in proper french, with accents: En tant que Francais, je suis desole de voir que la Suisse adopte nos pires regressions dans le domaine de la loi du travail. Mais les travailleurs se reveillent chez vous aussi, tous mes encouragements depuis l autre cote
 3902  kill-all emacs
 3903  j dev
 3904  fzf
 3905  kill-all emacs
 3906  j docs
 3907  ls -la
 3908  cd current-docs
 3909  ls -la
 3910  cd ..
 3911  ls
 3912  la -la
 3913  la
 3914  cp .git/ ../archive/.vieuxgitdocs
 3915  cp -r .git/ ../archive/.vieuxgitdocs
 3916  doom sync
 3917  htop
 3918  exit
 3919  curl --request PATCH \\n     --url https://api.testcocrt.xyz/alpha/erc721 \\n     --header 'Authorization: Bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n     --header 'accept: application/json' \\n     --header 'content-type: application/json' \\n     --data '\n{\n  "id": "883eeb8b-1062-4187-9800-c85f53aa9819",\n  "base_uri": "https://nftstorage.link/ipfs/bafkreicwnvojnibpt2di4ped6xfvf72vjbmrma7zzyhsxpjielvffy7aq4/"\n}\n'
 3920  j docs
 3921  la
 3922  rm .projectile
 3923  rm -rf .git
 3924  la
 3925  cd current
 3926  la
 3927  git init -b main
 3928  touch .projectile
 3929  la
 3930  ls
 3931  trash v.0.0.2
 3932  trash v0.0.2
 3933  trash 'Changelog Posts
 3934  trash Changelog Posts
 3935  trash Changelog Posts/
 3936  trash 'Changelog Posts/'
 3937  ls
 3938  trash cocreate-2023-5-5.zip
 3939  cd v0.0.1-alpha
 3940  mv * ..
 3941  ls
 3942  cd ..
 3943  ls
 3944  rmdir v0.0.1-alpha
 3945  ls
 3946  la
 3947  exit
 3948  cd ..
 3949  fzf
 3950  cd ..
 3951  fzf
 3952  htop
 3953  exit
 3954  chatgpt how can I tell if an api is restful
 3955  kill-all immersed
 3956  htop
 3957  doom sync
 3958  j twi
 3959  npm run dev --host
 3960  htop
 3961  exit
 3962  doom sync
 3963  htoop
 3964  htop
 3965  exit
 3966  reboot
 3967  j docume
 3968  cd ..
 3969  cd ../Documentation/
 3970  ls
 3971  rm templates-main
 3972  trash templates-main.zip
 3973  cd templates-main
 3974  la
 3975  git init -b main
 3976  trash .git
 3977  touch .projectile
 3978  doom sync
 3979  exit
 3980  doom sync
 3981  reboot
 3982  chatgpt list 5 benefits of integrating with social media when you run a marketing campaign website
 3983  doom sync
 3984  chatgpt Compare and contrast two blockchain development approaches: the native approach, such as using solidity and contracts deployments, and the restful API approach which consists in performing those operations by calling an API that abstracts away blockchain primitives. Discuss their respective advantages and drawbacks in creating web3 experiences.\n
 3985  chatgpt make it a 700 words technical article, with a use case for each scenario. make the tone light and witty.
 3986  chatgpt Compare and contrast two blockchain development approaches: the native approach, such as using solidity and contracts deployments, and the restful API approach which consists in performing those operations by calling an API that abstracts away blockchain primitives. Discuss their respective advantages and drawbacks in creating web3 experiences, and show how the API approach fits use cases where there is an existing market and its associated infrastructure, such as NFTs. make it a technical article with a witty tone.\n
 3987  chatgpt Compare and contrast two blockchain development approaches: the native approach, such as using solidity and contracts deployments, and the restful API approach which consists in performing those operations by calling an API that abstracts away blockchain primitives. Discuss their respective advantages and drawbacks in creating web3 experiences, and show how the API approach fits use cases where there is an existing market and its associated infrastructure, such as NFTs. make it a 700 words technical article written by a senior blockchain developer (without mentioning it)\n
 3988  chatgpt "Compare and contrast two blockchain development approaches: the native approach, such as using solidity and contracts deployments, and the restful API approach which consists in performing those operations by calling an API that abstracts away blockchain primitives. Discuss their respective advantages and drawbacks in creating web3 experiences, and show how the API approach fits use cases where there is an existing market and its associated infrastructure, such as NFTs. make it a 700 words technical article written by a senior blockchain developer (without mentioning it)"\n
 3989  chatgpt correct this in proper french, with accents
 3990  chatgpt correct this in proper french, with accents: "Ils en pensent à peu près la meme chose, j'imagine."
 3991  chatgpt is async frontend design a common concept
 3992  htop
 3993  chatgpt "what is canonical web development"
 3994  chatgpt "what is the name for blockchain transactions that are pending indefinitely"
 3995  chatgpt "what is the use of % in the vim editor"
 3996  chatgpt "what is the use of % in the vim editor, show two examples"
 3997  chatgpt "draw an ascii diagram showing the components of a canonical blockchain application: nodes, client, smart contracts"
 3998  chatgpt "draw an ascii diagram showing the components of a canonical blockchain application: nodes, client, smart contracts, wallets, front end"
 3999  chatgpt rephrase the following with a dry, technical documentation tone "Co:Create is a platform designed to power brand awareness and engagement campaigns. It accomplishes this by allowing brands to create and distribute NFTs to their audience. The NFTs can be used to unlock exclusive content, access to events, or even physical goods.\n\nLet's pick a use case to illustrate how Co:Create powers an NFT-driven brand activation project:  \na reward program for runners.\n\n## The End Goal\n\nWhat we want to achieve is to create a community of runners that are engaged with our brand. We want to reward them for their performance with value units that they can redeem for running gear, access to events, or exclusive content.\n\n## The Challenge\n\nThere is an abundance of running apps and communities, but they all operate in silos. The rewards they offer are often symbolic and limited to the app itself.  \nThis often results in huge churn rates, as users are not really incentivized to stay engaged.\n\nWe want to create a reward program that is not limited to a single app, one that can be used across multiple partners and platforms, and we want the rewards to be redeemable for real-world rewards, like running shoes.\n\nRewarding users with actual goods requires a secure and interoperable way to represent value and ensure our community members are the ultimate owners of this value.  \nThese properties are required because rewards' ability to be used in multiple contexts is what makes them valuable.\n\nSo far, the legacy approach to value transfer has been through redeemable points designed for single use within the limited scope of an an application. This made sense until Blockchain enabled the possibility to make tokens/points unique and universally verifiable.\n\nBlockchain technology makes rewards interoperable, secure, and programmable so that their value can be commensurate with users' long-term engagement.\n\nAny idea what Blockchain primitive fits that definition?\n\n## Supercharging Community Rewards\n\nA new way to satisfy these requirements is to use NFTs: they represent value, are self-owned, and are interoperable by design since any system interacting with blockchains can verify their authenticity.\n\nCo:Create adds to these properties the ability to limit NFTs transfer within our brand ecosystem of apps and partners, thus protecting our program from the legal implications of token exchanges.\n\nAnother perk to consider: NFTs rewards can be tied to our brand identity by minting them to our brand colors and logo.  \nThat branding effort will travel with the NFTs wherever they go and be visible to anyone interacting with them.\n\nAnd because Co:Create makes it easy to upgrade NFT rewards, they can evolve along with users' engagement and seniority in our runners' community.\n\n## Building Our Brand Experience\n\nNow let's see how our engagement strategy translates into an exciting user experience with all the perks of a running app but with actual rewards!\n\n### Picking a Development stack"
 4000  j coc
 4001  ls
 4002  la
 4003  rm .projectile
 4004  cd docs
 4005  la
 4006  touch .projectile
 4007  cd ..
 4008  ls
 4009  cd export
 4010  ls
 4011  la
 4012  touch .projectile
 4013  git init -b main
 4014  j coc
 4015  cd twitterconnect
 4016  npm run dev --host
 4017  pass show gr0wing
 4018  curl --request GET \\n     --url 'https://api.cocrt.xyz/alpha/user?email=gael.blanchemain%40protonmail.com' \\n     --header 'Authorization: Bearer bearer zpka_e6567441cbed457d9fb18e0b67f74ecd_57167fde' \\n     --header 'accept: application/json'
 4019  htop
 4020  j system
 4021  cd Second_Life_5_0_9_329906_i686
 4022  ls
 4023  ./install.sh
 4024  sudo ./install.sh
 4025  ls
 4026  ./secondlife
 4027  sudo apt-get install ia32-libs ia32-libs-gtk ia32-libs-kde ia32-libs-sdl
 4028  cd ..
 4029  fzf second
 4030  fzf
 4031  htop
 4032  fzf
 4033  cd /
 4034  fzf
 4035  opt/secondlife-install/install.sh
 4036  sudo opt/secondlife-install/install.sh
 4037  cd /opt/secondlife-install
 4038  ls
 4039  la
 4040  cd ..
 4041  rm secondlife-install
 4042  rmdir secondlife-install
 4043  sudo rmdir secondlife-install
 4044  ls /usr/bin/ || less
 4045  la /usr/bin/ || less
 4046  la /usr/bin/ | less
 4047  htop
 4048  sudo kill-all vlc
 4049  kill-all vlc
 4050  mount
 4051  df
 4052  efibootmgr -v 
 4053  sudo apt update
 4054  sudo apt install ventoy
 4055  j down
 4056  cd ventoy-1.0.91
 4057  ls
 4058  sudo ./VentoyWeb.sh
 4059  [ -d /sys/firmware/efi ] && echo "Installed in UEFI mode" || echo "Installed in Legacy mode"
 4060  history
 4061  df
 4062  tmux
 4063  j soli
 4064  ls
 4065  cd foundry-hardhat
 4066  ls
 4067  touch .projectile
 4068  forge install
 4069  forge test
 4070  cd src
 4071  ls
 4072  rm -rf lens
 4073  rm -rf interfaces
 4074  forge test
 4075  ls
 4076  cd test
 4077  ls
 4078  rm -rf *
 4079  forge test
 4080  cd ..
 4081  ls
 4082  cd libraries
 4083  ls
 4084  rm -rf *
 4085  ls
 4086  la
 4087  cd ..
 4088  ls
 4089  cd libraries
 4090  ls
 4091  forge test
 4092  ls
 4093  cd ..
 4094  ls
 4095  la
 4096  cd test
 4097  ls
 4098  la
 4099  forge test
 4100  cd ..
 4101  cd lib
 4102  cd ..
 4103  ls
 4104  cd lib
 4105  ls
 4106  rm -rf v3-core
 4107  npx hardhat test
 4108  node -v
 4109  ls
 4110  la
 4111  cd ..
 4112  la
 4113  npx hardhat test
 4114  node -v
 4115  nvm list
 4116  npx hardhat test
 4117  nvm use 16
 4118  npx hardhat test
 4119  npx hardhat example
 4120  forge
 4121  ls
 4122  cd src
 4123  ls
 4124  cd foundry-tests
 4125  ls
 4126  j notes
 4127  j roam
 4128  ls
 4129  kill-all immersed
 4130  kill-all immersed*
 4131  kill-all *immersed*
 4132  exit
 4133  j dev
 4134  take circles
 4135  git clone git@github.com:CirclesUBI/circles-handbook.git
 4136  cd circles-handbook
 4137  touch .projectile
 4138  htop
 4139  pass insert circlesMagicWords
 4140  pass show circlesMagicWords
 4141  vim .git/config
 4142  exit
 4143  j dev
 4144  j helios
 4145  z helios
 4146  j dev
 4147  ls
 4148  fzf
 4149  fzf --help | less
 4150  cd nimbus-eth2
 4151  ls
 4152  ls ..
 4153  cd ..
 4154  git clone --branch stable --single-branch https://github.com/ledgerwatch/erigon.git\ncd erigon\nmake erigon\n./build/bin/erigon
 4155  source ~/.zshrc
 4156  ls
 4157  make erigon
 4158  cd ..
 4159  ls
 4160  sudo  rm -rf /usr/local/go && tar -C /usr/local -xzf go1.20.4.linux-amd64.tar.gz
 4161  sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.20.4.linux-amd64.tar.gz
 4162  export PATH=$PATH:/usr/local/go/bin
 4163  source ~/.zshrc
 4164  go version
 4165  cd erigon
 4166  make erigon
 4167  source ~/.zshrc
 4168  export PATH=$PATH:/home/o/dev/erigon/build/bin/
 4169  source ~/.zshrc
 4170  erigon --help | less
 4171  tmux
 4172  erigon --help | less
 4173  exit
 4174  chatgpt how to mount a partition to an external hard drive on ubuntu using symlink, please provide code
 4175  sudo fdisk -l
 4176  take /dev/sda/gnosis-erigon/
 4177  mkdir /media/gnosis-erigon/
 4178  sudo mkdir /media/gnosis-erigon/
 4179  exit
 4180  j dev
 4181  ls
 4182  take lighthouse
 4183  docker pull gnosischain/lighthouse-beacon:latest-xdao
 4184  sudo docker pull gnosischain/lighthouse-beacon:latest-xdao
 4185  ls
 4186  cd ~\ncurl -LO https://github.com/sigp/lighthouse/releases/download/v4.0.1/lighthouse-v4.0.1-x86_64-unknown-linux-gnu.tar.gz\ntar -xvf lighthouse-v4.0.1-x86_64-unknown-linux-gnu.tar.gz\n
 4187  ls
 4188  cd ..
 4189  ls
 4190  cd o
 4191  ls
 4192  cd dev/lighthouse
 4193  ls
 4194  cd ../..
 4195  ls
 4196  mv lighthouse ./dev/lighthouse
 4197  ls
 4198  cd dev/lighthouse
 4199  ls
 4200  ./lighthouse --version
 4201  export PATH=$PATH:/home/o/dev/lighthouse/
 4202  source ~/.zshrc
 4203  lighthouse --help | less
 4204  pass show list
 4205  pass show
 4206  pass show metamask
 4207  pass show metamasktest
 4208  chatgpt what is homomorphic encryption
 4209  chatgpt can you explain a use case for  homomorphic encryption
 4210  chatgpt what is a root modulo. provide examples
 4211  chatgpt can you explain logarithms like I am 5
 4212  chatgpt can you explain logarithms for non maths specialists
 4213  whereis chatgpt
 4214  ls /home/o/.cargo/bin/
 4215  cargo uninstall chatgpt
 4216  exit
 4217  tmux
 4218  weechat
 4219  ircd
 4220  weechat
 4221  j dark
 4222  gh --help | less
 4223  chatgpt what is the equivalent of the whoami command in git cli
 4224  ssh --help | less
 4225  history
 4226  history | less
 4227  exit
 4228  hs -F "ssh"
 4229  git clone git@github.com:darkrenaissance/darkfi.git
 4230  cd darkfi
 4231  ls
 4232  ls -la
 4233  cd .git
 4234  cd ./.git
 4235  cd .git
 4236  ls
 4237  vim config
 4238  la
 4239  cd hooks
 4240  ls
 4241  vim pre-commit.sample
 4242  vim pre-commit
 4243  chmod +x .git/hooks/pre-commit
 4244  chmod +x pre-commit
 4245  cargo hack
 4246  cargo hack --all
 4247  cargo hack --help
 4248  cd ../..
 4249  ./drk wallet --address\n
 4250  hs -F "drk"
 4251  ls
 4252  ./drk wallet --balances
 4253  darkfid
 4254  hs darkfid
 4255  ./darkfid
 4256  sudo apt-get update\nsudo apt-get upgrade\nsudo apt-get dist-upgrade
 4257  reboot
 4258  j dark
 4259  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
 4260  ls
 4261  la
 4262  rustup toolchain install nightly
 4263  rustup target add wasm32-unknown-unknown
 4264  sh contrib/dependency_setup.sh
 4265  make darkfid
 4266  sudo apt-get install libssl-dev
 4267  ./darkfid\n
 4268  ircd
 4269  weechat
 4270  ./darkfid\n
 4271  exit
 4272  ls
 4273  la
 4274  ./darkfid\n
 4275  exit
 4276  history
 4277  j dark
 4278  ./darkfid
 4279  j dark
 4280  ls
 4281  make darkfid
 4282  darkfid
 4283  history
 4284  ./darkfid
 4285  ./darkfid --help
 4286  ./darkfid --help | less
 4287  j config
 4288  cd darkfi
 4289  ls
 4290  rm -rf *
 4291  la
 4292  ./darkfid
 4293  j dark
 4294  ./darkfid
 4295  htop
 4296  exit
 4297  make darkfid
 4298  ./darkfid
 4299  reboot
 4300  j dark
 4301  ./darkfid
 4302  j dark
 4303  cd ..
 4304  ls
 4305  cd darkfi
 4306  ls
 4307  make BINS="taud tau"
 4308  sudo make install "BINS=taud tau"
 4309  tau list
 4310  source ~/.zshrc
 4311  tau list
 4312  tau
 4313  tau --help
 4314  ls
 4315  ./tau
 4316  tmux
 4317  cd ~/.config/darkfi
 4318  ls
 4319  vim darkfid_config.toml
 4320  j darkfi
 4321  ls
 4322  j dark
 4323  ls
 4324  la
 4325  j config
 4326  cd darkfi
 4327  ls
 4328  rm -rf darkfid_blockchain_testnet
 4329  la
 4330  rm darkfid_wallet_testnet.db
 4331  la
 4332  j dark
 4333  ./darkfid
 4334  cd dev
 4335  ls
 4336  sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg\n\necho "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list\n\nsudo apt update\n\nsudo apt install brave-browser
 4337  git clone git@github.com:velvet-shark/emojiverse-scaffoldeth.git
 4338  exit
 4339  la
 4340  rm lighthouse-v4.0.1-x86_64-unknown-linux-gnu.tar.gz
 4341  la
 4342  rm '*message*-20230*
 4343  rm *message*-20230*
 4344  la
 4345  cd .config
 4346  la
 4347  cd doom
 4348  git status
 4349  doom sync
 4350  doom update
 4351  doom upgrade
 4352  cd dev
 4353  ls
 4354  cd emojiverse-scaffoldeth
 4355  git status
 4356  code .
 4357  la
 4358  vim .git/config
 4359  gh 
 4360  gh repo create
 4361  vim .git/config
 4362  gh repo create
 4363  doom syn
 4364  doom sync
 4365  exit
 4366  vim .config/doom/config.el
 4367  doom sync
 4368  cd dev
 4369  ls
 4370  cd emojiverse-scaffoldeth
 4371  touch .projectile
 4372  yarn install
 4373  gh create repo
 4374  gh repo create
 4375  doom sync
 4376  doom doctor
 4377  shutdown
 4378  doom sync
 4379  htop
 4380  sudo update-rc.d -f emacsclient disable
 4381  htop
 4382  doom sync
 4383  find ~ -name fonts
 4384  ls
 4385  cd .local
 4386  ls
 4387  cd share
 4388  ls
 4389  cd fonts
 4390  ls
 4391  rm all-the-icons.ttf
 4392  cd dev
 4393  cd system
 4394  git clone git@github.com:domtronn/all-the-icons.el.git
 4395  cd all-the-icons.el
 4396  ls
 4397  cd fonts
 4398  ls
 4399  cd ..
 4400  git clone git@github.com:domtronn/all-the-icons.el.git
 4401  rm -r all-the-icons.el
 4402  git clone git@github.com:domtronn/all-the-icons.el.git
 4403  doom sync
 4404  fc-cache -c -v
 4405  fc-cache -f -v
 4406  fc-list
 4407  fc-cache -f -v
 4408  sudo apt update
 4409  sudo apt install fontconfig
 4410  fc-cache -f -v
 4411  cd ~
 4412  take .fontconfig
 4413  fc-cache -f -v
 4414  doom sync
 4415  cd ../.config/doom
 4416  git status
 4417  git add .
 4418  git commit -m "refresh after upgrade"
 4419  git checkout development
 4420  doom upgrade
 4421  cd ~/dev/emojiverse-scaffoldeth
 4422  git repo create
 4423  gh repo create
 4424  cd ..
 4425  rm -rf emojiverse-scaffoldeth
 4426  git clone git@github.com:anegg0/NFT-Story-Protocol-Challenge.git
 4427  git clone git@github.com:velvet-shark/emojiverse-scaffoldeth.git
 4428  cd emojiverse-scaffoldeth
 4429  yarn install
 4430  cd ..
 4431  rm -rf emojiverse-scaffoldeth
 4432  git clone git@github.com:davedev-ultron/NFT-Tutorial-ScaffoldETH.git
 4433  cd NFT-Tutorial-ScaffoldETH
 4434  yarn install
 4435  yarn chain
 4436  cd ..
 4437  ls
 4438  rm -rf NFT-Tutorial-ScaffoldETH
 4439  git clone git@github.com:Ryan-OToole/scaffold-eth-challenges-challenge-0-simple-nft.git
 4440  npm i -g yarn
 4441  git clone git@github.com:Ryan-OToole/scaffold-eth-challenges-challenge-0-simple-nft.git
 4442  cd scaffold-eth-challenges-challenge-0-simple-nft
 4443  git checkout challenge-0-simple-nft
 4444  cd ..
 4445  ls
 4446  cd scaffold-eth-challenges-challenge-0-simple-nft
 4447  yarn install
 4448  cd ..
 4449  rm -rf scaffold-eth-challenges-challenge-0-simple-nft
 4450  exit
 4451  sudo apt install gnome-shell-extension-desktop-icons-ng
 4452  sudo apt install gnome-shell-extension-prefs
 4453  sudo apt install --reinstall gnome-control-center
 4454  doom sync
 4455  j dev
 4456  ls
 4457  rm -rf NFT-Story-Protocol-Challenge
 4458  take robust
 4459  git clone git@github.com:djoq/nifty.git
 4460  ls
 4461  take invisible-watermark
 4462  pip install invisible-watermark
 4463  j dev
 4464  cd solid
 4465  ls
 4466  cd robust
 4467  ls
 4468  cd ..
 4469  mv robust/ solid/
 4470  cd solid
 4471  ls
 4472  cd nifty
 4473  touch .projectile
 4474  ls
 4475  cd src
 4476  ls
 4477  node run test-cli.js
 4478  node  test-cli.js
 4479  shutdown
 4480  j nifty
 4481  node  test-decode.js
 4482  cd src
 4483  node  test-decode.js
 4484  pass show list
 4485  pass show
 4486  pass show metamasktest
 4487  node  test-encode.js
 4488  ls
 4489  node  test-encode.js
 4490  node  test-decode.js
 4491  node  test-encode.js
 4492  node  test-decode.js
 4493  node  test-encode.js
 4494  node  test-decode.js
 4495  node  test-encode.js
 4496  node  test-decode.js
 4497  node  test-encode.js
 4498  node  test-decode.js
 4499  node  test-encode.js
 4500  node  test-decode.js
 4501  node  test-encode.js
 4502  node  test-decode.js
 4503  node  test-encode.js
 4504  node  test-decode.js
 4505  cd src
 4506  ls
 4507  rm wwm.png
 4508  node  test-encode.js
 4509  node  test-decode.js
 4510  node  test-encode.js
 4511  node  test-decode.js
 4512  node  test-encode.js
 4513  node  test-decode.js
 4514  node  test-encode.js
 4515  node  test-decode.js
 4516  node  test-encode.js
 4517  node  test-decode.js
 4518  ls
 4519  node  test-encode.js
 4520  node  test-decode.js
 4521  node  test-encode.js
 4522  node  test-decode.js
 4523  node  test-encode.js
 4524  node  test-decode.js
 4525  node  test-encode.js
 4526  node  test-decode.js
 4527  node  test-encode.js
 4528  node  test-decode.js
 4529  node  test-encode.js
 4530  node  test-decode.js
 4531  node  test-encode.js
 4532  node  test-decode.js
 4533  node  test-encode.js
 4534  node  test-decode.js
 4535  node  test-encode.js
 4536  node  test-decode.js
 4537  node  test-encode.js
 4538  node  test-decode.js
 4539  node  test-encode.js
 4540  node  test-decode.js
 4541  node  test-encode.js
 4542  node  test-decode.js
 4543  exit
 4544  cd wm
 4545  python3 decode.py
 4546  python3 encode.py
 4547  python3 decode.py
 4548  python3 encode.py
 4549  python3 hex2utf8.py
 4550  python3 encode.py
 4551  python3 hex2utf8.py
 4552  mkdir solid && cd solid\nmkdir chain && cd chain\nyarn init -y
 4553  yarn add hardhat
 4554  yarn hardhat
 4555  yarn hardhat node
 4556  j solid
 4557  z solid
 4558  mv solid/ spchal/
 4559  ls
 4560  cd ..
 4561  ls
 4562  cd solid
 4563  mv  spchal/ solid/
 4564  ls
 4565  cd ..
 4566  mv  solid/  spchal/
 4567  ls
 4568  cd spchal
 4569  cd solid
 4570  touch .projectile
 4571  ls
 4572  cd ls
 4573  la
 4574  yarn create next-app webapp --typescript
 4575  cd webapp
 4576  ls
 4577  cd src
 4578  ls
 4579  cd app
 4580  ls
 4581  cd ..
 4582  ls
 4583  cd app
 4584  ls
 4585  cd ..
 4586  tree
 4587  cd ..
 4588  tree
 4589  ls
 4590  cd src
 4591  mkdir styles
 4592  mkdir pages
 4593  tree
 4594  mv ./app/globals.css ./styles
 4595  mv ./app/page.tsx ./pages
 4596  mv ./app/layout.tsx ./pages
 4597  mv ./app/favicon.ico .
 4598  tree
 4599  rmdir app
 4600  tree
 4601  la
 4602  cd ..
 4603  la
 4604  yarn dev
 4605  ls
 4606  cd ..
 4607  ls
 4608  cd webapp
 4609  rm -rf *
 4610  yarn create next-app webapp --typescript
 4611  yarn dev
 4612  ls
 4613  cd ..
 4614  mv webapp a/
 4615  ls
 4616  mv a/webapp .
 4617  ls
 4618  ls a
 4619  rmdir a
 4620  cd a
 4621  la
 4622  cd ..
 4623  mv a/* webapp
 4624  mv a/.* webapp
 4625  rmdir a
 4626  ls
 4627  cd webapp
 4628  yarn dev
 4629  j solid
 4630  cd ../spchal
 4631  cd solid
 4632  la
 4633  git init -b main
 4634  exit
 4635  j spc
 4636  cd solid
 4637  git status
 4638  git add .
 4639  git rm --cached webapp
 4640  git rm --cached -f  webapp
 4641  la
 4642  cd webapp
 4643  la
 4644  rm -rf .git
 4645  la
 4646  cd ..
 4647  la
 4648  cd chain
 4649  la
 4650  cd ..
 4651  ls
 4652  la
 4653  cd solid
 4654  ls
 4655  la
 4656  rm -rf .git
 4657  git init -b main
 4658  cd webapp
 4659  ls
 4660  yarn dev
 4661  j solid
 4662  z solid
 4663  cd ../spchal/solid
 4664  ls
 4665  cd chain
 4666  ls
 4667  cd ../webapp
 4668  ls
 4669  cd src
 4670  ls
 4671  cd app
 4672  ls
 4673  take wm
 4674  python3 pic_hasher.py
 4675  ls
 4676  pass list
 4677  pass metamasktest
 4678  cd ../..
 4679  cd chain
 4680  npm i web --save
 4681  npm i web3 --save
 4682  ls
 4683  cd wm
 4684  ls
 4685  node hex2ascii.js
 4686  npm i ethers --save
 4687  node hex2ascii.js
 4688  node run hex2ascii.js
 4689  npx hardhat run hex2ascii.js
 4690  npm i ethers --save
 4691  node run hex2ascii.js
 4692  node hex2ascii.js
 4693  python3 encode.py
 4694  python3 decode.py
 4695  python3 encode.py
 4696  python3 decode.py
 4697  python3 encode.py
 4698  python3 decode.py
 4699  python3 encode.py
 4700  python3 decode.py
 4701  python3 encode.py
 4702  python3 decode.py
 4703  npm i web3js --save
 4704  yarn add web3
 4705  node hex2utf8.js
 4706  python3 pic_hasher.py
 4707  node hex2utf8.js
 4708  python3 encode.py
 4709  python3 decode.py
 4710  python3 encode.py
 4711  python3 decode.py
 4712  python3 encode.py
 4713  python3 decode.py
 4714  python3 encode.py
 4715  python3 decode.py
 4716  python3 encode.py
 4717  python3 decode.py
 4718  python3 encode.py
 4719  python3 decode.py
 4720  python3 encode.py
 4721  python3 decode.py
 4722  python3 encode.py
 4723  python3 decode.py
 4724  python3 encode.py
 4725  python3 decode.py
 4726  python3 encode.py
 4727  python3 decode.py
 4728  python3 encode.py
 4729  python3 decode.py
 4730  python3 encode.py
 4731  python3 decode.py
 4732  python3 encode.py
 4733  python3 decode.py
 4734  python3 encode.py
 4735  python3 decode.py
 4736  python3 encode.py
 4737  python3 decode.py
 4738  python3 encode.py
 4739  python3 decode.py
 4740  python3 encode.py
 4741  python3 decode.py
 4742  python3 encode.py
 4743  python3 decode.py
 4744  python3 encode.py
 4745  python3 decode.py
 4746  python3 encode.py
 4747  python3 decode.py
 4748  python3 encode.py
 4749  python3 decode.py
 4750  python3 encode.py
 4751  python3 decode.py
 4752  python3 encode.py
 4753  python3 decode.py
 4754  python3 encode.py
 4755  python3 decode.py
 4756  python3 encode.py
 4757  python3 decode.py
 4758  exit
 4759  j webapp
 4760  cd ../chain/wm
 4761  ls
 4762  j wm
 4763  exit
 4764  python3 encode.py
 4765  python3 decode.py
 4766  java
 4767  python3 pic_hasher.py
 4768  python3 encode.py
 4769  python3 decode.py
 4770  java -jar .\openstego.jar embed -a randomlsb -mf signed_hash.txt -cf wowm.png -sf wwm.png
 4771  java -jar openstego.jar embed -a randomlsb -mf signed_hash.txt -cf wowm.png -sf wwm.png
 4772  java -jar openstego.jar extract -a randomlsb -sf wwm.png -xd /data
 4773  java -jar openstego.jar extract -a randomlsb -sf wwm.png -xd .
 4774  java -jar openstego.jar embed -a randomlsb -mf signed_hash.txt -cf wowm.png -sf wwm.png
 4775  java -jar openstego.jar extract -a randomlsb -sf wwm.png -xd /data
 4776  cd data
 4777  touch decoded.txt
 4778  cd ..
 4779  java -jar openstego.jar embed -a randomlsb -mf signed_hash.txt -cf wowm.png -sf wwm.png
 4780  java -jar openstego.jar extract -a randomlsb -sf wwm.png -xd /data/decoded.txt
 4781  ls
 4782  sudo chmod +x encode.sh\n
 4783  ./encode.sh
 4784  java -jar openstego.jar extract -a randomlsb -sf wwm.png -xd /data/decoded.txt
 4785  cd ..
 4786  cd wm
 4787  sudo chmod +x decode.sh\n
 4788  ./encode.sh
 4789  ./decode.sh
 4790  ./encode.sh
 4791  ./decode.sh
 4792  ./encode.sh
 4793  ./decode.sh
 4794  touch ./data/signed_hash.txt
 4795  ./decode.sh
 4796  ./encode.sh
 4797  ./decode.sh
 4798  ./encode.sh
 4799  exit
 4800  j wm
 4801  ls
 4802  node ./img-hash.ts
 4803  cd ../scripts
 4804  node ./img-hash.ts
 4805  cd ../scripts
 4806  node ./img-hash.ts
 4807  node ./img-hash.js
 4808  node ./img-hash.ts
 4809  node ./deploy.ts
 4810  cd ..
 4811  ls
 4812  npx hardhat
 4813  mkdir hh-test
 4814  npx hardhat
 4815  cd hh-test
 4816  npx hardhat
 4817  ls
 4818  touch .projectile
 4819  git init -b main
 4820  cd scripts
 4821  node ./img-hash.ts
 4822  cd ../../solid/chain
 4823  ls
 4824  cd scripts
 4825  ls
 4826  cd ../wm
 4827  ls
 4828  node img-hash.ts
 4829  npm install typescript
 4830  npm install ts-node --save
 4831  cd ..
 4832  ls
 4833  ts-node
 4834  npm install ts-node --save
 4835  yarn add --dev ts-node typescript
 4836  exit
 4837  j wm
 4838  cd ..
 4839  nvm 
 4840  nvm install 18 LTS
 4841  cd wm
 4842  ls
 4843  node img-hash.ts
 4844  cd ..
 4845  cd scripts
 4846  ls
 4847  node deploy.ts
 4848  npx ts-node --files ../wm/img-hash.ts
 4849  npx hardhat run ../wm/img-hash.ts
 4850  j palm
 4851  ls
 4852  cd training_repos
 4853  ls
 4854  cp nft-toolkit ../../spchal/
 4855  cp -r nft-toolkit ../../spchal/
 4856  j spc
 4857  ls
 4858  cd nft-toolkit
 4859  ls
 4860  git init -b main
 4861  la
 4862  rm -rf .git
 4863  git init -b main
 4864  cd ..
 4865  mv nft-toolkit nft-wm
 4866  ls
 4867  cd nft-wm
 4868  nvm use 16
 4869  ls
 4870  yarn i
 4871  yarn install
 4872  rm package-lock.json
 4873  yarn install
 4874  exit
 4875  npx hardhat run ./wm/img-hash.ts
 4876  ts-node  ./wm/img-hash.ts
 4877  npx hardhat run ./wm/img-hash.ts
 4878  yarn install hardhat deploy
 4879  yarn add hardhat-deploy
 4880  yarn add "@types/node@*"
 4881  npx hardhat run ./wm/img-hash.ts
 4882  ts-node ./wm/img-hash.ts
 4883  yarn add crypto
 4884  ts-node ./wm/img-hash.ts
 4885  ls
 4886  cd wm
 4887  ls
 4888  ts-node ./wm/img-hash.ts
 4889  ls
 4890  ts-node ./img-hash.ts
 4891  cd ../..
 4892  cd Solid
 4893  cd .git
 4894  vim config
 4895  gh repo create
 4896  cd ..
 4897  gh repo create
 4898  java -v
 4899  java --version
 4900  ls
 4901  mkdir chain
 4902  mv * chain
 4903  mv . chain
 4904  la
 4905  git clone git@github.com:fjun99/web3app-tutorial-using-ethers.git
 4906  la
 4907  cd webapp
 4908  la
 4909  rm -rf .git
 4910  yarn install
 4911  j chain
 4912  j Solid
 4913  cd chain
 4914  yarn hardhat node
 4915  cd ../..
 4916  ls
 4917  git clone git@github.com:NomicFoundation/hardhat-boilerplate.git
 4918  ls
 4919  cd hardhat-boilerplate
 4920  la
 4921  touch .projectile
 4922  npm install
 4923  npm audit fix
 4924  npx hardhat node
 4925  j hardhat-boil
 4926  npx hardhat run scripts/deploy.js --network localhost
 4927  cd frontend
 4928  npm install
 4929  npm start
 4930  j hard
 4931  j hardhat-t
 4932  npx hardhat --network localhost faucet 0xec7874007eafed3fa6af010819b6a5af9d3180ac
 4933  cd ..
 4934  la
 4935  rm package.json
 4936  npm start
 4937  exit
 4938  j Solid
 4939  cd frontend
 4940  ls
 4941  npm start
 4942  j Solid
 4943  ls
 4944  npx hardhat node
 4945  whereis alacritty
 4946  j Solid
 4947  cd wm
 4948  ls
 4949  node ./img-hasher.ts
 4950  npx harhat run ./img-hasher.ts
 4951  npx harhat run ./img-hasher.js
 4952  cd ..
 4953  ls
 4954  mv package-lock.json ../../archive
 4955  exit
 4956  yarn install
 4957  npx hardhat node
 4958  yarn install
 4959  npx hardhat node
 4960  npm install --save-dev
 4961  npx hardhat node
 4962  npm start
 4963  yarn install
 4964  npx hardhat node
 4965  npm install
 4966  npx hardhat node
 4967  cd wm
 4968  npx hardhat
 4969  npx hardhat run ./img-hasher.js
 4970  exit
 4971  npm i wagmi viem
 4972  cd ..
 4973  npm i wagmi viem
 4974  npx hardhat run ./wm/imgHasher.js
 4975  cd wm
 4976  ls
 4977  npx hardhat run ./wm/imgHasher.js
 4978  npx hardhat run ./imgHasher.js
 4979  ls
 4980  node cli.js ./wowm.png
 4981  npx hardhat run ./cli.js ./wowm.png
 4982  npm remove wagmi viem
 4983  cd ..
 4984  ls
 4985  cd ..
 4986  cd Solid
 4987  ls
 4988  take webapp
 4989  npx create-web3-frontend
 4990  npm init wagmi --template next-rainbowkit\n
 4991  ls
 4992  rm -rf next-rainbowkit
 4993  la
 4994  rm -rf next-rainbowkit
 4995  npm init wagmi --template next-rainbowkit\n
 4996  exit
 4997  j webapp
 4998  ls
 4999  j chain
 5000  npx hardhat node
 5001  j weba
 5002  ls
 5003  cd ..
 5004  la
 5005  cd chain
 5006  la
 5007  mv .gitignore ..
 5008  mv .gitattributes ..
 5009  cd ..
 5010  la
 5011  cd webapp
 5012  npm run dev
 5013  j weba
 5014  la
 5015  mkdir ../../../archive/Solid
 5016  mkdir ../../../archive/Solid/webapp
 5017  cd ..
 5018  la
 5019  cd chain
 5020  la
 5021  cd ..
 5022  mkdir ../../../archive/Solid/chain
 5023  mkdir ./../../archive/Solid/chain
 5024  la
 5025  mv .gitignore ./chain
 5026  cp .projectile ./chain
 5027  cp .projectile ./webapp
 5028  rm .projectile
 5029  mv .git ./../../archive/Solid/chain/
 5030  mv .gitignore  ./../../archive/Solid/chain/
 5031  ls
 5032  la
 5033  mv .gitattributes  ./../../archive/Solid/chain/
 5034  la
 5035  cd chain
 5036  la
 5037  git init -b main
 5038  mv ./../../archive/Solid/chain/.gitattributes .
 5039  la
 5040  npm run dev
 5041  npx hardhat node
 5042  npm run dev
 5043  doom sync
 5044  j wm
 5045  j chain
 5046  cd wm
 5047  ls
 5048  npx hardhat run ./imgHasher.js
 5049  ls
 5050  npx hardhat run ./imgHasher.js
 5051  j weba
 5052  cd src/modules
 5053  ls
 5054  node ./imgHasher.js
 5055  npm i crypto
 5056  npm i crypto --save
 5057  node ./imgHasher.js
 5058  node cli.js ./wowm.png
 5059  node run cli.js ./wowm.png
 5060  node run hashScript.js
 5061  node ./hashScript.js
 5062  htop
 5063  node ./hashScript.ts
 5064  node ./hashPNG.ts
 5065  exit
 5066  j weba
 5067  j chain
 5068  npx hardhat node
 5069  ls
 5070  cd src
 5071  ls
 5072  cd modules
 5073  ls
 5074  ts-node
 5075  npm i ts-node
 5076  source ~/.zshrc
 5077  npm i ts-node --save
 5078  npm install -D ts-node --save
 5079  npx ts-node ./hashPNG.ts
 5080  ts-node ./hashPNG.ts
 5081  npx ts-node ./hashPNG.ts
 5082  npm install -g ts-node
 5083  ts-node ./hashPNG.ts
 5084  nvm node
 5085  nvm current
 5086  ts-node hashPNG.ts
 5087  ts-node hashPNG.esm
 5088  ts-node hashScript.ts
 5089  npm i tsx --save
 5090  ts-node hashScript.ts
 5091  npm remove tsx --save
 5092  ts-node hashPNG.ts
 5093  ts-node hashPNG.mjs
 5094  ts-node hashPNG.ts
 5095  ts-node hashPNG.tsx
 5096  ts-node-esm hashPNG.ts
 5097  j weba
 5098  npm run dev
 5099  ts-node-esm hashPNG.ts
 5100  npm run dev
 5101  npm i
 5102  npm run dev
 5103  npm i
 5104  npm run dev
 5105  exit
 5106  j webapp
 5107  npm run dev
 5108  npx hardhat node
 5109  npm run dev
 5110  npm remove -g ts-node
 5111  npm run dev
 5112  npm i
 5113  npm run dev
 5114  npm i @walletconnect --save
 5115  npm i "@walletconnect" --save
 5116  npm i "walletconnect" --save
 5117  npm run dev
 5118  cd ../..
 5119  take clean-install-wagmi
 5120  npm init wagmi\n
 5121  ls
 5122  cd my-app
 5123  ls
 5124  la
 5125  vim .env
 5126  vim .env.example
 5127  cd src
 5128  la
 5129  cd ..
 5130  la
 5131  npm run dev
 5132  cd ..
 5133  rm -rf * && .* 
 5134  la
 5135  npm init wagmi --template next-rainbowkit\n
 5136  rm -rf * && .* 
 5137  la
 5138  npm init wagmi --template next-rainbowkit\n
 5139  npm run dev
 5140  ls
 5141  cd next-rainbowkit
 5142  npm run dev
 5143  la
 5144  vim .env
 5145  cd src
 5146  ls
 5147  la
 5148  cd app
 5149  la
 5150  cd ..
 5151  touch .projectile
 5152  la
 5153  npm run dev
 5154  cd ..
 5155  cd clean-install-wagmi
 5156  rm -rf * && .* 
 5157  la
 5158  cd ..
 5159  rmdir clean-install-wagmi
 5160  cd Solid/webapp
 5161  npm run dev
 5162  npm wagmi --v
 5163  npm --help
 5164  npm update --help
 5165  npm update walletconnect
 5166  npm run dev
 5167  git status
 5168  npm run dev
 5169  npm remove walletconnect
 5170  npm i walletconnect
 5171  npm remove --help
 5172  npm uninstall walletconnect
 5173  npm run dev
 5174  exit
 5175  cd src/modules
 5176  ts-node-esm hashPNG.ts
 5177  ts-node
 5178  npm install -g ts-node
 5179  ts-node-esm hashPNG.ts
 5180  npm run dev
 5181  npm i viem
 5182  npm run dev
 5183  npm i degen
 5184  npm run dev
 5185  j spc
 5186  ls
 5187  take wagmiVite
 5188  npm init wagmi --template next-rainbowkit\n
 5189  rm -rf * && .* 
 5190  la
 5191  npm init wagmi --template next-rainbowkit\n
 5192  npm uninstall walletconnect
 5193  ls
 5194  cd ..
 5195  rm -rf wagmiVite
 5196  ls
 5197  j webapp
 5198  npm run dev
 5199  npm update viem
 5200  npm run dev
 5201  exit
 5202  j system
 5203  git clone https://github.com/andreafabrizi/Dropbox-Uploader.git\ncd Dropbox-Uploader\nsudo chmod +x *.sh\n./dropbox_uploader.sh
 5204  ls
 5205  ./dropbox_uploader.sh mkdir Linux-Backups
 5206  ls
 5207  cd ~
 5208  la
 5209  j system
 5210  ls
 5211  cd Dropbox-Uploader
 5212  ls
 5213  cd ~
 5214  fzf
 5215  cd /
 5216  ls
 5217  cd home
 5218  ls
 5219  cd o
 5220  ls Linux*
 5221  j system
 5222  cd Dropbox-Uploader
 5223  ls
 5224  vim dropbox_uploader.sh
 5225  j dropb
 5226  ls
 5227  vim crontab -e
 5228  crontab -e
 5229  pass insert Dropbox-Uploader-Access-Code
 5230  pass list
 5231  j Solid
 5232  cd ..
 5233  mv Solid/ MAGIC/
 5234  ls
 5235  exit
 5236  j magic
 5237  j webapp
 5238  cd solid
 5239  j dev
 5240  ls
 5241  cd spchal
 5242  ls
 5243  mv MAGIC SIG-VANT
 5244  ls
 5245  cd sig
 5246  cd SIG-VANT
 5247  ls
 5248  cd chain
 5249  ls
 5250  cd ..
 5251  mv chain ..
 5252  ls
 5253  mv webapp ..
 5254  la
 5255  lerna init
 5256  npm i -g lerna
 5257  lerna init
 5258  lerna import ../chain --dest=packages/package1
 5259  la
 5260  lerna import --help
 5261  npm i -g workspaces
 5262  mkdir packages
 5263  ls
 5264  rm -rf *
 5265  cd ..
 5266  ls
 5267  cd SIG-VANT
 5268  mkdir packages
 5269  cp ../chain ./packages
 5270  cp -r ../chain ./packages
 5271  cp -r ../webapp ./packages
 5272  cd packages
 5273  ls
 5274  cd ..
 5275  npm init -w --help
 5276  ls
 5277  ls packages
 5278  ls
 5279  mv ./packages/chain ..
 5280  mv ./packages/chain .
 5281  mv ./packages/webapp .
 5282  ls
 5283  ls packages
 5284  rmdir packages
 5285  ls
 5286  cd chain
 5287  code .
 5288  ls
 5289  vim chain.code-workspace
 5290  vim package.json
 5291  cd ..
 5292  ls
 5293  mkdir packages
 5294  mv chain packages
 5295  mv webapp packages
 5296  ls
 5297  tree --help
 5298  tree -L
 5299  tree -d -L
 5300  cd packages
 5301  ls
 5302  cd ..
 5303  npm init -w ./packages/chain
 5304  la
 5305  tree
 5306  ls
 5307  l
 5308  la
 5309  rm -rf .git
 5310  rm .gitignore
 5311  la
 5312  mv packages/chain .
 5313  mv packages/webapp .
 5314  la
 5315  rmdir packages
 5316  cd chain 
 5317  npm init -w ./packages/chain
 5318  npm init -w ./packages/a
 5319  npm init -w ./packages/chain
 5320  j sig-v
 5321  cd chain
 5322  la
 5323  vim hardhat.config.js
 5324  rm -rf *
 5325  la
 5326  rm -rf .*
 5327  la
 5328  npm init -w ./packages/chain
 5329  la
 5330  cd ..
 5331  la
 5332  cd chain
 5333  ls
 5334  la
 5335  rm -rf .git
 5336  git init -b main
 5337  touch .projectile
 5338  vim .gitignore
 5339  npm i
 5340  npm init -w ./packages/chain
 5341  ls
 5342  cd ../webapp
 5343  la
 5344  vim .gitignore
 5345  npm init -w ./packages/webapp
 5346  cd ..
 5347  npx lerna init --dryRun
 5348  npx lerna init
 5349  npx lerna add-caching
 5350  cd ~/dev/temp
 5351  cd SIG-VANT
 5352  npm i
 5353  lerna bootstrap
 5354  ls
 5355  mkdir packages
 5356  mv webapp package
 5357  ls
 5358  cd package
 5359  ls
 5360  cd ..
 5361  mv package chain
 5362  ls
 5363  rm -rf ../SIG-VANT
 5364  cd ..
 5365  ls
 5366  j sp__
 5367  ls
 5368  cd SIG-VANT
 5369  ls
 5370  mkdir packages
 5371  mv chain package/chain
 5372  mv chain package/
 5373  ls
 5374  ls package
 5375  la
 5376  ls
 5377  mv package chain
 5378  ls
 5379  mv webapp package/
 5380  ls
 5381  mv package webapp
 5382  ls
 5383  mv webapp packages
 5384  cd packages
 5385  ls
 5386  cd ..
 5387  mv chain packages
 5388  ls
 5389  rm package-lock.json
 5390  rm lerna.json
 5391  rm -rf node_modules
 5392  ls
 5393  rm nx.json
 5394  rm package.json
 5395  la
 5396  rm -rf .git
 5397  rm .gitignore
 5398  la
 5399  lerna init
 5400  mv ../SIG-VANT ../SIGVANT
 5401  cd ..
 5402  ls
 5403  cd SIGVANT
 5404  ls
 5405  j sigv
 5406  ls
 5407  cd packages
 5408  cd chain
 5409  vim package.json
 5410  cd ../webapp
 5411  vim package.json
 5412  cd ..
 5413  j sigv
 5414  ls
 5415  rm lerna.json
 5416  rm package.json
 5417  la
 5418  lerna init
 5419  vim package.json
 5420  la
 5421  rm lerna.json
 5422  rm package.json
 5423  rm package-lock.json
 5424  rm -rf node_modules
 5425  la
 5426  npx lerna init --packages="chain/*" --packages="webapp/*"
 5427  j temp
 5428  cd SIGVANT
 5429  npm i
 5430  vim package.json
 5431  npm i
 5432  vim package.json
 5433  npm i
 5434  vim package.json
 5435  la
 5436  j sigv
 5437  la
 5438  npm init
 5439  vim package.json
 5440  la
 5441  npm init -w ./packages/chain
 5442  npm i ./chain
 5443  npm i ./packages/chain
 5444  npm i ./packages/webapp
 5445  vim package.json
 5446  cd packages/webapp
 5447  la
 5448  cd ..
 5449  la
 5450  cd ..
 5451  vim package.json
 5452  ls
 5453  rm -rf node_modules
 5454  rm -fr package.json
 5455  ls
 5456  rm package-lock.json
 5457  ls
 5458  la
 5459  vim package.json
 5460  cd ../chain
 5461  vim package.json
 5462  cd ../webapp
 5463  vim package.json
 5464  cd ..
 5465  exit
 5466  cd packages/chain
 5467  ls
 5468  cd packages
 5469  ls
 5470  cd chain
 5471  ls
 5472  cd ..
 5473  rm -rf packages
 5474  cd ../webapp
 5475  ls
 5476  ls packages
 5477  ls packages/webapp
 5478  cd ..
 5479  ls
 5480  cd webapp
 5481  ls
 5482  rm -rf packages
 5483  cd ~/.config/doom/
 5484  ls
 5485  cd ~/.config/emacs/
 5486  ls
 5487  cd modules
 5488  ls
 5489  cd ~/.config/doom/
 5490  ls
 5491  la
 5492  cd ~/.config/emacs/
 5493  la
 5494  cd .local/
 5495  ls
 5496  cd cache
 5497  ls
 5498  rm -rf *
 5499  rm -rf .*
 5500  j sigv
 5501  la
 5502  rm -rf .git/
 5503  la
 5504  rm .gitignore
 5505  la
 5506  npm init -w ./packages/chain  ./packages/webapp 
 5507  npm init
 5508  la
 5509  git init -b main
 5510  npx lerna init --packages="chain/*" --packages="webapp/*"
 5511  npm i
 5512  lerna import ./packages/webapp
 5513  cd packages/webapp
 5514  git status
 5515  exit
 5516  git status
 5517  ls
 5518  npm uninstall lerna
 5519  npx create-nx-workspace@latest
 5520  npm i -g nx
 5521  ls
 5522  cd org
 5523  ls
 5524  rm README.md
 5525  rm -rf node_modules
 5526  rm nx.json
 5527  rm package.json
 5528  ls
 5529  cd ..
 5530  ls
 5531  rm -rf org
 5532  ls
 5533  rm -rf node_modules
 5534  rm package-lock.json
 5535  ls
 5536  la
 5537  vim package.json
 5538  la
 5539  npx nx@latest init
 5540  ls
 5541  touch .projectile
 5542  gh repo create
 5543  cd packages/webapp
 5544  ls
 5545  npm dev start
 5546  npm start dev
 5547  npm run dev
 5548  npm i wcwidth
 5549  npm run dev
 5550  j chain
 5551  node hardhat
 5552  npx hardhat node
 5553  npm i
 5554  npx hardhat node
 5555  npm i hardhat-deploy-ethers
 5556  npm i hardhat-deploy
 5557  npm i hardhat-deploy-ethers
 5558  npm uninstall @nomiclabs/hardhat-ethers
 5559  npm i hardhat-deploy-ethers
 5560  npx hardhat compile
 5561  npx hardhat deploy --network localhost
 5562  npx hardhat test
 5563  npx i
 5564  npx hardhat deploy --network localhost
 5565  npm i ethers
 5566  npx hardhat deploy --network localhost
 5567  exit
 5568  j chain
 5569  ls
 5570  la
 5571  j palm
 5572  ls
 5573  fzf
 5574  j sigvant
 5575  ls
 5576  j sigvant
 5577  ls
 5578  cd packages
 5579  ls
 5580  git clone git@github.com:anegg0/chain.git
 5581  ls
 5582  cd ..
 5583  ls
 5584  cd packages/chain
 5585  git status
 5586  git add .
 5587  git commit -m "updated package.json"
 5588  git config --global user.name "Gael Blanchemain"
 5589  git config --global user.email "gael.blanchemain@protonmail.com"
 5590  cd ../webapp
 5591  git status
 5592  git add .
 5593  git commit -m "updated package.json"
 5594  cd ..
 5595  la
 5596  cd packages/chain
 5597  la
 5598  cd .github
 5599  ls
 5600  cd ..
 5601  j chain
 5602  npx hardhat node
 5603  npm i
 5604  la
 5605  npm i
 5606  npx hardhat node
 5607  ls
 5608  cd deploy
 5609  ls
 5610  npx hardhat node
 5611  npx hardhat node | less
 5612  cd ..
 5613  la
 5614  rm yarn-error.log
 5615  rm yarn.lock
 5616  npm i
 5617  npx hardhat deploy
 5618  pass list
 5619  pass metamasktest
 5620  pass metamasktestphrase
 5621  npx hardhat deploy --network sepolia
 5622  vim ./.git/config
 5623  exit
 5624  cd ../webapp
 5625  npm i
 5626  npm run dev
 5627  j chain
 5628  npx hardhat node
 5629  npm run dev
 5630  vim ./.git/config
 5631  gh repo create
 5632  npm run dev
 5633  npx hardhat deploy --network goerli
 5634  git status
 5635  npm run dev
 5636  exit
 5637  cd ../../..
 5638  git clone git@github.com:truethari/nft.storage_upload.git
 5639  cd nft.storage_upload
 5640  npm i
 5641  ls
 5642  node index.js
 5643  gh repo create
 5644  vim ./.git/config
 5645  gh repo create
 5646  exit
 5647  j chain
 5648  j webapp
 5649  npm run dev
 5650  j chain
 5651  npx hardhat node
 5652  exit
 5653  node index.js
 5654  j spchal
 5655  ls
 5656  cd nft.storage_upload
 5657  npm i
 5658  npx tsc\n
 5659  npm i --save-dev @types/mime
 5660  npx tsc\n
 5661  touch nft-upload.d.ts
 5662  npx tsc
 5663  ts-node index.ts
 5664  npm i typescript
 5665  ts-node index.ts
 5666  npx tsc
 5667  ts-node index.ts
 5668  j webapp
 5669  npm i
 5670  npx tsc
 5671  npm i
 5672  cd src/nftUpload
 5673  ts-node index.ts
 5674  ts-node index.mjs
 5675  npm i
 5676  ts-node index.mjs
 5677  ts-node index.ts
 5678  npx index.ts
 5679  ts-node -esm index.ts
 5680  ts-node index.tsx
 5681  cd ..
 5682  ls
 5683  cd nftUpload
 5684  ts-node-esm index.ts
 5685  ls
 5686  ts-node-esm index.ts
 5687  npm i --save-dev @types/mime
 5688  ts-node-esm index.ts
 5689  exit
 5690  ts-node-esm index.ts
 5691  node index.js
 5692  npm install file-type
 5693  npm install file-type --save-dev
 5694  ts-node-esm index.ts
 5695  npm i dotenv
 5696  npm i dotenv --save
 5697  cd ../../..
 5698  cd ../..
 5699  cd nft.storage_upload
 5700  node index.js
 5701  npm i
 5702  node index.js
 5703  j weba
 5704  npm i mime
 5705  npm i mime --save
 5706  npm i nft.storage --save
 5707  cd src/nftUpload
 5708  ls
 5709  node index.js
 5710  cd ../modules
 5711  ls
 5712  node index.js
 5713  ls
 5714  node uploadNft.js
 5715  ls
 5716  node uploadNft.js
 5717  npm run dev
 5718  node uploadNft.js
 5719  mpm i
 5720  npm i
 5721  node uploadNft.js
 5722  npm i
 5723  node uploadNft.js
 5724  npm i
 5725  cd ../..
 5726  la
 5727  ls
 5728  npm i
 5729  node uploadNft.js
 5730  cd src/modules
 5731  node uploadNft.js
 5732  cd ../dataProcessing
 5733  ts-node-esm hashPNG.ts
 5734  cd ../modules
 5735  ./encode.sh
 5736  ./decode.sh
 5737  ./encode.sh
 5738  ./decode.sh
 5739  node encodeWm.js
 5740  history
 5741  history | less
 5742  node uploadNft.js
 5743  node encodeWm.js
 5744  npm i util --save
 5745  node encodeWm.js
 5746  ./encode.sh
 5747  node encodeWm.js
 5748  node decodeWm.js
 5749  cd ../..
 5750  code .
 5751  cd src/modules
 5752  ls
 5753  npm run dev
 5754  cd ..
 5755  cd components
 5756  ls
 5757  npm run dev
 5758  npm fs --save
 5759  npm i fs --save
 5760  npm run dev
 5761  cd src/modules
 5762  node createJsonSignedData.js
 5763  node uploadNft.js
 5764  node createJsonSignedData.js
 5765  npm run dev
 5766  node createJsonSignedData.js
 5767  npm i fs/promises --save
 5768  npm i fs --save
 5769  node createJsonSignedData.js
 5770  cd ../modules
 5771  node createJsonSignedData.js
 5772  npm run dev
 5773  cd ../../
 5774  ls
 5775  la
 5776  cd .next
 5777  ls
 5778  la
 5779  touch .projectile
 5780  npm run dev
 5781  cd ../..
 5782  cd ..
 5783  cd packages/webapp
 5784  npm run dev
 5785  cd .next
 5786  la
 5787  vim package.json
 5788  npm i
 5789  cd ..
 5790  npm upgrade next
 5791  npm run dev
 5792  npm i fs --save
 5793  npm run dev
 5794  npm install fs-writefile-promise --save
 5795  cd ../..
 5796  cd ..
 5797  git clone git@github.com:AbhinavXT/EternalNFT.git
 5798  ls
 5799  cd EternalNFT
 5800  touch .projectile
 5801  npm i
 5802  j spc
 5803  cd eter
 5804  cd EternalNFT
 5805  cd client
 5806  ls
 5807  npm i
 5808  npm run dev
 5809  cd ../SIGVANT/packages/chain
 5810  vim hardhat.config.ts
 5811  j eternal
 5812  ls
 5813  npx hardhat node
 5814  exit
 5815  npx hardhat node
 5816  npm run dev
 5817  npx hardhat node
 5818  npm run dev
 5819  npx hardhat node
 5820  npm run dev
 5821  j weba
 5822  npm run dev
 5823  npm i
 5824  cd ..
 5825  ls
 5826  cd webapp
 5827  la
 5828  rm -rf node_modules
 5829  npm i
 5830  npm run dev
 5831  doom sync
 5832  j emacs
 5833  git status
 5834  doom --help
 5835  doom clean
 5836  doom purge
 5837  doom compile
 5838  doom doctor
 5839  ls ~/tmp
 5840  mkdir ~/tmp
 5841  cp -r ../emacs ~/tmp
 5842  ls ~tmp/emacs
 5843  cd ~
 5844  ls tmp
 5845  ls tmp/emacs
 5846  j emacs
 5847  doom compile
 5848  doom upgrade
 5849  doom doctor
 5850  git pull
 5851  doom doctor
 5852  doom update
 5853  doom build
 5854  doom sync
 5855  j ether
 5856  j dev
 5857  ls
 5858  cd spc
 5859  jspc
 5860  j spcha
 5861  ls
 5862  cd EternalNFT
 5863  ls
 5864  cd client
 5865  j dev
 5866  j spch
 5867  npm run dev
 5868  ls
 5869  cd eter
 5870  j eter
 5871  ls
 5872  cd client
 5873  ls
 5874  npm run dev
 5875  j webap
 5876  npm run dev
 5877  la
 5878  cd .next
 5879  la
 5880  fzf
 5881  vim static/chunks/webpack.js
 5882  j weba
 5883  npm run dev
 5884  npm run start
 5885  npm run dev
 5886  cd ../SIGVANT
 5887  la
 5888  rm -rf node_modules
 5889  npm run dev
 5890  cd ..
 5891  cd SIGVANT
 5892  ls
 5893  npx hardhat node
 5894  cd ..
 5895  cd webapp
 5896  npm run dev
 5897  git push --all
 5898  ls
 5899  ls webapp
 5900  la
 5901  git submodule add git@github.com:anegg0/webapp.git webapp\n
 5902  rmdir webapp
 5903  git submodule add git@github.com:anegg0/webapp.git .\n
 5904  git submodule add git@github.com:anegg0/webapp.git webapp\n
 5905  la
 5906  cd ..
 5907  ls
 5908  ls webapp
 5909  ls
 5910  npm i
 5911  npx hardhat node
 5912  cd webapp
 5913  la
 5914  npm run dev
 5915  npm i
 5916  npm run dev
 5917  git status
 5918  git add .
 5919  git commit -m "added webapp as a submodule"
 5920  cd ..
 5921  git submodule update --init --recursive
 5922  exit
 5923  cd webapp
 5924  npm i pdf2json
 5925  npm i fs
 5926  npm run dev
 5927  npm uninstall fs
 5928  npm uninstall pdf2json
 5929  npm run dev
 5930  npm i axios --save
 5931  npm run dev
 5932  cd ..
 5933  ls
 5934  npx hardhat node
 5935  cd ..
 5936  mv SIGVANT SIGVANT-OLD
 5937  ls
 5938  npx create-next-app@latest -e https://github.com/Seth-McKilla/nextjs-wagmi
 5939  cd sigvant
 5940  npm run dev
 5941  pass list
 5942  pass metamasktestphrase
 5943  pass metamasktest
 5944  npm run dev
 5945  npm upgrade
 5946  npm run dev
 5947  cd ..
 5948  ls
 5949  mv sigvant ./backups
 5950  ls
 5951  mv SIGVANT-OLD SIGVANT
 5952  ls
 5953  cd ~
 5954  cd .config/emacs/.local/cache
 5955  la
 5956  rm -rf *
 5957  rm -rf .*
 5958  la
 5959  j spch
 5960  ls
 5961  cd SIGVANT
 5962  la
 5963  cd webapp
 5964  ls
 5965  j cache
 5966  ls
 5967  rm -rf .*
 5968  rm -rf *
 5969  j spch
 5970  cd SIGVANT
 5971  la
 5972  touch .projectile
 5973  cd webapp
 5974  ls
 5975  npm install aws-sdk
 5976  npm install formidable
 5977  npm install aws-sdk --save
 5978  npm install formidable --save
 5979  npm run dev
 5980  npm i
 5981  npm run dev
 5982  npm run build
 5983  npm run dev
 5984  npm i path --save
 5985  npm i fs --save
 5986  npm run dev
 5987  npm i promisify --save
 5988  npm run dev
 5989  npm i fs --save
 5990  npm run dev
 5991  cd ..
 5992  npx create-next-app --example api-routes api-routes-app
 5993  cd api-routes-app
 5994  npm run dev
 5995  cd ../SIGVANT
 5996  npm run dev
 5997  cd webapp
 5998  npm run dev
 5999  git push --all
 6000  npm run dev
 6001  cd ..
 6002  ls
 6003  rm -rf api-routes-app
 6004  npx create-next-app@latest --typescript
 6005  npm add wagmi ethers
 6006  ls
 6007  la
 6008  cd webapp
 6009  npm add wagmi ethers
 6010  la
 6011  cd src
 6012  la
 6013  cd app
 6014  ls
 6015  npm run dev
 6016  la
 6017  cd ..
 6018  la
 6019  cd ..
 6020  la
 6021  npm run dev
 6022  npm i --save-dev @wagmi/cli --save\n
 6023  npx wagmi init\n
 6024  npm run dev
 6025  npx wagmi generate\n
 6026  npm i @wagmi/cli/plugins --save
 6027  npm i wagmi/cli/plugins --save
 6028  npm i
 6029  npx wagmi generate\n
 6030  npm run dev
 6031  npm i viem --state
 6032  npm run dev
 6033  npm i
 6034  npm run dev
 6035  npm i formidable --save
 6036  npm i axios --save
 6037  npm run dev
 6038  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6039  npm i tailwindcss --save
 6040  npm run dev
 6041  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6042  la
 6043  cd src
 6044  la
 6045  cd ..
 6046  touch .projectile
 6047  npm install -D tailwindcss postcss autoprefixer --save\nnpx tailwindcss init -p
 6048  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6049  npm install --save next-transpile-modules
 6050  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6051  npm install babel-plugin-add-module-exports --save-dev
 6052  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6053  npm install -D tailwindcss postcss autoprefixer --save \nnpx tailwindcss init -p
 6054  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6055  npx tailwindcss init --ts
 6056  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6057  npm install -D tailwindcss@latest --save
 6058  npx tailwindcss init --ts
 6059  rm tailwind.config.ts
 6060  npx tailwindcss init --ts
 6061  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6062  npx tailwindcss init --ts
 6063  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6064  npm uninstall wagmi
 6065  npm uninstall wagmi-cli
 6066  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6067  next dev
 6068  next run dev
 6069  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6070  npm uninstall wagmi
 6071  npm uninstall wagmi-cli
 6072  npm uninstall wagmi/cli
 6073  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6074  npx create-next-app@latest --typescript
 6075  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6076  rm -rf webapp
 6077  cd ..
 6078  npx create-next-app@latest
 6079  mv webapp webapp-old
 6080  npx create-next-app@latest
 6081  npm run dev
 6082  cd webapp
 6083  npm run dev
 6084  la
 6085  touch .projectile
 6086  j doom
 6087  j emacs
 6088  cd .local/cache
 6089  la
 6090  rm -rf *
 6091  la
 6092  j webap
 6093  cd ..
 6094  cd ../webapp
 6095  la
 6096  git status
 6097  cd ../webapp-old
 6098  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6099  cd ../webapp
 6100  npm run dev
 6101  npm i wagmi --save
 6102  npm i wagmi/cli --save
 6103  npm i --save-dev @wagmi/cli\n
 6104  npm run dev
 6105  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6106  cd ..
 6107  git clone git@github.com:Seth-McKilla/nextjs-wagmi.git
 6108  cd webapp
 6109  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6110  npm run wagmi && next dev
 6111  npx wagmi generate\n
 6112  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6113  npx wagmi generate\n
 6114  la
 6115  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6116  npx wagmi generate\n
 6117  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6118  gh repo create
 6119  git push --all
 6120  j weba
 6121  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6122  npx wagmi generate\n
 6123  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6124  npm run wagmi && next dev
 6125  npx run wagmi
 6126  npm install --help
 6127  npm i --save wagmi
 6128  npx run wagmi
 6129  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6130  npx wagmi generate\n
 6131  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6132  npx wagmi generate\n
 6133  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6134  npm run dev
 6135  npm i wagmi viem\n
 6136  npm uninstall wagmi viem\n
 6137  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6138  npx create-next-app@latest
 6139  cd ..
 6140  ls
 6141  mv webapp webapp-recent
 6142  npx create-next-app@latest
 6143  cd webapp
 6144  la
 6145  cd app
 6146  la
 6147  cd ..
 6148  rm -rf webapp
 6149  mv webapp-recent webapp
 6150  cd webapp
 6151  la
 6152  j em
 6153  cd .local/cache
 6154  rm -rf *
 6155  j weba
 6156  ls
 6157  ls app
 6158  cd webapp
 6159  la
 6160  cd app
 6161  la
 6162  cd ..
 6163  rm -rf webapp
 6164  la
 6165  npm run dev
 6166  history
 6167  history --help
 6168  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6169  npm i wagmi viem\n
 6170  npm i --save-dev @wagmi/cli\n
 6171  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6172  npx wagmi generate\n
 6173  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6174  npx wagmi generate\n
 6175  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6176  npx wagmi generate\n
 6177  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6178  npx wagmi generate\n
 6179  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6180  npx wagmi init\n
 6181  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6182  npm run wagmi && next dev
 6183  cd ..
 6184  cd webapp-old
 6185  la
 6186  touch .projectile
 6187  npx wagmi init\n
 6188  history | grep "wagmi"
 6189  npx run wagmi
 6190  j weba
 6191  npx run wagmi
 6192  npm run wagmi
 6193  npm run
 6194  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6195  npx wagmi generate\n
 6196  npm run dev
 6197  cd ..
 6198  npm init wagmi --template next-rainbowkit\n
 6199  ls
 6200  cd next-rainbowkit
 6201  npm run dev
 6202  npm i walletconnect
 6203  npm run dev
 6204  npm i lokijs
 6205  npm run dev
 6206  npm i pino-pretty
 6207  npm run dev
 6208  npm i encoding
 6209  npm run dev
 6210  npm i --save lokijs
 6211  npm i --save pino-pretty
 6212  npm i --save encoding
 6213  cd ..
 6214  ls
 6215  cd next-rainbowkit
 6216  cd ../next-rainbowkit
 6217  la
 6218  history
 6219  history | grep "npm init"
 6220  cd ..
 6221  ls
 6222  cd nextjs-wagmi
 6223  npm run dev
 6224  ls
 6225  npm i
 6226  npm run dev
 6227  cd ../webapp
 6228  npm run dev
 6229  cd ..
 6230  git clone git@github.com:anegg0/webapp2.git
 6231  cd webapp2
 6232  npm i
 6233  la
 6234  npm i --force
 6235  npm run dev
 6236  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6237  npm install --help
 6238  npm audit --fix
 6239  npm audit
 6240  rm -rf ../webapp2
 6241  cd ..
 6242  ls
 6243  git clone git@github.com:anegg0/w.git
 6244  cd w
 6245  npm i
 6246  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6247  npm run dev
 6248  npm i viem
 6249  npm i --save viem
 6250  npm run dev
 6251  doom sync
 6252  doom doctor
 6253  doom upgrade
 6254  j emacs
 6255  doom upgrade
 6256  git status
 6257  git pull
 6258  doom upgrade
 6259  j doom sync
 6260  doom sync
 6261  j w
 6262  cd ../w
 6263  npm run dev
 6264  npx wagmi generate\n
 6265  npm wagmi generate\n
 6266  npm i --save-dev @wagmi/cli\n
 6267  npx wagmi dev\n
 6268  npm run dev\n
 6269  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6270  git push --all
 6271  npm run dev\n
 6272  ^[[200~npm install react-dropzone
 6273  npm install --save react-dropzone\n
 6274  npm run dev\n
 6275  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6276  npm i --save formidable fs path
 6277  npm i --save axios
 6278  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6279  npm install --save-dev @babel/core @babel/preset-env\n
 6280  npm install --save @babel/register\n
 6281  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6282  npm run dev --stacktraces
 6283  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6284  npm upgrade
 6285  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6286  yarn install
 6287  yarn upgrade
 6288  rm -rf .next\nrm -rf node_modules\nyarn install\nnpm run dev\n
 6289  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6290  fzf
 6291  fzf --help
 6292  cd ~/Dropbox/Org/roam
 6293  la
 6294  cd notes
 6295  la
 6296  j w
 6297  cd ../w
 6298  npm upgrade zustand
 6299  npm run dev
 6300  npm ugprade wagmi
 6301  npm upgrade wagmi
 6302  npm i wagmi
 6303  rm -rf .next\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6304  npm run dev\nrm -rf node_modules\nnpm install\nnpm run dev\n
 6305  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6306  npm uninstall axios
 6307  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6308  npm i --save-dev @wagmi/cli\n
 6309  npm uninstall @wagmi/core\n
 6310  npm i --save-dev @wagmi/cli\n
 6311  npm i @wagmi/core\n
 6312  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6313  npm upgrade example-rainbow
 6314  npm uninstall zustand
 6315  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6316  npm uninstall zustand/vanilla
 6317  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6318  npm run dev
 6319  npm upgrade next
 6320  npm i next
 6321  npm audit fix
 6322  npm run dev
 6323  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6324  npm run dev
 6325  git push --all
 6326  npm run dev
 6327  npm i dotenn
 6328  npm i dotenv
 6329  npm i --save dotenv
 6330  npm run dev
 6331  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6332  npm uninstall ethers
 6333  npm i --save viem
 6334  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6335  npm uninstall cspell
 6336  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6337  npm uninstall ethersproject
 6338  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6339  npm uninstall https://www/buymeacoffee.com/ricmoo
 6340  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6341  npm i  --save internationalized
 6342  npm i  --save swc
 6343  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6344  npm uninstall swc
 6345  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6346  npm walletconnect swc
 6347  npm uninstall walletconnect
 6348  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6349  cd ..
 6350  cd w
 6351  npm uninstall wagmi
 6352  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6353  npm upgrade wagmi/core
 6354  npm upgrade wagmi
 6355  npm upgrade rainbow-me
 6356  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6357  yarn add wagmi@^0.12.16
 6358  yarn run dev
 6359  yarn add wagmi@^0.12.16
 6360  yarn run dev
 6361  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6362  npm i walletconnect
 6363  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6364  npm i --save dotenv
 6365  \nrm -rf node_modules\nnpm install\nnpm run dev\n
 6366  npm upgrade wagmi 
 6367  npm upgrade --help
 6368  npm update wagmi
 6369  yarn add wagmi@^0.12.16
 6370  cd ..
 6371  cd w
 6372  yarn run dev
 6373  yarn remove ethers\nyarn add wagmi viem@latest
 6374  yarn upgrade --help
 6375  yarn upgrade
 6376  yarn add framer-motion@>=4.0.0
 6377  yarn add framer-motion
 6378  yarn run dev
 6379  yarn add swc
 6380  yarn remove rainbow-me/rainbowkit
 6381  yarn remove rainbow-me
 6382  yarn remove rainbowkit
 6383  yarn remove @rainbow-me/rainbowkit
 6384  yarn run dev
 6385  yarn add @rainbow-me/rainbowkit
 6386  yarn run dev
 6387  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6388  yarn add swc
 6389  yarn run dev
 6390  yarn upgrade --help
 6391  yarn upgrade -v
 6392  yarn upgrade --v
 6393  yarn run dev
 6394  yarn add swc/helpers
 6395  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6396  yarn upgrade nextui-org
 6397  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6398  yarn add @rainbow-me/rainbowkit@^1 wagmi@^1
 6399  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6400  npm i viem
 6401  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6402  yarn upgrade next
 6403  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6404  yarn upgrade nextui
 6405  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6406  yarn upgrade --help
 6407  yarn upgrade --force
 6408  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6409  yarn install @rainbow-me/rainbowkit wagmi viem
 6410  yarn add @rainbow-me/rainbowkit wagmi viem
 6411  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6412  yarn add @swc/helpers@0.4.11
 6413  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6414  yarn remove swc
 6415  yarn run dev
 6416  yarn add swr
 6417  yarn run dev
 6418  nvm use node 18
 6419  npm install --global yarn
 6420  yarn run dev
 6421  yarn add @swc/helpers
 6422  yarn run dev
 6423  yarn remove @internationalized/date
 6424  yarn remove @internationalized
 6425  yarn run dev
 6426  yarn i
 6427  yarn install
 6428  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6429  yarn upgrade react-aria
 6430  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6431  yarn add next@13.4.2
 6432  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6433  yarn remove wagmi/core
 6434  npx wagmi init\n
 6435  yarn add --save-dev @wagmi/cli
 6436  yarn add  @wagmi/cli
 6437  yarn add -D @wagmi/cli\n
 6438  yarn wagmi init\n
 6439  yarn run dev
 6440  yarn add eslint-plugin-react --dev
 6441  yarn run dev
 6442  \nrm -rf node_modules\nyarn install\nyarn run dev\n
 6443  rm -rf node_modules && yarn install && yarn run dev\n
 6444  cd ..
 6445  ls
 6446  cd backups
 6447  ls
 6448  find | grep "tailwind*"
 6449  z w
 6450  yarn run dev
 6451  yarn wagmi generate\n
 6452  yarn run dev
 6453  rm -rf node_modules && yarn install && yarn run dev\n
 6454  yarn add --dev jest supertest @babel/register\n
 6455  rm -rf node_modules && yarn install && yarn run dev\n
 6456  npx jest
 6457  yarn node --experimental-vm-modules $(yarn bin jest)
 6458  npx jest
 6459  yarn remove --dev jest supertest @babel/register\n
 6460  rm -rf node_modules && yarn install && yarn run dev\n
 6461  yarn add --save-dev cypress
 6462  yarn add --dev cypress\n
 6463  yarn run cypress
 6464  j w
 6465  cd ../w
 6466  npx cypress run --record --key 9294fce8-20d1-4b5c-8e37-6ab2f491a059
 6467  exit
 6468  yarn run cypress
 6469  npx e2e
 6470  yarn run e2e
 6471  yarn run build
 6472  yarn add next/image
 6473  yarn run build
 6474  yarn run dev
 6475  rm -rf node_modules && yarn install && yarn run dev\n
 6476  yarn run e2e
 6477  yarn run dev
 6478  j w
 6479  cd ../w
 6480  yarn run e2e
 6481  yarn run cypress
 6482  npx cypress run --record --key 9294fce8-20d1-4b5c-8e37-6ab2f491a059
 6483  cypress --help
 6484  yarn run cypress -- --component
 6485  yarn run cypress
 6486  yarn add --save-dev next-connect@next
 6487  yarn add --save-dev next-connect
 6488  yarn add  next-connect
 6489  yarn add multer
 6490  rm -rf node_modules && yarn install && yarn run dev\n
 6491  yarn add formidable
 6492  rm -rf node_modules && yarn install && yarn run dev\n
 6493  yarn add fs
 6494  rm -rf node_modules && yarn install && yarn run dev\n
 6495  yarn add fs/promises
 6496  yarn add fs.promises
 6497  rm -rf node_modules && yarn install && yarn run dev\n
 6498  yarn add mime
 6499  yarn add date-fns
 6500  rm -rf node_modules && yarn install && yarn run dev\n
 6501  yarn add @types/mime
 6502  yarn add @types/formidable
 6503  rm -rf node_modules && yarn install && yarn run dev\n
 6504  yarn add --dev @types/formidable\n
 6505  yarn add --dev @types/dates-fns\n
 6506  rm -rf node_modules && yarn install && yarn run dev\n
 6507  yarn run dev
 6508  node --version
 6509  nvm use 16 LTS
 6510  nvm install 16 LTS
 6511  nvm use 16 LTS
 6512  rm -rf node_modules && yarn install && yarn run dev\n
 6513  npm install --global yarn
 6514  rm -rf node_modules && yarn install && yarn run dev\n
 6515  nvm use 18
 6516  rm -rf node_modules && yarn install && yarn run dev\n
 6517  yarn run dev
 6518  rm -rf node_modules && yarn install && yarn run dev\n
 6519  yarn run dev
 6520  rm -rf node_modules && yarn install && yarn run dev\n
 6521  exit
 6522  rm -rf node_modules && yarn install && yarn run dev\n
 6523  cd ~
 6524  fzf
 6525  j w
 6526  cd ../w
 6527  rm -rf node_modules && yarn install && yarn run dev\n
 6528  doom sync
 6529  rm -rf node_modules && yarn install && yarn run dev\n
 6530  cd ../q
 6531  cd ../w
 6532  git push --all
 6533  exit
 6534  doom sync
 6535  doom doctor
 6536  doom sync
 6537  j --help
 6538  j --purge
 6539  cd ../w
 6540  j -a .
 6541  cd ~
 6542  j w
 6543  j -a --increase  .
 6544  cd ../w
 6545  j --increase  .
 6546  j --increase  8
 6547  cd ~
 6548  j w
 6549  cd ~
 6550  la
 6551  la | less
 6552  cd .config
 6553  la
 6554  la | less
 6555  cd ..
 6556  fzf
 6557  sudo apt update
 6558  sudo apt remove autojump
 6559  j w
 6560  sudo apt install autojump
 6561  j w
 6562  autojump --help
 6563  j --decrease  1
 6564  j w
 6565  rm -rf node_modules && yarn install && yarn run dev\n
 6566  doom sync
 6567  doom doctor
 6568  doom sync
 6569  doom doctor
 6570  doom sync
 6571  doom doctor
 6572  doom build
 6573  doom sync
 6574  doom doctor
 6575  doom sync
 6576  rm -rf node_modules && yarn install && yarn run dev\n
 6577  doom build
 6578  doom upgrade
 6579  doom sync
 6580  doom doctor
 6581  doom build
 6582  doom sync
 6583  doom doctor
 6584  doom sync
 6585  doom build
 6586  doom doctor
 6587  emacs -debug--init
 6588  emacs --debug-init
 6589  doom sync
 6590  doom build
 6591  doom sync
 6592  doom doctor
 6593  doom sync
 6594  doom doctor
 6595  doom build
 6596  doom update
 6597  doom upgrade
 6598  doom build
 6599  doom sync
 6600  j emacs
 6601  git status
 6602  git branch --all
 6603  doom --help
 6604  doom clean
 6605  doom purge
 6606  doom build
 6607  doom sync
 6608  doom doctor
 6609  doom sync
 6610  doom doctor
 6611  doom sync
 6612  doom doctor
 6613  doom sync
 6614  doom doctor
 6615  doom sync
 6616  doom doctor
 6617  doom sync
 6618  doom doctor
 6619  doom sync
 6620  doom doctor
 6621  doom sync
 6622  doom doctor
 6623  doom sync
 6624  doom doctor
 6625  doom sync
 6626  doom doctor
 6627  doom sync
 6628  doom doctor
 6629  doom sync
 6630  doom doctor
 6631  doom build
 6632  exit
 6633  doom doctor
 6634  doom sync
 6635  doom doctor
 6636  doom sync
 6637  doom doctor
 6638  doom sync
 6639  doom doctor
 6640  doom build
 6641  j system
 6642  ls
 6643  curl -LO https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb\nsudo dpkg -i ripgrep_13.0.0_amd64.deb
 6644  ls
 6645  exit
 6646  doom doctor
 6647  j cache
 6648  ls
 6649  rm -rf *
 6650  j w
 6651  cd ../w
 6652  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6653  yarn wagmi generate\n
 6654  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6655  yarn wagmi generate\n
 6656  yarn uninstall wagmi/cli
 6657  yarn remove wagmi/cli
 6658  yarn remove @wagmi/cli
 6659  yarn i @wagmi/cli
 6660  yarn install @wagmi/cli
 6661  yarn add @wagmi/cli
 6662  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6663  yarn wagmi generate\n
 6664  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6665  doom sync
 6666  doom doctor
 6667  doom sync
 6668  doom doctor
 6669  doom sync
 6670  doom doctor
 6671  exit
 6672  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6673  exit
 6674  j w
 6675  autojump --help
 6676  cd ../w
 6677  autojump -a .
 6678  autojump -i 20
 6679  cd ~
 6680  j w
 6681  cd ../w
 6682  autojump -i 3
 6683  j w
 6684  autojump -d 30
 6685  cd ~
 6686  j w
 6687  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6688  doom sync
 6689  doom doctor
 6690  doom sync
 6691  doom doctor
 6692  doom sync
 6693  doom doctor
 6694  doom sync
 6695  doom doctor
 6696  doom sync
 6697  doom doctor
 6698  doom sync
 6699  doom doctor
 6700  doom build
 6701  j w
 6702  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6703  doom sync
 6704  doom upgrade
 6705  doom sync
 6706  doom doctor
 6707  doom upgrade
 6708  cd conf
 6709  w config
 6710  cd ~/.config
 6711  rm -rf emacs
 6712  rm -rf doom
 6713  j system
 6714  la
 6715  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
 6716  j config
 6717  trash emacs
 6718  j system
 6719  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
 6720  rm -rf ~/.config/emacs
 6721  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
 6722  rm -rf ~/.config/emacs
 6723  rm -rf ~/.config/doom
 6724  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
 6725  rm -rf ~/.config/doom
 6726  rm -rf ~/.config/emacs
 6727  exit
 6728  reboot -now
 6729  reboot now
 6730  j system
 6731  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
 6732  rm -rf ~/.emacs.d/.local/straight/repos/straight.el\ndoom sync
 6733  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
 6734  rm -rf ~/.emacs.d/.local/straight/repos/straight.el
 6735  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
 6736  history
 6737  rm -rf ~/.config/emacs
 6738  rm -rf ~/.config/doom
 6739  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
 6740  rm -rf ~/.config/doom
 6741  rm -rf ~/.config/emacs
 6742  rm -rf ~/.emacs.d/.local/straight/repos/straight.el
 6743  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
 6744  j config
 6745  la
 6746  rm -rf ~/.config/emacs
 6747  rm -rf ~/.config/doom
 6748  sudo apt remove --autoremove emacs emacs-common
 6749  sudo add-apt-repository ppa:kelleyk/emacs
 6750  sudo apt update
 6751  sudo apt install emacs28
 6752  sudo apt remove emacs28
 6753  sudo apt install emacs28
 6754  sudo apt remove emacs28
 6755  sudo apt install emacs28-nativecomp
 6756  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\n~/.config/emacs/bin/doom install
 6757  rm -rf ~/.config/doom
 6758  la ~/.config/
 6759  cp -r ~/tmp/doom ~/.config
 6760  doom sync
 6761  doom --help
 6762  doom purge
 6763  doom clean
 6764  doom doctor
 6765  sudo apt install straight
 6766  j config
 6767  git status
 6768  cd /run/timeshift/backup/timeshift/snapshots/2023-09-20_16-00-02
 6769  ls
 6770  cd localhost
 6771  cd home/o
 6772  la
 6773  cd .config
 6774  ls
 6775  la
 6776  la | less
 6777  la
 6778  cd emacs
 6779  la
 6780  find | grep "straight"
 6781  ls
 6782  j config
 6783  la
 6784  cd emacs
 6785  la
 6786  cd .local
 6787  ls
 6788  trash straight
 6789  cd .local
 6790  ls
 6791  cp -r straight ~/.config/emacs/.local
 6792  ls
 6793  ls ..
 6794  ls ../..
 6795  doom sync
 6796  doom doctor
 6797  doom sync
 6798  doom build
 6799  exit
 6800  j w
 6801  history
 6802  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6803  doom sync
 6804  doom doctor
 6805  doom doctor | less
 6806  doom purge
 6807  doom clean
 6808  doom sync
 6809  doom doctor
 6810  doom upgrade
 6811  doom sync
 6812  doom doctor
 6813  trash ~/.config/emacs/.local
 6814  doom upgrade
 6815  doom sync
 6816  doom doctor
 6817  nvm use 18
 6818  doom env
 6819  doom sync
 6820  doom doctor
 6821  npm i -g stylelint
 6822  npm i -g js-beautify
 6823  npm i -g solium
 6824  doom doctor
 6825  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6826  doom doctor
 6827  exit
 6828  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6829  yarn add -g prettify 
 6830  yarn add -g prettier
 6831  yarn add -g eslint
 6832  yarn add  eslint
 6833  doom sync
 6834  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6835  doom sync
 6836  j compon
 6837  cd components
 6838  autojump -a .
 6839  cd ImageHasher
 6840  node ./index.js
 6841  node ./index.cjs
 6842  node ./index.ts
 6843  node ./index.js
 6844  yarn add crypto
 6845  node ./index.js
 6846  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6847  cd /run/timeshift/backup/timeshift/snapshots/2023-09-20_16-00-02
 6848  cd /run/timeshift/backup/timeshift/snapshots/
 6849  ls
 6850  cd 2023-09-19_11-53-27
 6851  ls
 6852  cd localhost/home/o/.config/doom
 6853  ls
 6854  vim init.el
 6855  doom sync
 6856  doom doctor
 6857  doom sync
 6858  doom doctor
 6859  doom sync
 6860  doom doctor
 6861  vim config.el
 6862  doom sync
 6863  vim config.el
 6864  doom doctor
 6865  doom sync
 6866  doom doctor
 6867  doom build
 6868  doom sync
 6869  doom doctor
 6870  doom env
 6871  sudo apt update
 6872  sudo apt install sqlite3
 6873  doom sync
 6874  doom doctor
 6875  doom build
 6876  sudo apt install wordnet
 6877  doom sync
 6878  doom doctor
 6879  doom build
 6880  doom sync
 6881  doom doctor
 6882  doom build
 6883  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6884  exit
 6885  doom doctor
 6886  doom purge
 6887  doom clean
 6888  doom doctor
 6889  doom env
 6890  doom sync
 6891  doom doctor
 6892  doom env
 6893  doom purge
 6894  doom clean
 6895  doom sync
 6896  doom build
 6897  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6898  exit
 6899  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6900  htop
 6901  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6902  doom sync
 6903  exit
 6904  whereis nyxt
 6905  exit
 6906  yarn i
 6907  yarn install
 6908  ls
 6909  yarn run dev
 6910  exit
 6911  yarn run dev
 6912  yarn run wagmi
 6913  yarn next dev
 6914  yarn run wagmi && next next dev
 6915  yarn run dev
 6916  doom sync
 6917  doom upgrade
 6918  htop
 6919  exit
 6920  doom sync
 6921  doom doctor
 6922  doom sync
 6923  doom purge
 6924  doom clean
 6925  doom sync
 6926  doom doctor
 6927  j doom
 6928  ls
 6929  vim packages.el
 6930  doom sync
 6931  doom doctor
 6932  doom purge
 6933  doom sync
 6934  doom doctor
 6935  doom sync
 6936  doom build
 6937  doom sync
 6938  doom doctor
 6939  doom sync
 6940  doom doctor
 6941  doom sync
 6942  doom doctor
 6943  doom build
 6944  yarn install
 6945  yarn dev
 6946  yarn add tailwindcss postcss autoprefixer --dev\n
 6947  npx tailwindcss init -p
 6948  yarn dev
 6949  yarn add @rainbow-me/rainbowkit
 6950  yarn dev
 6951  yarn add -D dotenv
 6952  yarn dev
 6953  j w
 6954  cd .../
 6955  ls
 6956  cd ..
 6957  ls
 6958  cd next-rainbowkit
 6959  cd src
 6960  vim wagmi.ts
 6961  exit
 6962  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6963  yarn dev
 6964  yarn remove dotenv
 6965  yarn add dotenv
 6966  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6967  cd ..
 6968  ls
 6969  yarn create @rainbow-me/rainbowkit
 6970  cd my-rainbowkit-app
 6971  cd ..
 6972  cd my-rainbowkit-app
 6973  yarn dev
 6974  cd ../next-rainbowkit
 6975  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6976  yarn update wagmi
 6977  yarn upgrade wagmi
 6978  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6979  yarn add wagmi@latest
 6980  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6981  cd rainb
 6982  j rainb
 6983  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6984  yarn dev
 6985  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6986  exit
 6987  yarn upgrade viem
 6988  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6989  yarn upgrade next
 6990  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6991  yarn upgrade
 6992  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6993  yarn add @rainbow-me/rainbowkit@^1.0.2 wagmi@^1.2
 6994  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6995  exit
 6996  htop
 6997  doom sync
 6998  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 6999  exit
 7000  j cach
 7001  rm -rf *
 7002  la
 7003  exit
 7004  j cache
 7005  la
 7006  rm -rf *
 7007  ls
 7008  la
 7009  j w
 7010  cd ..
 7011  ls
 7012  j emacs
 7013  cd .local
 7014  cd etc
 7015  la
 7016  rm -rf workspaces
 7017  la
 7018  yarn dev
 7019  rm -rf .next rm -rf node_modules && yarn install && yarn run dev\n
 7020  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7021  cd ..
 7022  ls
 7023  cd ~/tmp
 7024  yarn create next-app webapp --typescript
 7025  ls
 7026  cd webapp
 7027  ls
 7028  cd src/app
 7029  ls
 7030  cd ..
 7031  rm -rf ../webapp
 7032  cd ..
 7033  ls
 7034  rm -rf webapp
 7035  yarn create wagmi --template next-rainbowkit
 7036  next dev
 7037  yarn dev
 7038  j next
 7039  cd ..
 7040  ls
 7041  cd next-rainbowkit
 7042  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7043  yarn dev
 7044  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7045  yarn install
 7046  yarn dev
 7047  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7048  yarn dev
 7049  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7050  yarn add lokijs
 7051  yarn add pino-pretty
 7052  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7053  yarn add encoding
 7054  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7055  yarn install
 7056  yarn dev
 7057  yarn add wagmi/cli
 7058  yarn add @wagmi/cli
 7059  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7060  yarn dev
 7061  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7062  yarn add @nextui/react
 7063  yarn add nextui/react
 7064  yarn add nextui
 7065  yarn add @nextui-org/react
 7066  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7067  yarn add framer-motion
 7068  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7069  exit
 7070  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7071  exit
 7072  j w
 7073  cd ..
 7074  la
 7075  touch .projectile
 7076  git init -b main
 7077  cd next-rainbowkit
 7078  rm -rf .next rm -rf node_modules && yarn install && yarn run dev
 7079  exit
 7080  whereis brave-browser
 7081  /usr/bin/brave-browser
 7082  flatpak --help
 7083  flatpak ps
 7084  whereis emacs
 7085  j w
 7086  cd ..
 7087  la
 7088  trash .git
 7089  j emacs
 7090  j cache
 7091  ls
 7092  rm -rf *
 7093  la
 7094  j dev
 7095  la
 7096  cd w-backups
 7097  la
 7098  j w
 7099  j dev
 7100  cd w
 7101  autojump -a .
 7102  autojump -help
 7103  autojump -i 10
 7104  j dev
 7105  j w
 7106  autojump -i 1
 7107  autojump -d 10
 7108  j dev
 7109  j w
 7110  cd ../w-backups
 7111  autojump -a .
 7112  autojump -i 20
 7113  cd dev
 7114  j w-
 7115  cd ../w-backups
 7116  autojump -i 20
 7117  cd ~
 7118  j w-
 7119  cd ~
 7120  j w
 7121  cd ../w
 7122  autojump -i 20
 7123  cd ~
 7124  j w-
 7125  cd ~
 7126  j w
 7127  j cache
 7128  rm -rf *
 7129  cd ../..
 7130  cd etc
 7131  ls
 7132  cd .local
 7133  cd etc
 7134  ls
 7135  cd workspaces
 7136  la
 7137  rm -rf *
 7138  la
 7139  j w
 7140  gh repo create
 7141  gh --help
 7142  gh auth
 7143  gh auth login
 7144  gh repo create
 7145  git push --all
 7146  source ~/.zshrc
 7147  w
 7148  git push --all
 7149  j w-
 7150  gh repo create
 7151  rm -rf .git
 7152  git init b- main
 7153  git init -b main
 7154  gh repo create
 7155  git remote add origin git@github.com:anegg0/w-backups.git\ngit branch -M main\ngit push -u origin main
 7156  git push --all
 7157  git push
 7158  git push --set-upstream origin main
 7159  gh repo create
 7160  vim .git/config
 7161  gh repo create
 7162  git push
 7163  git push --set-upstream origin main
 7164  ls
 7165  rm 94ba8008124df28b94637f9ba90a9eff52d041223d040452f553341b8138acd0-2023-09-24-14-27-51.zip
 7166  ls
 7167  mv w oldW
 7168  cd oldW
 7169  la
 7170  gh repo create
 7171  vim .git/config
 7172  gh repo create
 7173  git push --all
 7174  j w
 7175  w
 7176  j w-
 7177  yarn create next-app
 7178  ls
 7179  cd look-template
 7180  yarn dev
 7181  cd ..
 7182  mv look-template ..
 7183  j w
 7184  w
 7185  cd ..
 7186  yarn dev
 7187  exit
 7188  yarn dev
 7189  w
 7190  j look
 7191  j dev
 7192  cd look-template
 7193  la
 7194  rm -rf look-template
 7195  yarn create next-app
 7196  cd look-template
 7197  la
 7198  exit
 7199  w
 7200  find ~ -name fontS
 7201  find ~ -name fonts
 7202  ls /etc/fonts
 7203  ls
 7204  cd /etc/fonts
 7205  ls
 7206  vim fonts.conf
 7207  cd /usr/share/fonts
 7208  ls
 7209  w
 7210  exit
 7211  w
 7212  yarn install
 7213  w
 7214  whereis thunderbird
 7215  flatpak ps
 7216  flatpak search thunderbird
 7217  flatpak run org.mozilla.Thunderbird
 7218  exit
 7219  j dev
 7220  ls
 7221  yarn create next-app --example api-routes api-routes-app
 7222  ls
 7223  cd api
 7224  cd api-routes-app
 7225  yarn dev
 7226  cd .. && rm -rf api-routes-app
 7227  ls
 7228  exit
 7229  w
 7230  history
 7231  history | less
 7232  flatpak ps
 7233  whereis brave-browser
 7234  w
 7235  pass list
 7236  pass metamasktestphrase
 7237  sudo apt remove brave-browser
 7238  sudo apt install chromium-browser
 7239  whereis chromium
 7240  sudo apt remove chromium-browser
 7241  whereis chrome
 7242  whereis chrome-browser
 7243  whereis chromium-browser
 7244  whereis chrome
 7245  whereis chromium
 7246  w
 7247  exit
 7248  w
 7249  rm -rf .next
 7250  yarn run dev
 7251  grep --help
 7252  grep 'Method not allowed'
 7253  j w
 7254  grep -r "Method not allowed" .\n
 7255  grep -ra "Method not allowed" .\n
 7256  grep -ra "logo" .\n
 7257  cd ..
 7258  git clone git@github.com:hevi1991/nextjs-upload-to-local-example.git
 7259  cd nextjs-upload-to-local-example
 7260  yarn install
 7261  yarn run dev
 7262  exit
 7263  w
 7264  w
 7265  htop
 7266  exit
 7267  j w
 7268  w
 7269  exit
 7270  j w
 7271  w
 7272  cd ../w-backups
 7273  yarn create wagmi --template next-rainbowkit
 7274  j w
 7275  w
 7276  cd ../
 7277  ls
 7278  cd w-backups
 7279  ls
 7280  mv nextjs-upload-to-local-example ./w-backups/
 7281  cd w-backups
 7282  ls
 7283  cd nextjs-upload-to-local-example
 7284  w
 7285  mv ../nextjs-upload-to-local-example ../..
 7286  j dev
 7287  ls
 7288  cd w
 7289  w
 7290  cd ../w-backups
 7291  w
 7292  cd ../nextjs-upload-to-local-example
 7293  w
 7294  cd ..
 7295  ls
 7296  rm go
 7297  rm go1.20.4.linux-amd64.tar.gz
 7298  cd 'pop_os!\nls
 7299  cd pop_os\!
 7300  ls
 7301  cd ..
 7302  cd pop_os\!
 7303  ls
 7304  la
 7305  mv keyboardio ../system
 7306  mv shell ../system
 7307  la
 7308  cd ..
 7309  rm pop_os\!
 7310  rm -rf pop_os\!
 7311  ls
 7312  cd w-backups
 7313  ls
 7314  ls archive
 7315  mv ./archive/look-template ../..
 7316  cd ..
 7317  ls
 7318  cd ..
 7319  ls
 7320  mv look-template dev
 7321  cd dev
 7322  ls
 7323  mv look-template next-look-template
 7324  ls
 7325  j emacs
 7326  ls
 7327  fzf
 7328  vim modules/ui/workspaces/config.el
 7329  cd .local/etc/workspaces
 7330  ls
 7331  rm -rf *
 7332  la
 7333  js w-
 7334  j dev
 7335  cd w-backups
 7336  la
 7337  j doom
 7338  ls
 7339  j emacs
 7340  cd .local
 7341  lw
 7342  ls
 7343  cd cache
 7344  la
 7345  rm -rf *
 7346  j dev
 7347  ls
 7348  cd w
 7349  w
 7350  yarn add mime
 7351  yarn add path
 7352  yarn add date-fns
 7353  yarn add formidable
 7354  w
 7355  htop
 7356  w
 7357  cd ..
 7358  ls
 7359  cd nextjs-upload-to-local-example
 7360  w
 7361  cd ../w
 7362  w
 7363  htop
 7364  j w
 7365  w
 7366  j w
 7367  w
 7368  exit
 7369  j w
 7370  w
 7371  yarn add next-formidable
 7372  w
 7373  j w
 7374  w
 7375  yarn upgrade react
 7376  yarn upgrade next
 7377  w
 7378  rlwrap
 7379  sudo apt install rlwrap
 7380  curl -s https://cht.sh/:cht.sh | sudo tee /usr/local/bin/cht.sh && sudo chmod +x /usr/local/bin/cht.sh
 7381  cht.sh run chatgpt in directory
 7382  j w
 7383  w
 7384  cht.sh debugging in chrome
 7385  w
 7386  cht.sh debugging a fetch call
 7387  cht.sh how to debug a POST call
 7388  j w
 7389  ls
 7390  mkdir webapp
 7391  ls
 7392  cd chain
 7393  yarn install
 7394  npx hardhat node
 7395  j w
 7396  cd webapp
 7397  w
 7398  cht.sh what is hardhat localhost chainID?
 7399  cht.sh what is hardhat localhost chainID
 7400  cht.sh what is hardhat localhost currency symbol
 7401  cht.sh what is hardhat localhost passphrase
 7402  exit
 7403  w
 7404  exit
 7405  j w
 7406  w
 7407  cd webapp
 7408  w
 7409  cht.sh how to add localhost network to wagmi
 7410  cht.sh define NODE_ENV
 7411  w
 7412  pass list
 7413  pass metamasktestphrase
 7414  w
 7415  cd ..
 7416  la
 7417  cd webapp
 7418  la
 7419  cd ..
 7420  git init -b main
 7421  git status
 7422  git add .
 7423  htop
 7424  ls
 7425  la
 7426  cd webapp
 7427  la
 7428  cd ..
 7429  mkdir chain
 7430  j cache
 7431  rm -rf *
 7432  la
 7433  cd ..
 7434  cd etc
 7435  ls
 7436  cd workspaces
 7437  la
 7438  j w
 7439  la
 7440  cd src
 7441  ls
 7442  cd ..
 7443  cd webapp
 7444  ls
 7445  cd src
 7446  ls
 7447  cd components
 7448  ls
 7449  cd ..
 7450  ls
 7451  cd ..
 7452  ls
 7453  cd ..
 7454  ls
 7455  tree --help
 7456  tree -d
 7457  tree --help
 7458  tree -d -L
 7459  tree -L
 7460  tree -d --L
 7461  tree -d -L
 7462  tree -d -L 2
 7463  touch ../../.projectile
 7464  source ~/.zshrc
 7465  showtree
 7466  tree -L 2
 7467  source ~/.zshrc
 7468  rm -rf src
 7469  showtree
 7470  touch .projectile
 7471  rm .projectile
 7472  cd webapp
 7473  w
 7474  j cache
 7475  la
 7476  rm -rf *
 7477  ls
 7478  exit
 7479  ls .projectile
 7480  rm .projectile
 7481  j ~
 7482  j emacs
 7483  j cache
 7484  ls
 7485  rm -rf *
 7486  ls
 7487  la
 7488  cd 
 7489  cd etc
 7490  ls
 7491  j emacs
 7492  ls
 7493  cd .local
 7494  cd etc
 7495  cd workspaces
 7496  la
 7497  rm -rf *
 7498  j dev
 7499  la
 7500  mv w/webapp ..
 7501  ls
 7502  cd w
 7503  ls
 7504  showtree
 7505  cd ..
 7506  showtree
 7507  cd ~
 7508  ls webapp
 7509  ls
 7510  mv webapp /dev
 7511  mv webapp ./dev
 7512  ls /dev
 7513  ls dev
 7514  mv dev/w/chain dev/
 7515  showtree dev
 7516  trash dev/w
 7517  cd dev
 7518  ls
 7519  ls .projectile
 7520  la
 7521  showtree
 7522  cd webapp
 7523  la
 7524  j chain
 7525  cd ../chain
 7526  npx hardhat localhost
 7527  npx hardhat node
 7528  j dev/webapp
 7529  w
 7530  exit
 7531  j webapp
 7532  history
 7533  cht.sh printing an object content javascript
 7534  w
 7535  yarn install
 7536  yarn run wagmi
 7537  yarn run dev
 7538  exit
 7539  w
 7540  j dev
 7541  ls
 7542  cd w-backups
 7543  ls
 7544  cd ..
 7545  git clone git@github.com:codersteps/nextjs_file_uploader.git
 7546  ls
 7547  mv nextjs-upload-to-local-example uploader-app-structure
 7548  ls
 7549  mv nextjs_file_uploader uploader-pages-structure
 7550  ls
 7551  exit
 7552  w
 7553  git status
 7554  la
 7555  grep -ra "buffer" .\n
 7556  yarn run dev
 7557  source ~/.zshrc
 7558  w
 7559  ls
 7560  w
 7561  htop
 7562  w
 7563  cht.sh implementing relative imports in nodejs
 7564  w
 7565  cht.sh using vim registers
 7566  j look
 7567  j dev
 7568  ls
 7569  cd next-look-template
 7570  autojump -i 10
 7571  j w
 7572  j look
 7573  w
 7574  exit
 7575  w
 7576  w
 7577  j look
 7578  j w
 7579  w
 7580  j w
 7581  w
 7582  cht.sh favicon next.js
 7583  exit
 7584  w
 7585  nano crontab -e
 7586  crontab -e
 7587  exit
 7588  j system
 7589  la
 7590  cd Dropbox-Uploader
 7591  la
 7592  crontab -e
 7593  ls
 7594  sudo chmod +x dropShell.sh
 7595  ./dropShell.sh
 7596  curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o dropbox_uploader.sh
 7597  dropbox_uploader.sh
 7598  la
 7599  curl --help
 7600  dropbox_uploader.sh --help
 7601  history
 7602  cht.sh add a bash script to path
 7603  exit
 7604  cp ./dropbox_uploader.sh ~/.local/bin/apt-proxy
 7605  ls ~/.local/bin/
 7606  mv ~/.local/bin/apt-proxy ~/.local/bin/dupload
 7607  source ~/.zshrc
 7608  dupload
 7609  j dev
 7610  ls
 7611  cd ~/Pictures
 7612  ls
 7613  dupload 1.png /pics
 7614  dupload ./1.png /pics
 7615  j system
 7616  cd Dropbox-Uploader
 7617  la
 7618  vim dropbox_uploader.sh
 7619  j picture
 7620  dupload ./1.png /pics/1.png
 7621  dupload upload ./1.png /pics/
 7622  dupload upload ./1.png /pics/1.png
 7623  j dev
 7624  cd ~
 7625  ls
 7626  dupload upload ./.local /backup/serval/home/
 7627  w
 7628  fzf soulseek
 7629  fzf --help
 7630  fzf -q soulseek
 7631  ~/Desktop/Appimages/SoulseekQt-2018-1-30-64bit.AppImage
 7632  sudo apt install soulseek
 7633  cht.sh open linux port for a process
 7634  netstat --all --program | grep '58587'
 7635  sudo netstat --all --program | grep '58587'
 7636  exit
 7637  cht.sh customizing <input> in react
 7638  cht.sh customizing input element  in react
 7639  npx hardhat node
 7640  history --help
 7641  history --man
 7642  history -man
 7643  j tmp
 7644  history > past
 7645  cht.sh what is hardhat localhost chainID
 7646  npx hardhat node
 7647  exit
 7648  w
 7649  exit
 7650  npx hardhat node
 7651  j chain
 7652  npx hardhat node
 7653  j web
 7654  w
 7655  pulseaudio -k
 7656  sudo apt install
 7657  sudo apt update
 7658  sudo apt install pulseaudio
 7659  w
 7660  cht.sh useeffect has a missing dependency
 7661  exit
 7662  cht.sh try catch else
 7663  w
 7664  cht.sh sending a json object to a POST endpoint in typescript
 7665  w
 7666  cht.sh sending a json object to a POST endpoint in typescript
 7667  w
 7668  exit
 7669  w
 7670  rm  ./src/public/uploads/*.json
 7671  w
 7672  j web
 7673  cd src/public/uploads/signatures
 7674  touch signature.json
 7675  exit
 7676  w
 7677  cd src/public/la
 7678  ls
 7679  cd src/public
 7680  la
 7681  cd uploads
 7682  la
 7683  cd signatures
 7684  la
 7685  w
 7686  cd ..
 7687  la
 7688  cd webapp
 7689  la
 7690  cd src
 7691  la
 7692  cd public
 7693  la
 7694  cd uploads
 7695  la
 7696  cd signatures
 7697  la
 7698  ls
 7699  touch signature.json
 7700  ls
 7701  w
 7702  ls
 7703  la
 7704  dupload upload .* /backup/serval/home/
 7705  w
 7706  j web
 7707  cd src
 7708  vim app/api/encodewm/route.ts
 7709  w
 7710  dupload --help
 7711  dupload
 7712  dupload upload .* /backup/serval/home/
 7713  cd ..
 7714  git clone git@github.com:vercel/app-playground.git
 7715  mv app-playground app-router-example
 7716  mv app-router-example app-router-template
 7717  w
 7718  j w
 7719  cd ../w
 7720  j web
 7721  w
 7722  yarn add util
 7723  w
 7724  java -jar /home/o/dev/webapp/src/utils/openstego.jar --embed --algorithm=randomlsb --messagefile={"message":"caa","signature":"0x4cdc72407ffc806e653340ddbab485a05260285bcc62abd9bf167af4b01f3cf01cced4890bb59247c09fe570577c245034800d6bc0035bd75f93f344a53788841c"} --coverfile=/home/o/dev/webapp/src/public/uploads/wowm.png --stegofile=/home/o/dev/webapp/src/public/uploads/wwm.png'
 7725  java -jar /home/o/dev/webapp/src/utils/openstego.jar --embed --algorithm=randomlsb --messagefile={"message":"caa","signature":"0x4cdc72407ffc806e653340ddbab485a05260285bcc62abd9bf167af4b01f3cf01cced4890bb59247c09fe570577c245034800d6bc0035bd75f93f344a53788841c"} --coverfile=/home/o/dev/webapp/src/public/uploads/wowm.png --stegofile=/home/o/dev/webapp/src/public/uploads/wwm.png;
 7726  java -jar /home/o/dev/webapp/src/utils/openstego.jar --embed --algorithm=randomlsb --messagefile=/home/o/dev/webapp/src/public/uploads/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/wowm.png --stegofile=/home/o/dev/webapp/src/public/uploads/wwm.png;\n
 7727  java -jar /home/o/dev/webapp/src/utils/openstego.jar --embed --algorithm=randomlsb --messagefile=/home/o/dev/webapp/src/public/uploads/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/original_image.png --stegofile=/home/o/dev/webapp/src/public/encoded/encoded_image.png\n
 7728  cd src
 7729  java -jar /home/o/dev/webapp/src/utils/openstego.jar --embed --algorithm=randomlsb --messagefile=/home/o/dev/webapp/src/public/uploads/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/original_image.png --stegofile=/home/o/dev/webapp/src/public/encoded/encoded_image.png\n
 7730  java -jar /home/o/dev/webapp/src/utils/openstego.jar --embed --algorithm=randomlsb --messagefile=/home/o/dev/webapp/src/public/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/original_image.png --stegofile=/home/o/dev/webapp/src/public/encoded/encoded_image.png\n
 7731  w
 7732  cd src/public
 7733  la
 7734  cd signatures
 7735  la
 7736  ls
 7737  cd signature.json
 7738  ls
 7739  cd ..
 7740  ls
 7741  rmdir signature.json
 7742  w
 7743  exit
 7744  w
 7745  exit
 7746  j web
 7747  w
 7748  j chain
 7749  npx hardhat node
 7750  w
 7751  exit
 7752  w
 7753  j chain
 7754  npx hardhat node
 7755  w
 7756  htop
 7757  exit
 7758  w
 7759  htop
 7760  j chain
 7761  la
 7762  mv ~/.env-example ~/dev/chain
 7763  cd ~
 7764  history > tmp/loggrep
 7765  cd dev
 7766  find | grep "ETH_NODE_URI"
 7767  find | grep "eth-{{networkName}}.alchemyapi."
 7768  find | grep "{{networkName}}.alchemyapi."
 7769  git status
 7770  git add .
 7771  git status
 7772  git commit -m "initial commit"
 7773  htop
 7774  git status
 7775  yarn
 7776  htop
 7777  j chain
 7778  git status
 7779  git checkout main
 7780  git restore --staged package.json
 7781  git checkout main
 7782  git commit -m "restore old package.json"
 7783  cd ..
 7784  cd chain
 7785  exit
 7786  htop
 7787  j chain
 7788  la
 7789  git checkout main
 7790  la
 7791  cd ..
 7792  rm -rm chain
 7793  sudo rm -rm chain
 7794  rm -rf chain
 7795  cd /run/timeshift/backup/timeshift/snapshots/
 7796  ls
 7797  cd 2023-09-22_13-31-04
 7798  ls
 7799  cd localhost/home/o/dev
 7800  ls
 7801  thunar .
 7802  j dev
 7803  ls
 7804  mv chain chainOld
 7805  mv chainOld w-backups
 7806  ls
 7807  git clone git@github.com:anegg0/chain.git
 7808  cd chain
 7809  yarn
 7810  npx hardhat node
 7811  cd /run/timeshift/backup/timeshift/snapshots/
 7812  ls
 7813  cd 2023-10-01_16-00-02
 7814  cd localhost/home/o/dev/chain
 7815  j chain
 7816  npx hardhat
 7817  npx hardhat run node
 7818  history
 7819  history --help
 7820  yarn hardhat node
 7821  pass list
 7822  pass metamasktestphrase
 7823  pass metamasktest
 7824  yarn hardhat node
 7825  cd ..
 7826  find | grep "storage.nft"
 7827  git clone git@github.com:mikeal/nft-storage-uploader.git
 7828  cd src/components/
 7829  ls
 7830  node ./uploadNftNoConstExport.js
 7831  yarn add -D nft.storage
 7832  node ./uploadNftNoConstExport.js
 7833  w
 7834  node ./uploadNftNoConstExport.js
 7835  node ./uploadNftNoConstExport.ts
 7836  ts-node-esm ./uploadNftNoConstExport.ts
 7837  yarn add @types/mime
 7838  ts-node-esm ./uploadNftNoConstExport.ts
 7839  ts-node-esm ./StoreOnStorageNFT.ts
 7840  ts-node-esm ./IpfsStorage.ts
 7841  cd src/components
 7842  ts-node-esm ./IpfsStorage.ts
 7843  ts-node-esm ./storr.ts
 7844  node ./storr.ts
 7845  node ./storr.js
 7846  exit
 7847  cd src/components
 7848  node ./storr.js
 7849  cd ..
 7850  cd app/api/Ipfs
 7851  node ./storr.js
 7852  cd ../..
 7853  j weba
 7854  cd src/app/api/Ipfs
 7855  node ./storr.js
 7856  w
 7857  node ./storr.js
 7858  mv storr.js storr.mjs
 7859  node ./storr.js
 7860  node ./storr.mjs
 7861  ls
 7862  nvm node
 7863  nvm current
 7864  nvm use 16
 7865  node ./storr.mjs
 7866  cd api/Ipfs
 7867  ts-node-esm ./uploadNftNoConstExport.ts
 7868  ts-node-esm ./storr.ts
 7869  node ./storr.mjs
 7870  exit
 7871  ts-node-esm ./storr.ts
 7872  w
 7873  ts-node-esm ./storr.ts
 7874  cd ../..
 7875  cd ..
 7876  j webap
 7877  ls
 7878  cd src
 7879  ls
 7880  cd public
 7881  ls
 7882  cd uploads
 7883  ls
 7884  java -jar openstego.jar --embed --algorithm=randomlsb --messagefile=/home/o/dev/webapp/src/public/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/original_image.png --stegofile=/home/o/dev/webapp/src/public/encoded/encoded_image.png
 7885  cd ../..
 7886  cd ..
 7887  java -jar openstego.jar --embed --algorithm=randomlsb --messagefile=/home/o/dev/webapp/src/public/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/original_image.png --stegofile=/home/o/dev/webapp/src/public/encoded/encoded_image.png
 7888  java -jar openstego.jar --embed --messagefile=/home/o/dev/webapp/src/public/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/original_image.png --stegofile=/home/o/dev/webapp/src/public/encoded/encoded_image.png
 7889  java -jar openstego.jar --embed --algorithm=randomlsb --messagefile=/home/o/dev/webapp/src/public/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/original_image.png --stegofile=/home/o/dev/webapp/src/public/encoded/encoded_image.png
 7890  java -jar openstego.jar --embed --messagefile=/home/o/dev/webapp/src/public/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/original_image.png --stegofile=/home/o/dev/webapp/src/public/encoded/encoded_image.png
 7891  java -jar openstego.jar --embed --algorithm=AES128 --messagefile=/home/o/dev/webapp/src/public/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/original_image.png --stegofile=/home/o/dev/webapp/src/public/encoded/encoded_image.png
 7892  java -jar openstego.jar algorythms
 7893  java -jar openstego.jar algorithms
 7894  java -jar openstego.jar --embed --algorithm=DWTDugad --messagefile=/home/o/dev/webapp/src/public/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/original_image.png --stegofile=/home/o/dev/webapp/src/public/encoded/encoded_image.png
 7895  java -jar openstego.jar --embed  --messagefile=/home/o/dev/webapp/src/public/signatures/signature.json --coverfile=/home/o/dev/webapp/src/public/uploads/original_image.png --stegofile=/home/o/dev/webapp/src/public/encoded/encoded_image.png
 7896  exit
 7897  j w
 7898  j ipfs


java -jar openstego.jar embed -a randomlsb -mf /home/o/dev/webapp/src/public/signatures/signature.json -cf /home/o/dev/webapp/src/public/uploads/original_image.png -sf test.png
